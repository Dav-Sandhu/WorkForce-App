var fE=Object.defineProperty,gE=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,n)=>(typeof require<"u"?require:t)[n]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')}),qf=(e,t)=>{for(var n in t)fE(e,n,{get:t[n],enumerable:!0})},yE={};qf(yE,{Abs:()=>il,Acos:()=>Xs,Acosh:()=>Zs,AdadeltaOptimizer:()=>cy,AdagradOptimizer:()=>my,AdamOptimizer:()=>fy,AdamaxOptimizer:()=>gy,Add:()=>Ka,AddN:()=>Js,All:()=>ol,Any:()=>ll,ArgMax:()=>ul,ArgMin:()=>pl,Asin:()=>Ys,Asinh:()=>Qs,Atan:()=>ei,Atan2:()=>ni,Atanh:()=>ti,AvgPool:()=>ri,AvgPool3D:()=>dl,AvgPool3DGrad:()=>vp,AvgPoolGrad:()=>xp,BackendWasm:()=>e_,BatchMatMul:()=>ai,BatchToSpaceND:()=>hl,Bincount:()=>cl,BitwiseAnd:()=>ml,BroadcastArgs:()=>wp,BroadcastTo:()=>C0,Callback:()=>aS,CallbackList:()=>iI,Cast:()=>si,Ceil:()=>ii,ClipByValue:()=>Xa,Complex:()=>Xh,ComplexAbs:()=>kp,Concat:()=>fl,Conv2D:()=>oi,Conv2DBackpropFilter:()=>Zh,Conv2DBackpropInput:()=>li,Conv3D:()=>ui,Conv3DBackpropFilterV2:()=>gl,Conv3DBackpropInputV2:()=>yl,Cos:()=>pi,Cosh:()=>di,CropAndResize:()=>xl,Cumprod:()=>bl,Cumsum:()=>hi,CustomCallback:()=>lI,DataStorage:()=>jh,DenseBincount:()=>Ip,DepthToSpace:()=>vl,DepthwiseConv2dNative:()=>ci,DepthwiseConv2dNativeBackpropFilter:()=>Jh,DepthwiseConv2dNativeBackpropInput:()=>Yh,Diag:()=>Sp,Dilation2D:()=>mi,Dilation2DBackpropFilter:()=>Bo,Dilation2DBackpropInput:()=>Po,Draw:()=>eg,ENV:()=>Yf,EarlyStopping:()=>sS,Einsum:()=>Qh,Elu:()=>gi,EluGrad:()=>wl,Environment:()=>N0,Equal:()=>kl,Erf:()=>yi,Exp:()=>bi,ExpandDims:()=>Il,Expm1:()=>xi,FFT:()=>ec,Fill:()=>Np,FlipLeftRight:()=>Sl,Floor:()=>vi,FloorDiv:()=>wi,FromPixels:()=>mh,FusedBatchNorm:()=>ki,FusedConv2D:()=>$s,FusedDepthwiseConv2D:()=>As,GPGPUContext:()=>uh,GatherNd:()=>Tl,GatherV2:()=>Nl,GraphModel:()=>tx,Greater:()=>Cl,GreaterEqual:()=>Ii,History:()=>oI,IFFT:()=>tc,Identity:()=>Si,Imag:()=>nc,InputSpec:()=>$t,IsFinite:()=>Ni,IsInf:()=>Ti,IsNan:()=>Ci,KernelBackend:()=>yp,LRN:()=>Ai,LRNGrad:()=>Dl,LayerVariable:()=>Qk,LayersModel:()=>la,LeakyRelu:()=>_i,Less:()=>_l,LessEqual:()=>El,LinSpace:()=>$l,Log:()=>Ei,Log1p:()=>$i,LogSoftmax:()=>E0,LogicalAnd:()=>Al,LogicalNot:()=>Fl,LogicalOr:()=>Rl,LogicalXor:()=>_0,LowerBound:()=>l$,MathBackendCPU:()=>lm,MathBackendWebGL:()=>dm,MatrixBandPart:()=>u$,Max:()=>Fi,MaxPool:()=>Di,MaxPool3D:()=>Ml,MaxPool3DGrad:()=>Cp,MaxPoolGrad:()=>Tp,MaxPoolWithArgmax:()=>_p,Maximum:()=>Ri,Mean:()=>Mi,Min:()=>Oi,Minimum:()=>Li,MirrorPad:()=>zi,Mod:()=>Pi,MomentumOptimizer:()=>yy,Multinomial:()=>Ol,Multiply:()=>Bi,Neg:()=>Ll,NonMaxSuppressionV3:()=>Pl,NonMaxSuppressionV4:()=>Bl,NonMaxSuppressionV5:()=>Wl,NotEqual:()=>zl,OP_SCOPE_SUFFIX:()=>rg,OneHot:()=>Wi,OnesLike:()=>Vl,Optimizer:()=>ya,OptimizerConstructors:()=>Ok,Pack:()=>Ul,PadV2:()=>Vi,Pool:()=>p$,Pow:()=>Ui,Prelu:()=>Gi,Prod:()=>Hi,RMSPropOptimizer:()=>by,RNN:()=>Zr,RaggedGather:()=>rc,RaggedRange:()=>ac,RaggedTensorToTensor:()=>sc,Range:()=>Ep,Rank:()=>jm,Real:()=>ic,RealDiv:()=>fi,Reciprocal:()=>ji,Reduction:()=>dn,Relu:()=>qi,Relu6:()=>Zi,Reshape:()=>Gl,ResizeBilinear:()=>Xi,ResizeBilinearGrad:()=>jl,ResizeNearestNeighbor:()=>Ki,ResizeNearestNeighborGrad:()=>Hl,Reverse:()=>Ji,RotateWithOffset:()=>ou,Round:()=>Yi,Rsqrt:()=>Qi,SGDOptimizer:()=>Vc,ScatterNd:()=>ql,SearchSorted:()=>Xl,Select:()=>Zl,Selu:()=>eo,Sequential:()=>Yo,Sigmoid:()=>ao,Sign:()=>ro,Sin:()=>to,Sinh:()=>no,Slice:()=>Jl,Softmax:()=>lo,Softplus:()=>so,SpaceToBatchND:()=>Yl,SparseFillEmptyRows:()=>$p,SparseReshape:()=>eu,SparseSegmentMean:()=>Ap,SparseSegmentSum:()=>Fp,SparseToDense:()=>tu,SplitV:()=>Ql,Sqrt:()=>io,Square:()=>Rp,SquaredDifference:()=>uo,StaticRegexReplace:()=>Dp,Step:()=>Ja,StridedSlice:()=>nu,StringNGrams:()=>Mp,StringSplit:()=>Op,StringToHashBucketFast:()=>Lp,Sub:()=>po,Sum:()=>oo,SymbolicTensor:()=>Ir,Tan:()=>ho,Tanh:()=>co,Tensor:()=>Ae,TensorBuffer:()=>At,TensorScatterUpdate:()=>Kl,Tile:()=>Za,TopK:()=>ru,Transform:()=>au,Transpose:()=>oa,Unique:()=>zp,Unpack:()=>su,UnsortedSegmentSum:()=>Pp,UpperBound:()=>d$,Variable:()=>Fs,ZerosLike:()=>iu,_FusedMatMul:()=>Es,abs:()=>Et,acos:()=>og,acosh:()=>lg,add:()=>J,addN:()=>t1,all:()=>dc,any:()=>ap,argMax:()=>Ms,argMin:()=>ug,asin:()=>pg,asinh:()=>dg,atan:()=>hg,atan2:()=>cg,atanh:()=>mg,avgPool:()=>ma,avgPool3d:()=>gg,backend:()=>e1,backend_util:()=>N,basicLSTMCell:()=>s1,batchNorm:()=>mo,batchNorm2d:()=>yg,batchNorm3d:()=>bg,batchNorm4d:()=>xg,batchToSpaceND:()=>jp,bincount:()=>vg,bitwiseAnd:()=>i1,booleanMaskAsync:()=>Z1,broadcastArgs:()=>o1,broadcastTo:()=>Ss,broadcast_util:()=>lu,browser:()=>ad,buffer:()=>Pe,callbacks:()=>qV,cast:()=>se,ceil:()=>wg,clipByValue:()=>on,clone:()=>Br,complex:()=>pa,concat:()=>at,concat1d:()=>kg,concat2d:()=>Ig,concat3d:()=>Sg,concat4d:()=>Ng,constraints:()=>nI,conv1d:()=>hc,conv2d:()=>fn,conv2dTranspose:()=>cc,conv3d:()=>Cg,conv3dTranspose:()=>_g,copyRegisteredKernels:()=>f$,cos:()=>qp,cosh:()=>mc,cosineWindow:()=>Lc,cumprod:()=>op,cumsum:()=>fc,customGrad:()=>Gr,data:()=>_S,denseBincount:()=>vh,deprecationWarn:()=>Q0,depthToSpace:()=>Eg,depthwiseConv2d:()=>fo,deregisterOp:()=>ZV,device_util:()=>Up,diag:()=>u1,dilation2d:()=>$g,disableDeprecationWarnings:()=>NA,dispose:()=>_e,disposeVariables:()=>TA,div:()=>fe,divNoNan:()=>Ag,dot:()=>Fg,dropout:()=>ly,einsum:()=>d1,elu:()=>uu,enableDebugMode:()=>SA,enableProdMode:()=>IA,enclosingPowerOfTwo:()=>uy,engine:()=>hr,ensureShape:()=>h1,env:()=>H,equal:()=>Gn,erf:()=>Rg,euclideanNorm:()=>Og,exp:()=>gn,expandDims:()=>Qt,expm1:()=>Lg,eye:()=>gc,fft:()=>nd,fill:()=>Un,findBackend:()=>RA,findBackendFactory:()=>DA,floor:()=>du,floorDiv:()=>pc,forceHalfFloat:()=>K2,fused:()=>Ko,gather:()=>hu,gatherND:()=>ek,gather_util:()=>wy,getBackend:()=>AA,getGradient:()=>Gm,getKernel:()=>fh,getKernelsForBackend:()=>gh,getThreadsCount:()=>Jue,gpgpu_util:()=>T2,grad:()=>$R,grads:()=>AR,greater:()=>kn,greaterEqual:()=>fa,ifft:()=>qo,imag:()=>Kp,image:()=>Qn,inTopKAsync:()=>tk,initializers:()=>rI,input:()=>kI,io:()=>nn,irfft:()=>$c,isFinite:()=>zg,isInf:()=>Pg,isNaN:()=>Bg,keep:()=>Mt,kernel_impls:()=>Xr,layers:()=>aI,leakyRelu:()=>Xp,less:()=>Uo,lessEqual:()=>Qa,linalg:()=>hy,linspace:()=>y1,loadGraphModel:()=>nG,loadGraphModelSync:()=>rG,loadLayersModel:()=>UW,localResponseNormalization:()=>Wg,log:()=>Hn,log1p:()=>Zp,logSigmoid:()=>Vg,logSoftmax:()=>bc,logSumExp:()=>xc,logicalAnd:()=>fr,logicalNot:()=>Jp,logicalOr:()=>vc,logicalXor:()=>Ug,losses:()=>ck,lowerBound:()=>x1,matMul:()=>Oe,math:()=>Ik,max:()=>rr,maxPool:()=>Ut,maxPool3d:()=>Gg,maxPoolWithArgmax:()=>v1,maximum:()=>Kr,mean:()=>xt,memory:()=>xh,meshgrid:()=>w1,metrics:()=>tS,min:()=>Vo,minimum:()=>za,mirrorPad:()=>Hg,mod:()=>jg,model:()=>jW,models:()=>nS,moments:()=>Yp,movingAverage:()=>J1,mul:()=>z,multiRNNCell:()=>k1,multinomial:()=>I1,neg:()=>ht,nextFrame:()=>ky,norm:()=>pu,notEqual:()=>Ps,oneHot:()=>Go,ones:()=>Vn,onesLike:()=>jn,op:()=>L,outerProduct:()=>S1,pad:()=>$r,pad1d:()=>N1,pad2d:()=>T1,pad3d:()=>C1,pad4d:()=>_1,pool:()=>qg,pow:()=>da,prelu:()=>ed,print:()=>ig,prod:()=>Kg,profile:()=>CA,raggedGather:()=>E1,raggedRange:()=>$1,raggedTensorToTensor:()=>A1,rand:()=>F1,randomGamma:()=>O1,randomNormal:()=>kc,randomStandardNormal:()=>L1,randomUniform:()=>es,randomUniformInt:()=>z1,range:()=>Bs,ready:()=>$A,real:()=>Ho,reciprocal:()=>Qg,registerBackend:()=>uc,registerCallbackConstructor:()=>KW,registerGradient:()=>$0,registerKernel:()=>Bp,registerOp:()=>XV,regularizers:()=>rS,relu:()=>et,relu6:()=>Ic,removeBackend:()=>FA,reshape:()=>P,reverse:()=>sr,reverse1d:()=>P1,reverse2d:()=>B1,reverse3d:()=>W1,reverse4d:()=>V1,rfft:()=>rd,round:()=>Sc,rsqrt:()=>Nc,scalar:()=>we,scatterND:()=>Y1,scatter_util:()=>Rc,searchSorted:()=>wc,selu:()=>Tc,separableConv2d:()=>cu,sequential:()=>qW,serialization:()=>ne,setBackend:()=>EA,setPlatform:()=>MA,setThreadsCount:()=>Zue,setWasmPath:()=>Kue,setWasmPaths:()=>Xue,setWebGLContext:()=>ZN,setdiff1dAsync:()=>U1,shared:()=>sx,sigmoid:()=>mr,sign:()=>ey,signal:()=>hk,sin:()=>Cc,sinh:()=>_c,slice:()=>Ue,slice1d:()=>td,slice2d:()=>Ec,slice3d:()=>mu,slice4d:()=>jo,slice_util:()=>zt,softmax:()=>ts,softplus:()=>go,spaceToBatchND:()=>Qp,sparse:()=>mk,sparseToDense:()=>Q1,spectral:()=>dk,split:()=>En,sqrt:()=>rn,square:()=>rt,squaredDifference:()=>Ac,squeeze:()=>ns,stack:()=>Lt,step:()=>yo,stridedSlice:()=>ty,string:()=>fk,sub:()=>he,sum:()=>ge,sumOutType:()=>lc,tan:()=>ny,tanh:()=>Ls,tensor:()=>mn,tensor1d:()=>Qe,tensor2d:()=>Wr,tensor3d:()=>Fc,tensor4d:()=>Pa,tensor5d:()=>G1,tensor6d:()=>H1,tensorScatterUpdate:()=>q1,tensor_util:()=>Sr,test_util:()=>R1,tidy:()=>W,tile:()=>Wn,time:()=>_A,topk:()=>ay,train:()=>fs,transpose:()=>ze,truncatedNormal:()=>Mc,unique:()=>sy,unregisterGradient:()=>m$,unregisterKernel:()=>c$,unsortedSegmentSum:()=>Oc,unstack:()=>Nt,upcastType:()=>ar,upperBound:()=>K1,util:()=>v,valueAndGrad:()=>FR,valueAndGrads:()=>RR,variable:()=>iy,variableGrads:()=>b1,version:()=>ape,version_converter:()=>sG,version_core:()=>Y3,version_cpu:()=>r6,version_layers:()=>Gy,version_wasm:()=>Yue,version_webgl:()=>j7,webgl:()=>q7,webgl_util:()=>XN,where:()=>qt,whereAsync:()=>oy,zeros:()=>vt,zerosLike:()=>He});var bE=Object.create,Kf=Object.defineProperty,xE=Object.getOwnPropertyDescriptor,vE=Object.getOwnPropertyNames,wE=Object.getPrototypeOf,kE=Object.prototype.hasOwnProperty,Rt=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Ee=(e,t)=>{for(var n in t)Kf(e,n,{get:t[n],enumerable:!0})},IE=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let a of vE(t))!kE.call(e,a)&&a!==n&&Kf(e,a,{get:()=>t[a],enumerable:!(r=xE(t,a))||r.enumerable});return e},qa=(e,t,n)=>(n=e!=null?bE(wE(e)):{},IE(t||!e||!e.__esModule?Kf(n,"default",{value:e,enumerable:!0}):n,e)),SE=Rt((e,t)=>{t.exports=r;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function r(S,M,B){this.low=S|0,this.high=M|0,this.unsigned=!!B}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0});function a(S){return(S&&S.__isLong__)===!0}r.isLong=a;var s={},i={};function o(S,M){var B,U,G;return M?(S>>>=0,(G=0<=S&&S<256)&&(U=i[S],U)?U:(B=p(S,(S|0)<0?-1:0,!0),G&&(i[S]=B),B)):(S|=0,(G=-128<=S&&S<128)&&(U=s[S],U)?U:(B=p(S,S<0?-1:0,!1),G&&(s[S]=B),B))}r.fromInt=o;function u(S,M){if(isNaN(S))return M?w:x;if(M){if(S<0)return w;if(S>=g)return A}else{if(S<=-y)return R;if(S+1>=y)return E}return S<0?u(-S,M).neg():p(S%f|0,S/f|0,M)}r.fromNumber=u;function p(S,M,B){return new r(S,M,B)}r.fromBits=p;var l=Math.pow;function d(S,M,B){if(S.length===0)throw Error("empty string");if(S==="NaN"||S==="Infinity"||S==="+Infinity"||S==="-Infinity")return x;if(typeof M=="number"?(B=M,M=!1):M=!!M,B=B||10,B<2||36<B)throw RangeError("radix");var U;if((U=S.indexOf("-"))>0)throw Error("interior hyphen");if(U===0)return d(S.substring(1),M,B).neg();for(var G=u(l(B,8)),K=x,j=0;j<S.length;j+=8){var X=Math.min(8,S.length-j),ee=parseInt(S.substring(j,j+X),B);if(X<8){var Z=u(l(B,X));K=K.mul(Z).add(u(ee))}else K=K.mul(G),K=K.add(u(ee))}return K.unsigned=M,K}r.fromString=d;function h(S,M){return typeof S=="number"?u(S,M):typeof S=="string"?d(S,M):p(S.low,S.high,typeof M=="boolean"?M:S.unsigned)}r.fromValue=h;var c=65536,m=1<<24,f=c*c,g=f*f,y=g/2,b=o(m),x=o(0);r.ZERO=x;var w=o(0,!0);r.UZERO=w;var I=o(1);r.ONE=I;var T=o(1,!0);r.UONE=T;var C=o(-1);r.NEG_ONE=C;var E=p(-1,2147483647,!1);r.MAX_VALUE=E;var A=p(-1,-1,!0);r.MAX_UNSIGNED_VALUE=A;var R=p(0,-2147483648,!1);r.MIN_VALUE=R;var F=r.prototype;F.toInt=function(){return this.unsigned?this.low>>>0:this.low},F.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},F.toString=function(S){if(S=S||10,S<2||36<S)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(R)){var M=u(S),B=this.div(M),U=B.mul(M).sub(this);return B.toString(S)+U.toInt().toString(S)}else return"-"+this.neg().toString(S);for(var G=u(l(S,6),this.unsigned),K=this,j="";;){var X=K.div(G),ee=K.sub(X.mul(G)).toInt()>>>0,Z=ee.toString(S);if(K=X,K.isZero())return Z+j;for(;Z.length<6;)Z="0"+Z;j=""+Z+j}},F.getHighBits=function(){return this.high},F.getHighBitsUnsigned=function(){return this.high>>>0},F.getLowBits=function(){return this.low},F.getLowBitsUnsigned=function(){return this.low>>>0},F.getNumBitsAbs=function(){if(this.isNegative())return this.eq(R)?64:this.neg().getNumBitsAbs();for(var S=this.high!=0?this.high:this.low,M=31;M>0&&!(S&1<<M);M--);return this.high!=0?M+33:M+1},F.isZero=function(){return this.high===0&&this.low===0},F.eqz=F.isZero,F.isNegative=function(){return!this.unsigned&&this.high<0},F.isPositive=function(){return this.unsigned||this.high>=0},F.isOdd=function(){return(this.low&1)===1},F.isEven=function(){return(this.low&1)===0},F.equals=function(S){return a(S)||(S=h(S)),this.unsigned!==S.unsigned&&this.high>>>31===1&&S.high>>>31===1?!1:this.high===S.high&&this.low===S.low},F.eq=F.equals,F.notEquals=function(S){return!this.eq(S)},F.neq=F.notEquals,F.ne=F.notEquals,F.lessThan=function(S){return this.comp(S)<0},F.lt=F.lessThan,F.lessThanOrEqual=function(S){return this.comp(S)<=0},F.lte=F.lessThanOrEqual,F.le=F.lessThanOrEqual,F.greaterThan=function(S){return this.comp(S)>0},F.gt=F.greaterThan,F.greaterThanOrEqual=function(S){return this.comp(S)>=0},F.gte=F.greaterThanOrEqual,F.ge=F.greaterThanOrEqual,F.compare=function(S){if(a(S)||(S=h(S)),this.eq(S))return 0;var M=this.isNegative(),B=S.isNegative();return M&&!B?-1:!M&&B?1:this.unsigned?S.high>>>0>this.high>>>0||S.high===this.high&&S.low>>>0>this.low>>>0?-1:1:this.sub(S).isNegative()?-1:1},F.comp=F.compare,F.negate=function(){return!this.unsigned&&this.eq(R)?R:this.not().add(I)},F.neg=F.negate,F.add=function(S){a(S)||(S=h(S));var M=this.high>>>16,B=this.high&65535,U=this.low>>>16,G=this.low&65535,K=S.high>>>16,j=S.high&65535,X=S.low>>>16,ee=S.low&65535,Z=0,re=0,te=0,ae=0;return ae+=G+ee,te+=ae>>>16,ae&=65535,te+=U+X,re+=te>>>16,te&=65535,re+=B+j,Z+=re>>>16,re&=65535,Z+=M+K,Z&=65535,p(te<<16|ae,Z<<16|re,this.unsigned)},F.subtract=function(S){return a(S)||(S=h(S)),this.add(S.neg())},F.sub=F.subtract,F.multiply=function(S){if(this.isZero())return x;if(a(S)||(S=h(S)),n){var M=n.mul(this.low,this.high,S.low,S.high);return p(M,n.get_high(),this.unsigned)}if(S.isZero())return x;if(this.eq(R))return S.isOdd()?R:x;if(S.eq(R))return this.isOdd()?R:x;if(this.isNegative())return S.isNegative()?this.neg().mul(S.neg()):this.neg().mul(S).neg();if(S.isNegative())return this.mul(S.neg()).neg();if(this.lt(b)&&S.lt(b))return u(this.toNumber()*S.toNumber(),this.unsigned);var B=this.high>>>16,U=this.high&65535,G=this.low>>>16,K=this.low&65535,j=S.high>>>16,X=S.high&65535,ee=S.low>>>16,Z=S.low&65535,re=0,te=0,ae=0,ie=0;return ie+=K*Z,ae+=ie>>>16,ie&=65535,ae+=G*Z,te+=ae>>>16,ae&=65535,ae+=K*ee,te+=ae>>>16,ae&=65535,te+=U*Z,re+=te>>>16,te&=65535,te+=G*ee,re+=te>>>16,te&=65535,te+=K*X,re+=te>>>16,te&=65535,re+=B*Z+U*ee+G*X+K*j,re&=65535,p(ae<<16|ie,re<<16|te,this.unsigned)},F.mul=F.multiply,F.divide=function(S){if(a(S)||(S=h(S)),S.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&S.low===-1&&S.high===-1)return this;var M=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,S.low,S.high);return p(M,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:x;var B,U,G;if(this.unsigned){if(S.unsigned||(S=S.toUnsigned()),S.gt(this))return w;if(S.gt(this.shru(1)))return T;G=w}else{if(this.eq(R)){if(S.eq(I)||S.eq(C))return R;if(S.eq(R))return I;var K=this.shr(1);return B=K.div(S).shl(1),B.eq(x)?S.isNegative()?I:C:(U=this.sub(S.mul(B)),G=B.add(U.div(S)),G)}else if(S.eq(R))return this.unsigned?w:x;if(this.isNegative())return S.isNegative()?this.neg().div(S.neg()):this.neg().div(S).neg();if(S.isNegative())return this.div(S.neg()).neg();G=x}for(U=this;U.gte(S);){B=Math.max(1,Math.floor(U.toNumber()/S.toNumber()));for(var j=Math.ceil(Math.log(B)/Math.LN2),X=j<=48?1:l(2,j-48),ee=u(B),Z=ee.mul(S);Z.isNegative()||Z.gt(U);)B-=X,ee=u(B,this.unsigned),Z=ee.mul(S);ee.isZero()&&(ee=I),G=G.add(ee),U=U.sub(Z)}return G},F.div=F.divide,F.modulo=function(S){if(a(S)||(S=h(S)),n){var M=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,S.low,S.high);return p(M,n.get_high(),this.unsigned)}return this.sub(this.div(S).mul(S))},F.mod=F.modulo,F.rem=F.modulo,F.not=function(){return p(~this.low,~this.high,this.unsigned)},F.and=function(S){return a(S)||(S=h(S)),p(this.low&S.low,this.high&S.high,this.unsigned)},F.or=function(S){return a(S)||(S=h(S)),p(this.low|S.low,this.high|S.high,this.unsigned)},F.xor=function(S){return a(S)||(S=h(S)),p(this.low^S.low,this.high^S.high,this.unsigned)},F.shiftLeft=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?p(this.low<<S,this.high<<S|this.low>>>32-S,this.unsigned):p(0,this.low<<S-32,this.unsigned)},F.shl=F.shiftLeft,F.shiftRight=function(S){return a(S)&&(S=S.toInt()),(S&=63)===0?this:S<32?p(this.low>>>S|this.high<<32-S,this.high>>S,this.unsigned):p(this.high>>S-32,this.high>=0?0:-1,this.unsigned)},F.shr=F.shiftRight,F.shiftRightUnsigned=function(S){if(a(S)&&(S=S.toInt()),S&=63,S===0)return this;var M=this.high;if(S<32){var B=this.low;return p(B>>>S|M<<32-S,M>>>S,this.unsigned)}else return S===32?p(M,0,this.unsigned):p(M>>>S-32,0,this.unsigned)},F.shru=F.shiftRightUnsigned,F.shr_u=F.shiftRightUnsigned,F.toSigned=function(){return this.unsigned?p(this.low,this.high,!1):this},F.toUnsigned=function(){return this.unsigned?this:p(this.low,this.high,!0)},F.toBytes=function(S){return S?this.toBytesLE():this.toBytesBE()},F.toBytesLE=function(){var S=this.high,M=this.low;return[M&255,M>>>8&255,M>>>16&255,M>>>24,S&255,S>>>8&255,S>>>16&255,S>>>24]},F.toBytesBE=function(){var S=this.high,M=this.low;return[S>>>24,S>>>16&255,S>>>8&255,S&255,M>>>24,M>>>16&255,M>>>8&255,M&255]},r.fromBytes=function(S,M,B){return B?r.fromBytesLE(S,M):r.fromBytesBE(S,M)},r.fromBytesLE=function(S,M){return new r(S[0]|S[1]<<8|S[2]<<16|S[3]<<24,S[4]|S[5]<<8|S[6]<<16|S[7]<<24,M)},r.fromBytesBE=function(S,M){return new r(S[4]<<24|S[5]<<16|S[6]<<8|S[7],S[0]<<24|S[1]<<16|S[2]<<8|S[3],M)}}),NE=Rt(()=>{}),TE=Rt(()=>{}),CE=Rt((e,t)=>{(function(n,r,a){function s(p){var l=this,d=u();l.next=function(){var h=2091639*l.s0+l.c*23283064365386963e-26;return l.s0=l.s1,l.s1=l.s2,l.s2=h-(l.c=h|0)},l.c=1,l.s0=d(" "),l.s1=d(" "),l.s2=d(" "),l.s0-=d(p),l.s0<0&&(l.s0+=1),l.s1-=d(p),l.s1<0&&(l.s1+=1),l.s2-=d(p),l.s2<0&&(l.s2+=1),d=null}function i(p,l){return l.c=p.c,l.s0=p.s0,l.s1=p.s1,l.s2=p.s2,l}function o(p,l){var d=new s(p),h=l&&l.state,c=d.next;return c.int32=function(){return d.next()*4294967296|0},c.double=function(){return c()+(c()*2097152|0)*11102230246251565e-32},c.quick=c,h&&(typeof h=="object"&&i(h,d),c.state=function(){return i(d,{})}),c}function u(){var p=4022871197,l=function(d){d=String(d);for(var h=0;h<d.length;h++){p+=d.charCodeAt(h);var c=.02519603282416938*p;p=c>>>0,c-=p,c*=p,p=c>>>0,c-=p,p+=c*4294967296}return(p>>>0)*23283064365386963e-26};return l}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.alea=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),_E=Rt((e,t)=>{(function(n,r,a){function s(u){var p=this,l="";p.x=0,p.y=0,p.z=0,p.w=0,p.next=function(){var h=p.x^p.x<<11;return p.x=p.y,p.y=p.z,p.z=p.w,p.w^=p.w>>>19^h^h>>>8},u===(u|0)?p.x=u:l+=u;for(var d=0;d<l.length+64;d++)p.x^=l.charCodeAt(d)|0,p.next()}function i(u,p){return p.x=u.x,p.y=u.y,p.z=u.z,p.w=u.w,p}function o(u,p){var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&i(d,l),h.state=function(){return i(l,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor128=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),EE=Rt((e,t)=>{(function(n,r,a){function s(u){var p=this,l="";p.next=function(){var h=p.x^p.x>>>2;return p.x=p.y,p.y=p.z,p.z=p.w,p.w=p.v,(p.d=p.d+362437|0)+(p.v=p.v^p.v<<4^(h^h<<1))|0},p.x=0,p.y=0,p.z=0,p.w=0,p.v=0,u===(u|0)?p.x=u:l+=u;for(var d=0;d<l.length+64;d++)p.x^=l.charCodeAt(d)|0,d==l.length&&(p.d=p.x<<10^p.x>>>4),p.next()}function i(u,p){return p.x=u.x,p.y=u.y,p.z=u.z,p.w=u.w,p.v=u.v,p.d=u.d,p}function o(u,p){var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&i(d,l),h.state=function(){return i(l,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorwow=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),$E=Rt((e,t)=>{(function(n,r,a){function s(u){var p=this;p.next=function(){var d=p.x,h=p.i,c,m;return c=d[h],c^=c>>>7,m=c^c<<24,c=d[h+1&7],m^=c^c>>>10,c=d[h+3&7],m^=c^c>>>3,c=d[h+4&7],m^=c^c<<7,c=d[h+7&7],c=c^c<<13,m^=c^c<<9,d[h]=m,p.i=h+1&7,m};function l(d,h){var c,m=[];if(h===(h|0))m[0]=h;else for(h=""+h,c=0;c<h.length;++c)m[c&7]=m[c&7]<<15^h.charCodeAt(c)+m[c+1&7]<<13;for(;m.length<8;)m.push(0);for(c=0;c<8&&m[c]===0;++c);for(c==8?m[7]=-1:m[c],d.x=m,d.i=0,c=256;c>0;--c)d.next()}l(p,u)}function i(u,p){return p.x=u.x.slice(),p.i=u.i,p}function o(u,p){u==null&&(u=+new Date);var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,d&&(d.x&&i(d,l),h.state=function(){return i(l,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xorshift7=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),AE=Rt((e,t)=>{(function(n,r,a){function s(u){var p=this;p.next=function(){var d=p.w,h=p.X,c=p.i,m,f;return p.w=d=d+1640531527|0,f=h[c+34&127],m=h[c=c+1&127],f^=f<<13,m^=m<<17,f^=f>>>15,m^=m>>>12,f=h[c]=f^m,p.i=c,f+(d^d>>>16)|0};function l(d,h){var c,m,f,g,y,b=[],x=128;for(h===(h|0)?(m=h,h=null):(h=h+"\0",m=0,x=Math.max(x,h.length)),f=0,g=-32;g<x;++g)h&&(m^=h.charCodeAt((g+32)%h.length)),g===0&&(y=m),m^=m<<10,m^=m>>>15,m^=m<<4,m^=m>>>13,g>=0&&(y=y+1640531527|0,c=b[g&127]^=m+y,f=c==0?f+1:0);for(f>=128&&(b[(h&&h.length||0)&127]=-1),f=127,g=4*128;g>0;--g)m=b[f+34&127],c=b[f=f+1&127],m^=m<<13,c^=c<<17,m^=m>>>15,c^=c>>>12,b[f]=m^c;d.w=y,d.X=b,d.i=f}l(p,u)}function i(u,p){return p.i=u.i,p.w=u.w,p.X=u.X.slice(),p}function o(u,p){u==null&&(u=+new Date);var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,d&&(d.X&&i(d,l),h.state=function(){return i(l,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.xor4096=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),FE=Rt((e,t)=>{(function(n,r,a){function s(u){var p=this,l="";p.next=function(){var h=p.b,c=p.c,m=p.d,f=p.a;return h=h<<25^h>>>7^c,c=c-m|0,m=m<<24^m>>>8^f,f=f-h|0,p.b=h=h<<20^h>>>12^c,p.c=c=c-m|0,p.d=m<<16^c>>>16^f,p.a=f-h|0},p.a=0,p.b=0,p.c=-1640531527,p.d=1367130551,u===Math.floor(u)?(p.a=u/4294967296|0,p.b=u|0):l+=u;for(var d=0;d<l.length+20;d++)p.b^=l.charCodeAt(d)|0,p.next()}function i(u,p){return p.a=u.a,p.b=u.b,p.c=u.c,p.d=u.d,p}function o(u,p){var l=new s(u),d=p&&p.state,h=function(){return(l.next()>>>0)/4294967296};return h.double=function(){do var c=l.next()>>>11,m=(l.next()>>>0)/4294967296,f=(c+m)/(1<<21);while(f===0);return f},h.int32=l.next,h.quick=h,d&&(typeof d=="object"&&i(d,l),h.state=function(){return i(l,{})}),h}r&&r.exports?r.exports=o:a&&a.amd?a(function(){return o}):this.tychei=o})(e,typeof t=="object"&&t,typeof define=="function"&&define)}),RE=Rt(()=>{}),DE=Rt((e,t)=>{(function(n,r,a){var s=256,i=6,o=52,u="random",p=a.pow(s,i),l=a.pow(2,o),d=l*2,h=s-1,c;function m(I,T,C){var E=[];T=T==!0?{entropy:!0}:T||{};var A=b(y(T.entropy?[I,w(r)]:I==null?x():I,3),E),R=new f(E),F=function(){for(var S=R.g(i),M=p,B=0;S<l;)S=(S+B)*s,M*=s,B=R.g(1);for(;S>=d;)S/=2,M/=2,B>>>=1;return(S+B)/M};return F.int32=function(){return R.g(4)|0},F.quick=function(){return R.g(4)/4294967296},F.double=F,b(w(R.S),r),(T.pass||C||function(S,M,B,U){return U&&(U.S&&g(U,R),S.state=function(){return g(R,{})}),B?(a[u]=S,M):S})(F,A,"global"in T?T.global:this==a,T.state)}function f(I){var T,C=I.length,E=this,A=0,R=E.i=E.j=0,F=E.S=[];for(C||(I=[C++]);A<s;)F[A]=A++;for(A=0;A<s;A++)F[A]=F[R=h&R+I[A%C]+(T=F[A])],F[R]=T;(E.g=function(S){for(var M,B=0,U=E.i,G=E.j,K=E.S;S--;)M=K[U=h&U+1],B=B*s+K[h&(K[U]=K[G=h&G+M])+(K[G]=M)];return E.i=U,E.j=G,B})(s)}function g(I,T){return T.i=I.i,T.j=I.j,T.S=I.S.slice(),T}function y(I,T){var C=[],E=typeof I,A;if(T&&E=="object")for(A in I)try{C.push(y(I[A],T-1))}catch{}return C.length?C:E=="string"?I:I+"\0"}function b(I,T){for(var C=I+"",E,A=0;A<C.length;)T[h&A]=h&(E^=T[h&A]*19)+C.charCodeAt(A++);return w(T)}function x(){try{var I;return c&&(I=c.randomBytes)?I=I(s):(I=new Uint8Array(s),(n.crypto||n.msCrypto).getRandomValues(I)),w(I)}catch{var T=n.navigator,C=T&&T.plugins;return[+new Date,n,C,n.screen,w(r)]}}function w(I){return String.fromCharCode.apply(0,I)}if(b(a.random(),r),typeof t=="object"&&t.exports){t.exports=m;try{c=RE()}catch{}}else typeof define=="function"&&define.amd?define(function(){return m}):a["seed"+u]=m})(typeof self<"u"?self:e,[],Math)}),Hh=Rt((e,t)=>{var n=CE(),r=_E(),a=EE(),s=$E(),i=AE(),o=FE(),u=DE();u.alea=n,u.xor128=r,u.xorwow=a,u.xorshift7=s,u.xor4096=i,u.tychei=o,t.exports=u}),c0=Rt(()=>{}),Xf=Rt(()=>{}),m0=Rt(()=>{}),ME=Rt(()=>{}),OE=Rt(()=>{}),LE=Rt(()=>{}),zE=Rt((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};function s(){return j.buffer!=de&&Ge(j.buffer),Ie}function i(){return j.buffer!=de&&Ge(j.buffer),Te}function o(){return j.buffer!=de&&Ge(j.buffer),Re}function u(){return j.buffer!=de&&Ge(j.buffer),Be}function p(){return j.buffer!=de&&Ge(j.buffer),nt}var l=typeof a<"u"?a:{},d,h;l.ready=new Promise(function(D,q){d=D,h=q});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var m=Object.assign({},l),f=(D,q)=>{throw q},g=typeof window=="object",y=typeof importScripts=="function",b=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",x=l.ENVIRONMENT_IS_PTHREAD||!1,w="";function I(D){return l.locateFile?l.locateFile(D,w):w+D}var T,C,E;function A(D){D instanceof Qr||U("exiting due to exception: "+D)}if(b){var R=Xf(),F=m0();y?w=F.dirname(w)+"/":w=__dirname+"/",T=(q,le)=>(q=va(q)?new URL(q):F.normalize(q),R.readFileSync(q,le?void 0:"utf8")),E=q=>{var le=T(q,!0);return le.buffer||(le=new Uint8Array(le)),le},C=(q,le,Ne)=>{q=va(q)?new URL(q):F.normalize(q),R.readFile(q,function(Fe,Me){Fe?Ne(Fe):le(Me.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(q){if(!(q instanceof Qr))throw q}),process.on("unhandledRejection",function(q){throw q}),f=(q,le)=>{if(It())throw process.exitCode=q,le;A(le),process.exit(q)},l.inspect=function(){return"[Emscripten Module object]"};let D;try{D=ME()}catch(q){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),q}global.Worker=D.Worker}else(g||y)&&(y?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),typeof r<"u"&&r&&(w=r),w.indexOf("blob:")!==0?w=w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):w="",b||(T=D=>{var q=new XMLHttpRequest;return q.open("GET",D,!1),q.send(null),q.responseText},y&&(E=D=>{var q=new XMLHttpRequest;return q.open("GET",D,!1),q.responseType="arraybuffer",q.send(null),new Uint8Array(q.response)}),C=(D,q,le)=>{var Ne=new XMLHttpRequest;Ne.open("GET",D,!0),Ne.responseType="arraybuffer",Ne.onload=()=>{if(Ne.status==200||Ne.status==0&&Ne.response){q(Ne.response);return}le()},Ne.onerror=le,Ne.send(null)}));b&&typeof performance>"u"&&(global.performance=OE().performance);var S=console.log.bind(console),M=console.warn.bind(console);b&&(S=D=>R.writeSync(1,D+`
`),M=D=>R.writeSync(2,D+`
`));var B=l.print||S,U=l.printErr||M;Object.assign(l,m),m=null,l.arguments&&l.arguments,l.thisProgram&&l.thisProgram,l.quit&&(f=l.quit);var G;l.wasmBinary&&(G=l.wasmBinary);var K=l.noExitRuntime||!0;typeof WebAssembly!="object"&&Yr("no native wasm support detected");var j,X,ee=!1,Z;function re(D,q){D||Yr(q)}var te=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ae(D,q,le){q>>>=0;for(var Ne=q+le,Fe=q;D[Fe]&&!(Fe>=Ne);)++Fe;if(Fe-q>16&&D.buffer&&te)return te.decode(D.buffer instanceof SharedArrayBuffer?D.slice(q,Fe):D.subarray(q,Fe));for(var Me="";q<Fe;){var me=D[q++];if(!(me&128)){Me+=String.fromCharCode(me);continue}var ke=D[q++]&63;if((me&224)==192){Me+=String.fromCharCode((me&31)<<6|ke);continue}var bt=D[q++]&63;if((me&240)==224?me=(me&15)<<12|ke<<6|bt:me=(me&7)<<18|ke<<12|bt<<6|D[q++]&63,me<65536)Me+=String.fromCharCode(me);else{var Jn=me-65536;Me+=String.fromCharCode(55296|Jn>>10,56320|Jn&1023)}}return Me}function ie(D,q){return D>>>=0,D?ae(i(),D,q):""}function ve(D,q,le,Ne){if(le>>>=0,!(Ne>0))return 0;for(var Fe=le,Me=le+Ne-1,me=0;me<D.length;++me){var ke=D.charCodeAt(me);if(ke>=55296&&ke<=57343){var bt=D.charCodeAt(++me);ke=65536+((ke&1023)<<10)|bt&1023}if(ke<=127){if(le>=Me)break;q[le++>>>0]=ke}else if(ke<=2047){if(le+1>=Me)break;q[le++>>>0]=192|ke>>6,q[le++>>>0]=128|ke&63}else if(ke<=65535){if(le+2>=Me)break;q[le++>>>0]=224|ke>>12,q[le++>>>0]=128|ke>>6&63,q[le++>>>0]=128|ke&63}else{if(le+3>=Me)break;q[le++>>>0]=240|ke>>18,q[le++>>>0]=128|ke>>12&63,q[le++>>>0]=128|ke>>6&63,q[le++>>>0]=128|ke&63}}return q[le>>>0]=0,le-Fe}function be(D,q,le){return ve(D,i(),q,le)}var de,Ie,Te,Re,Be,nt;x&&(de=l.buffer);function Ge(D){de=D,l.HEAP8=Ie=new Int8Array(D),l.HEAP16=new Int16Array(D),l.HEAP32=Re=new Int32Array(D),l.HEAPU8=Te=new Uint8Array(D),l.HEAPU16=new Uint16Array(D),l.HEAPU32=Be=new Uint32Array(D),l.HEAPF32=new Float32Array(D),l.HEAPF64=nt=new Float64Array(D)}var qe=l.INITIAL_MEMORY||16777216;if(x)j=l.wasmMemory,de=l.buffer;else if(l.wasmMemory)j=l.wasmMemory;else if(j=new WebAssembly.Memory({initial:qe/65536,maximum:65536,shared:!0}),!(j.buffer instanceof SharedArrayBuffer))throw U("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&U("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and/or recent version)"),Error("bad memory");j&&(de=j.buffer),qe=de.byteLength,Ge(de);var $e,Ye=[],lt=[],Mn=[];function It(){return K}function Sn(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)or(l.preRun.shift());ut(Ye)}function Zt(){!x&&ut(lt)}function Nn(){if(!x){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)Tn(l.postRun.shift());ut(Mn)}}function or(D){Ye.unshift(D)}function On(D){lt.unshift(D)}function Tn(D){Mn.unshift(D)}var Jt=0,Xn=null;function xa(D){Jt++,l.monitorRunDependencies&&l.monitorRunDependencies(Jt)}function Eu(D){if(Jt--,l.monitorRunDependencies&&l.monitorRunDependencies(Jt),Jt==0&&Xn){var q=Xn;Xn=null,q()}}function Yr(D){l.onAbort&&l.onAbort(D),D="Aborted("+D+")",U(D),ee=!0,Z=1,D+=". Build with -sASSERTIONS for more info.";var q=new WebAssembly.RuntimeError(D);throw h(q),q}var $u="data:application/octet-stream;base64,";function Fr(D){return D.startsWith($u)}function va(D){return D.startsWith("file://")}var Yt;Yt="tfjs-backend-wasm-threaded-simd.wasm",Fr(Yt)||(Yt=I(Yt));function Sd(D){try{if(D==Yt&&G)return new Uint8Array(G);if(E)return E(D);throw"both async and sync fetching of the wasm failed"}catch(q){Yr(q)}}function Nd(){if(!G&&(g||y)){if(typeof fetch=="function"&&!va(Yt))return fetch(Yt,{credentials:"same-origin"}).then(function(D){if(!D.ok)throw"failed to load wasm binary file at '"+Yt+"'";return D.arrayBuffer()}).catch(function(){return Sd(Yt)});if(C)return new Promise(function(D,q){C(Yt,function(le){D(new Uint8Array(le))},q)})}return Promise.resolve().then(function(){return Sd(Yt)})}function Td(){var D={env:yv,wasi_snapshot_preview1:yv};function q(me,ke){var bt=me.exports;if(l.asm=bt,ea(l.asm._emscripten_tls_init),$e=l.asm.__indirect_function_table,On(l.asm.__wasm_call_ctors),X=ke,!x){var Jn=ce.unusedWorkers.length;ce.unusedWorkers.forEach(function(ta){ce.loadWasmModuleToWorker(ta,function(){--Jn||Eu()})})}}x||xa();function le(me){q(me.instance,me.module)}function Ne(me){return Nd().then(function(ke){return WebAssembly.instantiate(ke,D)}).then(function(ke){return ke}).then(me,function(ke){U("failed to asynchronously prepare wasm: "+ke),Yr(ke)})}function Fe(){return!G&&typeof WebAssembly.instantiateStreaming=="function"&&!Fr(Yt)&&!va(Yt)&&!b&&typeof fetch=="function"?fetch(Yt,{credentials:"same-origin"}).then(function(me){var ke=WebAssembly.instantiateStreaming(me,D);return ke.then(le,function(bt){return U("wasm streaming compile failed: "+bt),U("falling back to ArrayBuffer instantiation"),Ne(le)})}):Ne(le)}if(l.instantiateWasm)try{var Me=l.instantiateWasm(D,q);return Me}catch(me){U("Module.instantiateWasm callback failed with error: "+me),h(me)}return Fe().catch(h),{}}var Cd={};function Qr(D){this.name="ExitStatus",this.message="Program terminated with exit("+D+")",this.status=D}function To(D){var q=ce.pthreads[D];delete ce.pthreads[D],q.terminate(),km(D),ce.runningWorkers.splice(ce.runningWorkers.indexOf(q),1),q.pthread_ptr=0}function _d(D){var q=ce.pthreads[D];q.postMessage({cmd:"cancel"})}function ps(D){var q=ce.pthreads[D];re(q),ce.returnWorkerToPool(q)}function ds(D){var q=ce.getNewWorker();if(!q)return 6;ce.runningWorkers.push(q),ce.pthreads[D.pthread_ptr]=q,q.pthread_ptr=D.pthread_ptr;var le={cmd:"run",start_routine:D.startRoutine,arg:D.arg,pthread_ptr:D.pthread_ptr};return q.runPthread=()=>{b&&q.ref(),q.postMessage(le,D.transferList),delete q.runPthread},q.loaded&&q.runPthread(),0}function Ed(D){if(x)return Co(1,1,D);Z=D,It()||(ce.terminateAllThreads(),l.onExit&&l.onExit(D),ee=!0),f(D,new Qr(D))}function Q(D,q){if(Z=D,!q&&x)throw Ve(D),"unwind";Ed(D)}var oe=Q;function Se(D){if(D instanceof Qr||D=="unwind")return Z;f(1,D)}var ce={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){x?ce.initWorker():ce.initMainThread()},initMainThread:function(){for(var D=8;D--;)ce.allocateUnusedWorker()},initWorker:function(){K=!1},setExitStatus:function(D){Z=D},terminateAllThreads:function(){for(var D of Object.values(ce.pthreads))ce.returnWorkerToPool(D);for(var D of ce.unusedWorkers)D.terminate();ce.unusedWorkers=[]},returnWorkerToPool:function(D){var q=D.pthread_ptr;delete ce.pthreads[q],ce.unusedWorkers.push(D),ce.runningWorkers.splice(ce.runningWorkers.indexOf(D),1),D.pthread_ptr=0,b&&D.unref(),km(q)},receiveObjectTransfer:function(D){},threadInitTLS:function(){ce.tlsInitFunctions.forEach(D=>D())},loadWasmModuleToWorker:function(D,q){D.onmessage=Me=>{var me=Me.data,ke=me.cmd;if(D.pthread_ptr&&(ce.currentProxiedOperationCallerThread=D.pthread_ptr),me.targetThread&&me.targetThread!=Rd()){var bt=ce.pthreads[me.targetThread];bt?bt.postMessage(me,me.transferList):U('Internal error! Worker sent a message "'+ke+'" to target pthread '+me.targetThread+", but that thread no longer exists!"),ce.currentProxiedOperationCallerThread=void 0;return}ke==="processProxyingQueue"?xm(me.queue):ke==="spawnThread"?ds(me):ke==="cleanupThread"?ps(me.thread):ke==="killThread"?To(me.thread):ke==="cancelThread"?_d(me.thread):ke==="loaded"?(D.loaded=!0,b&&D.unref(),q&&q(D),D.runPthread&&D.runPthread()):ke==="print"?B("Thread "+me.threadId+": "+me.text):ke==="printErr"?U("Thread "+me.threadId+": "+me.text):ke==="alert"?alert("Thread "+me.threadId+": "+me.text):me.target==="setimmediate"?D.postMessage(me):ke==="callHandler"?l[me.handler](...me.args):ke&&U("worker sent an unknown command "+ke),ce.currentProxiedOperationCallerThread=void 0},D.onerror=Me=>{var me="worker sent an error!";throw U(me+" "+Me.filename+":"+Me.lineno+": "+Me.message),Me},b&&(D.on("message",function(Me){D.onmessage({data:Me})}),D.on("error",function(Me){D.onerror(Me)}),D.on("detachedExit",function(){}));var le=[],Ne=["onExit","onAbort","print","printErr"];for(var Fe of Ne)l.hasOwnProperty(Fe)&&le.push(Fe);D.postMessage({cmd:"load",handlers:le,urlOrBlob:l.mainScriptUrlOrBlob||r,wasmMemory:j,wasmModule:X})},allocateUnusedWorker:function(){var D,q=I("tfjs-backend-wasm-threaded-simd.worker.js");D=new Worker(q),ce.unusedWorkers.push(D)},getNewWorker:function(){return ce.unusedWorkers.length==0&&(ce.allocateUnusedWorker(),ce.loadWasmModuleToWorker(ce.unusedWorkers[0])),ce.unusedWorkers.pop()}};l.PThread=ce;function ut(D){for(;D.length>0;)D.shift()(l)}function ft(){var D=Rd(),q=o()[D+52>>>2],le=o()[D+56>>>2],Ne=q-le;kv(q,Ne),Dd(q)}l.establishStackSpace=ft;function Ve(D){if(x)return Co(2,0,D);try{oe(D)}catch(q){Se(q)}}var De=[];function _t(D){var q=De[D];return q||(D>=De.length&&(De.length=D+1),De[D]=q=$e.get(D)),q}function Zn(D,q){var le=_t(D)(q);It()?ce.setExitStatus(le):wv(le)}l.invokeEntryPoint=Zn;function ea(D){ce.tlsInitFunctions.push(D)}function $d(D){bv(D,!y,1,!g),ce.threadInitTLS()}function Au(D){x?postMessage({cmd:"cleanupThread",thread:D}):ps(D)}function Ad(D,q,le,Ne){return x?Co(3,1,D,q,le,Ne):un(D,q,le,Ne)}function un(D,q,le,Ne){if(typeof SharedArrayBuffer>"u")return U("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var Fe=[],Me=0;if(x&&(Fe.length===0||Me))return Ad(D,q,le,Ne);var me={startRoutine:le,pthread_ptr:D,arg:Ne,transferList:Fe};return x?(me.cmd="spawnThread",postMessage(me,Fe),0):ds(me)}function wa(){return 65536}var Fd=!0;function q_(){return Fd}function xm(D){Atomics.store(o(),D>>2,1),Rd()&&vv(D),Atomics.compareExchange(o(),D>>2,1,0)}l.executeNotifiedProxyingQueue=xm;function K_(D,q,le,Ne){if(D==q)setTimeout(()=>xm(Ne));else if(x)postMessage({targetThread:D,cmd:"processProxyingQueue",queue:Ne});else{var Fe=ce.pthreads[D];if(!Fe)return;Fe.postMessage({cmd:"processProxyingQueue",queue:Ne})}return 1}function X_(D,q,le){return-1}function Z_(){Yr("")}function Fu(D){Fu.shown||(Fu.shown={}),Fu.shown[D]||(Fu.shown[D]=1,b&&(D="warning: "+D),U(D))}function J_(){b||y||Fu("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Y_(){return Date.now()}function hv(){return 4294901760}function Q_(){return hv()}var vm;b?vm=()=>{var D=process.hrtime();return D[0]*1e3+D[1]/1e6}:vm=()=>performance.timeOrigin+performance.now();function eE(D,q,le){i().copyWithin(D>>>0,q>>>0,q+le>>>0)}function tE(){return b?LE().cpus().length:navigator.hardwareConcurrency}function nE(D){var q=Im(),le=D();return Dd(q),le}function Co(D,q){var le=arguments.length-2,Ne=arguments;return nE(()=>{for(var Fe=le,Me=Md(Fe*8),me=Me>>3,ke=0;ke<le;ke++){var bt=Ne[2+ke];p()[me+ke>>>0]=bt}return xv(D,Fe,Me,q)})}var wm=[];function rE(D,q,le){wm.length=q;for(var Ne=le>>3,Fe=0;Fe<q;Fe++)wm[Fe]=p()[Ne+Fe>>>0];var Me=D<0,me=Me?Cd[-D-1]:hE[D];return me.apply(null,wm)}function aE(D){try{return j.grow(D-de.byteLength+65535>>>16),Ge(j.buffer),1}catch{}}function sE(D){var q=i().length;if(D=D>>>0,D<=q)return!1;var le=hv();if(D>le)return!1;let Ne=(bt,Jn)=>bt+(Jn-bt%Jn)%Jn;for(var Fe=1;Fe<=4;Fe*=2){var Me=q*(1+.2/Fe);Me=Math.min(Me,D+100663296);var me=Math.min(le,Ne(Math.max(D,Me),65536)),ke=aE(me);if(ke)return!0}return!1}function iE(){throw"unwind"}function cv(D){return x?Co(4,1,D):52}function mv(D,q,le,Ne,Fe){return x?Co(5,1,D,q,le,Ne,Fe):70}var oE=[null,[],[]];function lE(D,q){var le=oE[D];q===0||q===10?((D===1?B:U)(ae(le,0)),le.length=0):le.push(q)}function fv(D,q,le,Ne){if(x)return Co(6,1,D,q,le,Ne);for(var Fe=0,Me=0;Me<le;Me++){var me=u()[q>>>2],ke=u()[q+4>>>2];q+=8;for(var bt=0;bt<ke;bt++)lE(D,i()[me+bt>>>0]);Fe+=ke}return u()[Ne>>>2]=Fe,0}function gv(D){var q=l["_"+D];return q}function uE(D,q){s().set(D,q>>>0)}function pE(D,q,le,Ne,Fe){var Me={string:Yn=>{var _o=0;if(Yn!=null&&Yn!==0){var Nv=(Yn.length<<2)+1;_o=Md(Nv),be(Yn,_o,Nv)}return _o},array:Yn=>{var _o=Md(Yn.length);return uE(Yn,_o),_o}};function me(Yn){return q==="string"?ie(Yn):q==="boolean"?!!Yn:Yn}var ke=gv(D),bt=[],Jn=0;if(Ne)for(var ta=0;ta<Ne.length;ta++){var Sv=Me[le[ta]];Sv?(Jn===0&&(Jn=Im()),bt[ta]=Sv(Ne[ta])):bt[ta]=Ne[ta]}var Sm=ke.apply(null,bt);function mE(Yn){return Jn!==0&&Dd(Jn),me(Yn)}return Sm=mE(Sm),Sm}function dE(D,q,le,Ne){le=le||[];var Fe=le.every(me=>me==="number"||me==="boolean"),Me=q!=="string";return Me&&Fe&&!Ne?gv(D):function(){return pE(D,q,le,arguments)}}ce.init();var hE=[null,Ed,Ve,Ad,cv,mv,fv],yv={__emscripten_init_main_thread_js:$d,__emscripten_thread_cleanup:Au,__pthread_create_js:un,_emscripten_default_pthread_stack_size:wa,_emscripten_get_now_is_monotonic:q_,_emscripten_notify_task_queue:K_,_emscripten_set_offscreencanvas_size:X_,abort:Z_,emscripten_check_blocking_allowed:J_,emscripten_date_now:Y_,emscripten_get_heap_max:Q_,emscripten_get_now:vm,emscripten_memcpy_big:eE,emscripten_num_logical_cores:tE,emscripten_receive_on_main_thread_js:rE,emscripten_resize_heap:sE,emscripten_unwind_to_js_event_loop:iE,exit:oe,fd_close:cv,fd_seek:mv,fd_write:fv,memory:j||l.wasmMemory};Td(),l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},l._init=function(){return(l._init=l.asm.init).apply(null,arguments)},l._init_with_threads_count=function(){return(l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},l._get_threads_count=function(){return(l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.register_tensor).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.dispose_data).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.dispose).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.Abs).apply(null,arguments)},l._Acos=function(){return(l._Acos=l.asm.Acos).apply(null,arguments)},l._Acosh=function(){return(l._Acosh=l.asm.Acosh).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.Add).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.AddN).apply(null,arguments)},l._All=function(){return(l._All=l.asm.All).apply(null,arguments)},l._Any=function(){return(l._Any=l.asm.Any).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.ArgMax).apply(null,arguments)},l._ArgMin=function(){return(l._ArgMin=l.asm.ArgMin).apply(null,arguments)},l._Asin=function(){return(l._Asin=l.asm.Asin).apply(null,arguments)},l._Asinh=function(){return(l._Asinh=l.asm.Asinh).apply(null,arguments)},l._Atan=function(){return(l._Atan=l.asm.Atan).apply(null,arguments)},l._Atan2=function(){return(l._Atan2=l.asm.Atan2).apply(null,arguments)},l._Atanh=function(){return(l._Atanh=l.asm.Atanh).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.AvgPool).apply(null,arguments)},l._AvgPool3D=function(){return(l._AvgPool3D=l.asm.AvgPool3D).apply(null,arguments)},l._AvgPool3DGrad=function(){return(l._AvgPool3DGrad=l.asm.AvgPool3DGrad).apply(null,arguments)},l._AvgPoolGrad=function(){return(l._AvgPoolGrad=l.asm.AvgPoolGrad).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},l._Bincount=function(){return(l._Bincount=l.asm.Bincount).apply(null,arguments)},l._BitwiseAnd=function(){return(l._BitwiseAnd=l.asm.BitwiseAnd).apply(null,arguments)},l._Ceil=function(){return(l._Ceil=l.asm.Ceil).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.Conv2D).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},l._Conv3D=function(){return(l._Conv3D=l.asm.Conv3D).apply(null,arguments)},l._Conv3DBackpropFilterV2=function(){return(l._Conv3DBackpropFilterV2=l.asm.Conv3DBackpropFilterV2).apply(null,arguments)},l._Conv3DBackpropInputV2=function(){return(l._Conv3DBackpropInputV2=l.asm.Conv3DBackpropInputV2).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Cos).apply(null,arguments)},l._Cosh=function(){return(l._Cosh=l.asm.Cosh).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},l._Cumprod=function(){return(l._Cumprod=l.asm.Cumprod).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.Cumsum).apply(null,arguments)},l._DenseBincount=function(){return(l._DenseBincount=l.asm.DenseBincount).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},l._Diag=function(){return(l._Diag=l.asm.Diag).apply(null,arguments)},l._Dilation2D=function(){return(l._Dilation2D=l.asm.Dilation2D).apply(null,arguments)},l._Dilation2DBackpropFilter=function(){return(l._Dilation2DBackpropFilter=l.asm.Dilation2DBackpropFilter).apply(null,arguments)},l._Dilation2DBackpropInput=function(){return(l._Dilation2DBackpropInput=l.asm.Dilation2DBackpropInput).apply(null,arguments)},l._Elu=function(){return(l._Elu=l.asm.Elu).apply(null,arguments)},l._EluGrad=function(){return(l._EluGrad=l.asm.EluGrad).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.Equal).apply(null,arguments)},l._Erf=function(){return(l._Erf=l.asm.Erf).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.Exp).apply(null,arguments)},l._Expm1=function(){return(l._Expm1=l.asm.Expm1).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},l._Floor=function(){return(l._Floor=l.asm.Floor).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.Gather).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.GatherNd).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.Greater).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},l._IsFinite=function(){return(l._IsFinite=l.asm.IsFinite).apply(null,arguments)},l._IsInf=function(){return(l._IsInf=l.asm.IsInf).apply(null,arguments)},l._IsNan=function(){return(l._IsNan=l.asm.IsNan).apply(null,arguments)},l._LRN=function(){return(l._LRN=l.asm.LRN).apply(null,arguments)},l._LRNGrad=function(){return(l._LRNGrad=l.asm.LRNGrad).apply(null,arguments)},l._LeakyRelu=function(){return(l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.Less).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.LessEqual).apply(null,arguments)},l._LinSpace=function(){return(l._LinSpace=l.asm.LinSpace).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.Log).apply(null,arguments)},l._Log1p=function(){return(l._Log1p=l.asm.Log1p).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},l._LogicalNot=function(){return(l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},l._LogicalOr=function(){return(l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},l._LogicalXor=function(){return(l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.Max).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.MaxPool).apply(null,arguments)},l._MaxPool3D=function(){return(l._MaxPool3D=l.asm.MaxPool3D).apply(null,arguments)},l._MaxPool3DGrad=function(){return(l._MaxPool3DGrad=l.asm.MaxPool3DGrad).apply(null,arguments)},l._MaxPoolGrad=function(){return(l._MaxPoolGrad=l.asm.MaxPoolGrad).apply(null,arguments)},l._MaxPoolWithArgmax=function(){return(l._MaxPoolWithArgmax=l.asm.MaxPoolWithArgmax).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.Maximum).apply(null,arguments)},l._Mean=function(){return(l._Mean=l.asm.Mean).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.Min).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.Minimum).apply(null,arguments)},l._MirrorPad=function(){return(l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},l._Mod=function(){return(l._Mod=l.asm.Mod).apply(null,arguments)},l._Multinomial=function(){return(l._Multinomial=l.asm.Multinomial).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.Multiply).apply(null,arguments)},l._Neg=function(){return(l._Neg=l.asm.Neg).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.NotEqual).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.OneHot).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.PadV2).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.Pow).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.Prelu).apply(null,arguments)},l._Prod=function(){return(l._Prod=l.asm.Prod).apply(null,arguments)},l._RealDiv=function(){return(l._RealDiv=l.asm.RealDiv).apply(null,arguments)},l._Reciprocal=function(){return(l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.Relu).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.Relu6).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},l._ResizeBilinearGrad=function(){return(l._ResizeBilinearGrad=l.asm.ResizeBilinearGrad).apply(null,arguments)},l._ResizeNearestNeighbor=function(){return(l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},l._ResizeNearestNeighborGrad=function(){return(l._ResizeNearestNeighborGrad=l.asm.ResizeNearestNeighborGrad).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Reverse).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},l._Round=function(){return(l._Round=l.asm.Round).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},l._SearchSorted=function(){return(l._SearchSorted=l.asm.SearchSorted).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.SelectV2).apply(null,arguments)},l._Selu=function(){return(l._Selu=l.asm.Selu).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},l._Sign=function(){return(l._Sign=l.asm.Sign).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Sin).apply(null,arguments)},l._Sinh=function(){return(l._Sinh=l.asm.Sinh).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Softmax).apply(null,arguments)},l._Softplus=function(){return(l._Softplus=l.asm.Softplus).apply(null,arguments)},l._SparseFillEmptyRows=function(){return(l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},l._SparseReshape=function(){return(l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},l._SparseSegmentReduction=function(){return(l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},l._SparseToDense=function(){return(l._SparseToDense=l.asm.SparseToDense).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Sqrt).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Square).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},l._Step=function(){return(l._Step=l.asm.Step).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Sub).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Sum).apply(null,arguments)},l._Tan=function(){return(l._Tan=l.asm.Tan).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Tanh).apply(null,arguments)},l._TensorScatterUpdate=function(){return(l._TensorScatterUpdate=l.asm.TensorScatterUpdate).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Tile).apply(null,arguments)},l._TopK=function(){return(l._TopK=l.asm.TopK).apply(null,arguments)},l._Transform=function(){return(l._Transform=l.asm.Transform).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Transpose).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},l._malloc=function(){return(l._malloc=l.asm.malloc).apply(null,arguments)},l._free=function(){return(l._free=l.asm.free).apply(null,arguments)},l.__emscripten_tls_init=function(){return(l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)};var Rd=l._pthread_self=function(){return(Rd=l._pthread_self=l.asm.pthread_self).apply(null,arguments)};l.___errno_location=function(){return(l.___errno_location=l.asm.__errno_location).apply(null,arguments)};var bv=l.__emscripten_thread_init=function(){return(bv=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)};l.__emscripten_thread_crashed=function(){return(l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},l._emscripten_main_thread_process_queued_calls=function(){return(l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var xv=l._emscripten_run_in_main_runtime_thread_js=function(){return(xv=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};l._emscripten_dispatch_to_thread_=function(){return(l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var vv=l.__emscripten_proxy_execute_task_queue=function(){return(vv=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},km=l.__emscripten_thread_free_data=function(){return(km=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},wv=l.__emscripten_thread_exit=function(){return(wv=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},kv=l._emscripten_stack_set_limits=function(){return(kv=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},Im=l.stackSave=function(){return(Im=l.stackSave=l.asm.stackSave).apply(null,arguments)},Dd=l.stackRestore=function(){return(Dd=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},Md=l.stackAlloc=function(){return(Md=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)};l.dynCall_iijjiiii=function(){return(l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},l.keepRuntimeAlive=It,l.wasmMemory=j,l.cwrap=dE,l.ExitStatus=Qr,l.PThread=ce;var Od;Xn=function D(){Od||Iv(),Od||(Xn=D)};function Iv(D){if(Jt>0)return;if(x){d(l),Zt(),startWorker(l);return}if(Sn(),Jt>0)return;function q(){Od||(Od=!0,l.calledRun=!0,!ee&&(Zt(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),Nn()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),q()},1)):q()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();Iv();var Ld;c&&(Ld={uncaughtException:process.listeners("uncaughtException").filter(function(D){return!c.uncaughtException.indexOf(D)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(D){return!c.unhandledRejection.indexOf(D)>-1})});var zd;if(typeof WasmBackendModule<"u")zd=WasmBackendModule;else if(typeof a<"u")zd=a;else throw new Error("Could not find wasm module in post.js");if(Ld){var cE=zd._dispose;zd._dispose=function(){cE(),Ld.uncaughtException.forEach(function(D){process.removeListener("uncaughtException",D)}),Ld.unhandledRejection.forEach(function(D){process.removeListener("unhandledRejection",D)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModuleThreadedSimd=n)}),PE=Rt((e,t)=>{t.exports.wasmWorkerContents=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8")+"//# sourceURL="+f)},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.startWorker=instance=>{Module=instance;postMessage({"cmd":"loaded"})};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;for(const handler of e.data.handlers){Module[handler]=function(){postMessage({cmd:"callHandler",handler:handler,args:[...arguments]})}}Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module)}else if(e.data.cmd==="run"){Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`}),BE=Rt((e,t)=>{var n=(()=>{var r=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(r=r||__filename),function(a){a=a||{};var s=typeof a<"u"?a:{},i,o;s.ready=new Promise(function(Q,oe){i=Q,o=oe});var u;typeof process<"u"&&process.listeners&&(u={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p=Object.assign({},s),l=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",c="";function m(Q){return s.locateFile?s.locateFile(Q,c):c+Q}var f,g,y;if(h){var b=Xf(),x=m0();d?c=x.dirname(c)+"/":c=__dirname+"/",f=(Q,oe)=>(Q=qe(Q)?new URL(Q):x.normalize(Q),b.readFileSync(Q,oe?void 0:"utf8")),y=Q=>{var oe=f(Q,!0);return oe.buffer||(oe=new Uint8Array(oe)),oe},g=(Q,oe,Se)=>{Q=qe(Q)?new URL(Q):x.normalize(Q),b.readFile(Q,function(ce,ut){ce?Se(ce):oe(ut.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(Q){if(!(Q instanceof It))throw Q}),process.on("unhandledRejection",function(Q){throw Q}),s.inspect=function(){return"[Emscripten Module object]"}}else(l||d)&&(d?c=self.location.href:typeof document<"u"&&document.currentScript&&(c=document.currentScript.src),r&&(c=r),c.indexOf("blob:")!==0?c=c.substr(0,c.replace(/[?#].*/,"").lastIndexOf("/")+1):c="",f=Q=>{var oe=new XMLHttpRequest;return oe.open("GET",Q,!1),oe.send(null),oe.responseText},d&&(y=Q=>{var oe=new XMLHttpRequest;return oe.open("GET",Q,!1),oe.responseType="arraybuffer",oe.send(null),new Uint8Array(oe.response)}),g=(Q,oe,Se)=>{var ce=new XMLHttpRequest;ce.open("GET",Q,!0),ce.responseType="arraybuffer",ce.onload=()=>{if(ce.status==200||ce.status==0&&ce.response){oe(ce.response);return}Se()},ce.onerror=Se,ce.send(null)});var w=s.print||console.log.bind(console),I=s.printErr||console.warn.bind(console);Object.assign(s,p),p=null,s.arguments&&s.arguments,s.thisProgram&&s.thisProgram,s.quit&&s.quit;var T;s.wasmBinary&&(T=s.wasmBinary),s.noExitRuntime,typeof WebAssembly!="object"&&Be("no native wasm support detected");var C,E=!1,A=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function R(Q,oe,Se){oe>>>=0;for(var ce=oe+Se,ut=oe;Q[ut]&&!(ut>=ce);)++ut;if(ut-oe>16&&Q.buffer&&A)return A.decode(Q.subarray(oe,ut));for(var ft="";oe<ut;){var Ve=Q[oe++];if(!(Ve&128)){ft+=String.fromCharCode(Ve);continue}var De=Q[oe++]&63;if((Ve&224)==192){ft+=String.fromCharCode((Ve&31)<<6|De);continue}var _t=Q[oe++]&63;if((Ve&240)==224?Ve=(Ve&15)<<12|De<<6|_t:Ve=(Ve&7)<<18|De<<12|_t<<6|Q[oe++]&63,Ve<65536)ft+=String.fromCharCode(Ve);else{var Zn=Ve-65536;ft+=String.fromCharCode(55296|Zn>>10,56320|Zn&1023)}}return ft}function F(Q,oe){return Q>>>=0,Q?R(G,Q,oe):""}function S(Q,oe,Se,ce){if(Se>>>=0,!(ce>0))return 0;for(var ut=Se,ft=Se+ce-1,Ve=0;Ve<Q.length;++Ve){var De=Q.charCodeAt(Ve);if(De>=55296&&De<=57343){var _t=Q.charCodeAt(++Ve);De=65536+((De&1023)<<10)|_t&1023}if(De<=127){if(Se>=ft)break;oe[Se++>>>0]=De}else if(De<=2047){if(Se+1>=ft)break;oe[Se++>>>0]=192|De>>6,oe[Se++>>>0]=128|De&63}else if(De<=65535){if(Se+2>=ft)break;oe[Se++>>>0]=224|De>>12,oe[Se++>>>0]=128|De>>6&63,oe[Se++>>>0]=128|De&63}else{if(Se+3>=ft)break;oe[Se++>>>0]=240|De>>18,oe[Se++>>>0]=128|De>>12&63,oe[Se++>>>0]=128|De>>6&63,oe[Se++>>>0]=128|De&63}}return oe[Se>>>0]=0,Se-ut}function M(Q,oe,Se){return S(Q,G,oe,Se)}var B,U,G,K;function j(Q){B=Q,s.HEAP8=U=new Int8Array(Q),s.HEAP16=new Int16Array(Q),s.HEAP32=new Int32Array(Q),s.HEAPU8=G=new Uint8Array(Q),s.HEAPU16=new Uint16Array(Q),s.HEAPU32=K=new Uint32Array(Q),s.HEAPF32=new Float32Array(Q),s.HEAPF64=new Float64Array(Q)}s.INITIAL_MEMORY;var X=[],ee=[],Z=[];function re(){if(s.preRun)for(typeof s.preRun=="function"&&(s.preRun=[s.preRun]);s.preRun.length;)ie(s.preRun.shift());Sn(X)}function te(){Sn(ee)}function ae(){if(s.postRun)for(typeof s.postRun=="function"&&(s.postRun=[s.postRun]);s.postRun.length;)be(s.postRun.shift());Sn(Z)}function ie(Q){X.unshift(Q)}function ve(Q){ee.unshift(Q)}function be(Q){Z.unshift(Q)}var de=0,Ie=null;function Te(Q){de++,s.monitorRunDependencies&&s.monitorRunDependencies(de)}function Re(Q){if(de--,s.monitorRunDependencies&&s.monitorRunDependencies(de),de==0&&Ie){var oe=Ie;Ie=null,oe()}}function Be(Q){s.onAbort&&s.onAbort(Q),Q="Aborted("+Q+")",I(Q),E=!0,Q+=". Build with -sASSERTIONS for more info.";var oe=new WebAssembly.RuntimeError(Q);throw o(oe),oe}var nt="data:application/octet-stream;base64,";function Ge(Q){return Q.startsWith(nt)}function qe(Q){return Q.startsWith("file://")}var $e;$e="tfjs-backend-wasm.wasm",Ge($e)||($e=m($e));function Ye(Q){try{if(Q==$e&&T)return new Uint8Array(T);if(y)return y(Q);throw"both async and sync fetching of the wasm failed"}catch(oe){Be(oe)}}function lt(){if(!T&&(l||d)){if(typeof fetch=="function"&&!qe($e))return fetch($e,{credentials:"same-origin"}).then(function(Q){if(!Q.ok)throw"failed to load wasm binary file at '"+$e+"'";return Q.arrayBuffer()}).catch(function(){return Ye($e)});if(g)return new Promise(function(Q,oe){g($e,function(Se){Q(new Uint8Array(Se))},oe)})}return Promise.resolve().then(function(){return Ye($e)})}function Mn(){var Q={env:Nd,wasi_snapshot_preview1:Nd};function oe(Ve,De){var _t=Ve.exports;s.asm=_t,C=s.asm.memory,j(C.buffer),s.asm.__indirect_function_table,ve(s.asm.__wasm_call_ctors),Re()}Te();function Se(Ve){oe(Ve.instance)}function ce(Ve){return lt().then(function(De){return WebAssembly.instantiate(De,Q)}).then(function(De){return De}).then(Ve,function(De){I("failed to asynchronously prepare wasm: "+De),Be(De)})}function ut(){return!T&&typeof WebAssembly.instantiateStreaming=="function"&&!Ge($e)&&!qe($e)&&!h&&typeof fetch=="function"?fetch($e,{credentials:"same-origin"}).then(function(Ve){var De=WebAssembly.instantiateStreaming(Ve,Q);return De.then(Se,function(_t){return I("wasm streaming compile failed: "+_t),I("falling back to ArrayBuffer instantiation"),ce(Se)})}):ce(Se)}if(s.instantiateWasm)try{var ft=s.instantiateWasm(Q,oe);return ft}catch(Ve){I("Module.instantiateWasm callback failed with error: "+Ve),o(Ve)}return ut().catch(o),{}}function It(Q){this.name="ExitStatus",this.message="Program terminated with exit("+Q+")",this.status=Q}function Sn(Q){for(;Q.length>0;)Q.shift()(s)}function Zt(){Be("")}function Nn(){return 4294901760}function or(){return Nn()}function On(Q,oe,Se){G.copyWithin(Q>>>0,oe>>>0,oe+Se>>>0)}function Tn(Q){try{return C.grow(Q-B.byteLength+65535>>>16),j(C.buffer),1}catch{}}function Jt(Q){var oe=G.length;Q=Q>>>0;var Se=Nn();if(Q>Se)return!1;let ce=(_t,Zn)=>_t+(Zn-_t%Zn)%Zn;for(var ut=1;ut<=4;ut*=2){var ft=oe*(1+.2/ut);ft=Math.min(ft,Q+100663296);var Ve=Math.min(Se,ce(Math.max(Q,ft),65536)),De=Tn(Ve);if(De)return!0}return!1}function Xn(Q){return 52}function xa(Q,oe,Se,ce,ut){return 70}var Eu=[null,[],[]];function Yr(Q,oe){var Se=Eu[Q];oe===0||oe===10?((Q===1?w:I)(R(Se,0)),Se.length=0):Se.push(oe)}function $u(Q,oe,Se,ce){for(var ut=0,ft=0;ft<Se;ft++){var Ve=K[oe>>>2],De=K[oe+4>>>2];oe+=8;for(var _t=0;_t<De;_t++)Yr(Q,G[Ve+_t>>>0]);ut+=De}return K[ce>>>2]=ut,0}function Fr(Q){var oe=s["_"+Q];return oe}function va(Q,oe){U.set(Q,oe>>>0)}function Yt(Q,oe,Se,ce,ut){var ft={string:un=>{var wa=0;if(un!=null&&un!==0){var Fd=(un.length<<2)+1;wa=Qr(Fd),M(un,wa,Fd)}return wa},array:un=>{var wa=Qr(un.length);return va(un,wa),wa}};function Ve(un){return oe==="string"?F(un):oe==="boolean"?!!un:un}var De=Fr(Q),_t=[],Zn=0;if(ce)for(var ea=0;ea<ce.length;ea++){var $d=ft[Se[ea]];$d?(Zn===0&&(Zn=Td()),_t[ea]=$d(ce[ea])):_t[ea]=ce[ea]}var Au=De.apply(null,_t);function Ad(un){return Zn!==0&&Cd(Zn),Ve(un)}return Au=Ad(Au),Au}function Sd(Q,oe,Se,ce){Se=Se||[];var ut=Se.every(Ve=>Ve==="number"||Ve==="boolean"),ft=oe!=="string";return ft&&ut&&!ce?Fr(Q):function(){return Yt(Q,oe,Se,arguments)}}var Nd={abort:Zt,emscripten_get_heap_max:or,emscripten_memcpy_big:On,emscripten_resize_heap:Jt,fd_close:Xn,fd_seek:xa,fd_write:$u};Mn(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Acos=function(){return(s._Acos=s.asm.Acos).apply(null,arguments)},s._Acosh=function(){return(s._Acosh=s.asm.Acosh).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._ArgMin=function(){return(s._ArgMin=s.asm.ArgMin).apply(null,arguments)},s._Asin=function(){return(s._Asin=s.asm.Asin).apply(null,arguments)},s._Asinh=function(){return(s._Asinh=s.asm.Asinh).apply(null,arguments)},s._Atan=function(){return(s._Atan=s.asm.Atan).apply(null,arguments)},s._Atan2=function(){return(s._Atan2=s.asm.Atan2).apply(null,arguments)},s._Atanh=function(){return(s._Atanh=s.asm.Atanh).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._AvgPool3D=function(){return(s._AvgPool3D=s.asm.AvgPool3D).apply(null,arguments)},s._AvgPool3DGrad=function(){return(s._AvgPool3DGrad=s.asm.AvgPool3DGrad).apply(null,arguments)},s._AvgPoolGrad=function(){return(s._AvgPoolGrad=s.asm.AvgPoolGrad).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Bincount=function(){return(s._Bincount=s.asm.Bincount).apply(null,arguments)},s._BitwiseAnd=function(){return(s._BitwiseAnd=s.asm.BitwiseAnd).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Conv3D=function(){return(s._Conv3D=s.asm.Conv3D).apply(null,arguments)},s._Conv3DBackpropFilterV2=function(){return(s._Conv3DBackpropFilterV2=s.asm.Conv3DBackpropFilterV2).apply(null,arguments)},s._Conv3DBackpropInputV2=function(){return(s._Conv3DBackpropInputV2=s.asm.Conv3DBackpropInputV2).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DenseBincount=function(){return(s._DenseBincount=s.asm.DenseBincount).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Diag=function(){return(s._Diag=s.asm.Diag).apply(null,arguments)},s._Dilation2D=function(){return(s._Dilation2D=s.asm.Dilation2D).apply(null,arguments)},s._Dilation2DBackpropFilter=function(){return(s._Dilation2DBackpropFilter=s.asm.Dilation2DBackpropFilter).apply(null,arguments)},s._Dilation2DBackpropInput=function(){return(s._Dilation2DBackpropInput=s.asm.Dilation2DBackpropInput).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._EluGrad=function(){return(s._EluGrad=s.asm.EluGrad).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Erf=function(){return(s._Erf=s.asm.Erf).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._Expm1=function(){return(s._Expm1=s.asm.Expm1).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsFinite=function(){return(s._IsFinite=s.asm.IsFinite).apply(null,arguments)},s._IsInf=function(){return(s._IsInf=s.asm.IsInf).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LRN=function(){return(s._LRN=s.asm.LRN).apply(null,arguments)},s._LRNGrad=function(){return(s._LRNGrad=s.asm.LRNGrad).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._LinSpace=function(){return(s._LinSpace=s.asm.LinSpace).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._Log1p=function(){return(s._Log1p=s.asm.Log1p).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._MaxPool3D=function(){return(s._MaxPool3D=s.asm.MaxPool3D).apply(null,arguments)},s._MaxPool3DGrad=function(){return(s._MaxPool3DGrad=s.asm.MaxPool3DGrad).apply(null,arguments)},s._MaxPoolGrad=function(){return(s._MaxPoolGrad=s.asm.MaxPoolGrad).apply(null,arguments)},s._MaxPoolWithArgmax=function(){return(s._MaxPoolWithArgmax=s.asm.MaxPoolWithArgmax).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Mod=function(){return(s._Mod=s.asm.Mod).apply(null,arguments)},s._Multinomial=function(){return(s._Multinomial=s.asm.Multinomial).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeBilinearGrad=function(){return(s._ResizeBilinearGrad=s.asm.ResizeBilinearGrad).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._ResizeNearestNeighborGrad=function(){return(s._ResizeNearestNeighborGrad=s.asm.ResizeNearestNeighborGrad).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SearchSorted=function(){return(s._SearchSorted=s.asm.SearchSorted).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Selu=function(){return(s._Selu=s.asm.Selu).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sign=function(){return(s._Sign=s.asm.Sign).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Sinh=function(){return(s._Sinh=s.asm.Sinh).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._Softplus=function(){return(s._Softplus=s.asm.Softplus).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._SparseToDense=function(){return(s._SparseToDense=s.asm.SparseToDense).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._TensorScatterUpdate=function(){return(s._TensorScatterUpdate=s.asm.TensorScatterUpdate).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)};var Td=s.stackSave=function(){return(Td=s.stackSave=s.asm.stackSave).apply(null,arguments)},Cd=s.stackRestore=function(){return(Cd=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},Qr=s.stackAlloc=function(){return(Qr=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=Sd;var To;Ie=function Q(){To||_d(),To||(Ie=Q)};function _d(Q){if(de>0||(re(),de>0))return;function oe(){To||(To=!0,s.calledRun=!0,!E&&(te(),i(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),ae()))}s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),oe()},1)):oe()}if(s.preInit)for(typeof s.preInit=="function"&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();_d();var ps;u&&(ps={uncaughtException:process.listeners("uncaughtException").filter(function(Q){return!u.uncaughtException.indexOf(Q)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(Q){return!u.unhandledRejection.indexOf(Q)>-1})});var ds;if(typeof a<"u")ds=a;else if(typeof WasmBackendModuleThreadedSimd<"u")ds=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(ps){var Ed=ds._dispose;ds._dispose=function(){Ed(),ps.uncaughtException.forEach(function(Q){process.removeListener("uncaughtException",Q)}),ps.unhandledRejection.forEach(function(Q){process.removeListener("unhandledRejection",Q)})}}return a.ready}})();typeof e=="object"&&typeof t=="object"?t.exports=n:typeof define=="function"&&define.amd?define([],function(){return n}):typeof e=="object"&&(e.WasmBackendModule=n)}),jh=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},yp=class{refCount(e){return Ln("refCount")}incRef(e){return Ln("incRef")}timerAvailable(){return!0}time(e){return Ln("time")}read(e){return Ln("read")}readSync(e){return Ln("readSync")}readToGPU(e,t){return Ln("readToGPU")}numDataIds(){return Ln("numDataIds")}disposeData(e,t){return Ln("disposeData")}write(e,t,n){return Ln("write")}move(e,t,n,r,a){return Ln("move")}createTensorFromGPUData(e,t,n){return Ln("createTensorFromGPUData")}memory(){return Ln("memory")}floatPrecision(){return Ln("floatPrecision")}epsilon(){return this.floatPrecision()===32?1e-7:1e-4}dispose(){return Ln("dispose")}};function Ln(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function f0(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,dh(e,t,n)}function WE(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,dh(e,n,r),dh(t,n,r)}function Qu(e,t,n){return Math.max(e,Math.min(t,n))}function VE(e){return e%2===0?e:e+1}function dh(e,t,n){let r=e[t];e[t]=e[n],e[n]=r}function UE(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function GE(e,t){let n=Math.random();return t*n+(1-n)*e}function HE(e,t){let n=0;for(let r=0;r<e.length;r++){let a=Number(e[r])-Number(t[r]);n+=a*a}return n}function $(e,t){if(!e)throw new Error(typeof t=="string"?t:t())}function vn(e,t,n=""){$(ca(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function Ks(e){$(e!=null,()=>"The input to the tensor constructor must be a non-null value.")}function dt(e){if(e.length===0)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function jE(e){return e.length===0}function g0(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==null&&t[n]!==null&&e[n]!==t[n])return!1;return!0}function ca(e,t){if(e===t)return!0;if(e==null||t==null||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function zo(e){return e%1===0}function qE(e){if(Math.tanh!=null)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function KE(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function XE(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return f0(t),t}function Ku(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ZE(e,t=a=>0,n,r){return new Promise((a,s)=>{let i=0,o=()=>{if(e()){a();return}i++;let u=t(i);if(n!=null&&i>=n){s();return}r!=null?r(o,u):setTimeout(o,u)};o()})}function JE(e,t){let n=1,r=-1;for(let s=0;s<e.length;++s)if(e[s]>=0)n*=e[s];else if(e[s]===-1){if(r!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${s}`);r=s}else if(e[s]<0)throw Error(`Shapes can not be < 0. Found ${e[s]} at dim ${s}`);if(r===-1){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(n===0)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let a=e.slice();return a[r]=t/n,a}function yr(e,t){let n=t.length;return e=e==null?t.map((r,a)=>a):[].concat(e),$(e.every(r=>r>=-n&&r<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),$(e.every(r=>zo(r)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(r=>r<0?n+r:r)}function y0(e,t){let n=[],r=[],a=t!=null&&Array.isArray(t)&&t.length===0,s=t==null||a?null:yr(t,e).sort(),i=0;for(let o=0;o<e.length;++o){if(s!=null){if(s[i]===o&&e[o]!==1)throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(s[i]==null||s[i]>o)&&e[o]===1&&(n.push(e[o]),r.push(o)),s[i]<=o&&i++}e[o]!==1&&(n.push(e[o]),r.push(o))}return{newShape:n,keptDims:r}}function b0(e,t){return Zf(e,t)}function Zf(e,t){let n=null;if(e==null||e==="float32")n=new Float32Array(t);else if(e==="int32")n=new Int32Array(t);else if(e==="bool")n=new Uint8Array(t);else if(e==="string")n=new Array(t);else throw new Error(`Unknown data type ${e}`);return n}function x0(e,t){for(let n=0;n<e.length;n++){let r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function v0(e){return e==="bool"||e==="complex64"||e==="float32"||e==="int32"||e==="string"}function YE(e,t){return!(t==="complex64"||t==="float32"&&e!=="complex64"||t==="int32"&&e!=="float32"&&e!=="complex64"||t==="bool"&&e==="bool")}function hh(e){if(e==="float32"||e==="int32")return 4;if(e==="complex64")return 8;if(e==="bool")return 1;throw new Error(`Unknown dtype ${e}`)}function w0(e){if(e==null)return 0;let t=0;return e.forEach(n=>t+=n.length),t}function _a(e){return typeof e=="string"||e instanceof String}function k0(e){return typeof e=="boolean"}function I0(e){return typeof e=="number"}function bp(e){return Array.isArray(e)?bp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":I0(e)?"float32":_a(e)?"string":k0(e)?"bool":"float32"}function Ma(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ch(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function sl(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function S0(e,t,n,r=!1){let a=new Array;if(t.length===1){let s=t[0]*(r?2:1);for(let i=0;i<s;i++)a[i]=n[e+i]}else{let s=t[0],i=t.slice(1),o=i.reduce((u,p)=>u*p)*(r?2:1);for(let u=0;u<s;u++)a[u]=S0(e+u*o,i,n,r)}return a}function Do(e,t,n=!1){if(e.length===0)return t[0];let r=e.reduce((a,s)=>a*s)*(n?2:1);if(r===0)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return S0(0,e,t,n)}function QE(e,t){if(Array.isArray(e))return e;if(t==="float32")return e instanceof Float32Array?e:new Float32Array(e);if(t==="int32")return e instanceof Int32Array?e:new Int32Array(e);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function Jf(e,t){let n=qh(e,t);for(let r=0;r<n.length;r++)n[r]=1;return n}function qh(e,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool")return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function e$(e,t){let n=e.reduce((r,a)=>r*a,1);if(t==null||t==="float32")return Do(e,new Float32Array(n));if(t==="int32")return Do(e,new Int32Array(n));if(t==="bool")return Do(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Kn(e){e.forEach(t=>{$(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function t$(e,t,n){if(t===0)return 0;if(t===1)return e[0];let r=e[e.length-1];for(let a=0;a<e.length-1;++a)r+=n[a]*e[a];return r}function n$(e,t,n){if(t===0)return[];if(t===1)return[e];let r=new Array(t);for(let a=0;a<r.length-1;++a)r[a]=Math.floor(e/n[a]),e-=r[a]*n[a];return r[r.length-1]=e,r}function Kh(e){return e&&e.then&&typeof e.then=="function"}var Tv="tfjsflags",N0=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=r$,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},this.urlFlags[e]!=null){let r=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(Kh(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;let e=this.getQueryParams(this.global.location.search);Tv in e&&e[Tv].split(",").forEach(t=>{let[n,r]=t.split(":");this.urlFlags[n]=s$(n,r)})}};function r$(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(n,...r)=>(a$(t,r[0],r[1]),r.join("="))),t}function a$(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function s$(e,t){let n=t.toLowerCase();return n==="true"||n==="false"?n==="true":`${+n}`===n?+n:t}function H(){return Yf}var Yf=null;function i$(e){Yf=e}var Nm;function T0(){if(Nm==null){let e;if(typeof window<"u")e=window;else if(typeof global<"u")e=global;else if(typeof process<"u")e=process;else if(typeof self<"u")e=self;else throw new Error("Could not find a global object");Nm=e}return Nm}function o$(){let e=T0();return e._tfGlobals==null&&(e._tfGlobals=new Map),e._tfGlobals}function Qf(e,t){let n=o$();if(n.has(e))return n.get(e);{let r=t();return n.set(e,r),n.get(e)}}var il="Abs",Xs="Acos",Zs="Acosh",Ka="Add",Js="AddN",ol="All",ll="Any",ul="ArgMax",pl="ArgMin",Ys="Asin",Qs="Asinh",ei="Atan",ti="Atanh",ni="Atan2",ri="AvgPool",xp="AvgPoolGrad",dl="AvgPool3D",vp="AvgPool3DGrad",ai="BatchMatMul",hl="BatchToSpaceND",cl="Bincount",ml="BitwiseAnd",C0="BroadcastTo",wp="BroadcastArgs",si="Cast",ii="Ceil",Xa="ClipByValue",Xh="Complex",kp="ComplexAbs",fl="Concat",oi="Conv2D",Zh="Conv2DBackpropFilter",li="Conv2DBackpropInput",ui="Conv3D",gl="Conv3DBackpropFilterV2",yl="Conv3DBackpropInputV2",pi="Cos",di="Cosh",bl="Cumprod",hi="Cumsum",xl="CropAndResize",Ip="DenseBincount",vl="DepthToSpace",ci="DepthwiseConv2dNative",Jh="DepthwiseConv2dNativeBackpropFilter",Yh="DepthwiseConv2dNativeBackpropInput",Sp="Diag",mi="Dilation2D",Po="Dilation2DBackpropInput",Bo="Dilation2DBackpropFilter",eg="Draw",fi="RealDiv",Qh="Einsum",gi="Elu",wl="EluGrad",yi="Erf",kl="Equal",bi="Exp",Il="ExpandDims",xi="Expm1",ec="FFT",Np="Fill",Sl="FlipLeftRight",vi="Floor",wi="FloorDiv",ki="FusedBatchNorm",Nl="GatherV2",Tl="GatherNd",Cl="Greater",Ii="GreaterEqual",Si="Identity",tc="IFFT",nc="Imag",Ni="IsFinite",Ti="IsInf",Ci="IsNan",_i="LeakyRelu",_l="Less",El="LessEqual",$l="LinSpace",Ei="Log",$i="Log1p",Al="LogicalAnd",Fl="LogicalNot",Rl="LogicalOr",_0="LogicalXor",E0="LogSoftmax",l$="LowerBound",Ai="LRN",Dl="LRNGrad",u$="MatrixBandPart",Fi="Max",Ri="Maximum",Di="MaxPool",Tp="MaxPoolGrad",Ml="MaxPool3D",Cp="MaxPool3DGrad",_p="MaxPoolWithArgmax",Mi="Mean",Oi="Min",Li="Minimum",zi="MirrorPad",Pi="Mod",Ol="Multinomial",Bi="Multiply",Ll="Neg",zl="NotEqual",Pl="NonMaxSuppressionV3",Bl="NonMaxSuppressionV4",Wl="NonMaxSuppressionV5",Vl="OnesLike",Wi="OneHot",Ul="Pack",Vi="PadV2",p$="Pool",Ui="Pow",Gi="Prelu",Hi="Prod",rc="RaggedGather",ac="RaggedRange",sc="RaggedTensorToTensor",Ep="Range",ic="Real",ji="Reciprocal",qi="Relu",Gl="Reshape",Ki="ResizeNearestNeighbor",Hl="ResizeNearestNeighborGrad",Xi="ResizeBilinear",jl="ResizeBilinearGrad",Zi="Relu6",Ji="Reverse",Yi="Round",Qi="Rsqrt",ql="ScatterNd",Kl="TensorScatterUpdate",Xl="SearchSorted",Zl="Select",eo="Selu",Jl="Slice",to="Sin",no="Sinh",ro="Sign",ao="Sigmoid",so="Softplus",io="Sqrt",oo="Sum",Yl="SpaceToBatchND",Ql="SplitV",lo="Softmax",$p="SparseFillEmptyRows",eu="SparseReshape",Ap="SparseSegmentMean",Fp="SparseSegmentSum",tu="SparseToDense",uo="SquaredDifference",Rp="Square",Dp="StaticRegexReplace",nu="StridedSlice",Mp="StringNGrams",Op="StringSplit",Lp="StringToHashBucketFast",po="Sub",ho="Tan",co="Tanh",Za="Tile",ru="TopK",au="Transform",oa="Transpose",zp="Unique",su="Unpack",Pp="UnsortedSegmentSum",d$="UpperBound",iu="ZerosLike",Ja="Step",mh="FromPixels",ou="RotateWithOffset",Es="_FusedMatMul",$s="FusedConv2D",As="FusedDepthwiseConv2D";function Ca(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...e)}function h$(...e){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...e)}var Wo=Qf("kernelRegistry",()=>new Map),ep=Qf("gradRegistry",()=>new Map);function fh(e,t){let n=tg(e,t);return Wo.get(n)}function Gm(e){return ep.get(e)}function gh(e){let t=Wo.entries(),n=[];for(;;){let{done:r,value:a}=t.next();if(r)break;let[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function Bp(e){let{kernelName:t,backendName:n}=e,r=tg(t,n);Wo.has(r)&&Ca(`The kernel '${t}' for backend '${n}' is already registered`),Wo.set(r,e)}function $0(e){let{kernelName:t}=e;ep.has(t)&&H().getBool("DEBUG")&&Ca(`Overriding the gradient for '${t}'`),ep.set(t,e)}function c$(e,t){let n=tg(e,t);if(!Wo.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Wo.delete(n)}function m$(e){if(!ep.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ep.delete(e)}function f$(e,t){gh(e).forEach(n=>{let r=Object.assign({},n,{backendName:t});Bp(r)})}function tg(e,t){return`${t}_${e}`}var v={};Ee(v,{arraysEqual:()=>ca,arraysEqualWithNull:()=>g0,assert:()=>$,assertNonNegativeIntegerDimensions:()=>Kn,assertNonNull:()=>Ks,assertShapesMatch:()=>vn,bytesFromStringArray:()=>w0,bytesPerElement:()=>hh,checkConversionForErrors:()=>x0,clamp:()=>Qu,computeStrides:()=>sl,convertBackendValuesAndArrayBuffer:()=>QE,createScalarValue:()=>w$,createShuffledIndices:()=>XE,decodeString:()=>yh,distSquared:()=>HE,encodeString:()=>Vp,fetch:()=>I$,fingerPrint64:()=>v$,flatten:()=>Oa,getArrayFromDType:()=>Zf,getTypedArrayFromDType:()=>b0,hasEncodingLoss:()=>YE,hexToLong:()=>Wp,indexToLoc:()=>n$,inferDtype:()=>bp,inferFromImplicitShape:()=>JE,isBoolean:()=>k0,isFunction:()=>Ma,isInt:()=>zo,isNumber:()=>I0,isPromise:()=>Kh,isScalarShape:()=>jE,isString:()=>_a,isTypedArray:()=>Ht,isValidDtype:()=>v0,locToIndex:()=>t$,makeOnesTypedArray:()=>Jf,makeZerosNestedTypedArray:()=>e$,makeZerosTypedArray:()=>qh,nearestDivisor:()=>ch,nearestLargerEven:()=>VE,now:()=>tp,parseAxisParam:()=>yr,randUniform:()=>GE,repeatedTry:()=>ZE,rightPad:()=>Ku,shuffle:()=>f0,shuffleCombo:()=>WE,sizeFromShape:()=>dt,sizeToSquarishShape:()=>KE,squeezeShape:()=>y0,sum:()=>UE,swap:()=>dh,tanh:()=>qE,toNestedArray:()=>Do,toTypedArray:()=>oc});function A0(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Cv=qa(SE()),gs=Cv.default||Cv;function Wp(e){return gs.fromString(e,!0,16)}var F0=Wp("c3a5c85c97cb3127"),ms=Wp("b492b66fbe98f273"),pn=Wp("9ae16a3b2f90404f");function Hm(e){return e.xor(e.shru(47))}function R0(e,t,n){let r=e.slice(t,t+n);return gs.fromBytes(Array.from(r),!0,!0)}function pt(e,t){return R0(e,t,8)}function _v(e,t){return R0(e,t,4)}function Gt(e,t){return t===0?e:e.shru(t).or(e.shl(64-t))}function Fa(e,t,n=Wp("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function g$(e,t,n,r,a,s){a=a.add(e),s=Gt(s.add(a).add(r),21);let i=a;return a=a.add(t),a=a.add(n),s=s.add(Gt(a,44)),[a.add(r),s.add(i)]}function Pd(e,t,n,r){return g$(pt(e,t),pt(e,t+8),pt(e,t+16),pt(e,t+24),n,r)}function y$(e,t=e.length){if(t>=8){let n=pn.add(t*2),r=pt(e,0).add(pn),a=pt(e,t-8),s=Gt(a,37).mul(n).add(r),i=Gt(r,25).add(a).mul(n);return Fa(s,i,n)}if(t>=4){let n=pn.add(t*2),r=_v(e,0);return Fa(r.shl(3).add(t),_v(e,t-4),n)}if(t>0){let n=e[0],r=e[t>>1],a=e[t-1],s=n+(r<<8),i=t+(a<<2);return Hm(pn.mul(s).xor(F0.mul(i))).mul(pn)}return pn}function b$(e,t=e.length){let n=pn.add(t*2),r=pt(e,0).mul(ms),a=pt(e,8),s=pt(e,t-8).mul(n),i=pt(e,t-16).mul(pn);return Fa(Gt(r.add(a),43).add(Gt(s,30)).add(i),r.add(Gt(a.add(pn),18)).add(s),n)}function x$(e,t=e.length){let n=pn.add(t*2),r=pt(e,0).mul(pn),a=pt(e,8),s=pt(e,t-8).mul(n),i=pt(e,t-16).mul(pn),o=Gt(r.add(a),43).add(Gt(s,30)).add(i),u=Fa(o,r.add(Gt(a.add(pn),18)).add(s),n),p=pt(e,16).mul(n),l=pt(e,24),d=o.add(pt(e,t-32)).mul(n),h=u.add(pt(e,t-24)).mul(n);return Fa(Gt(p.add(l),43).add(Gt(d,30)).add(h),p.add(Gt(l.add(r),18)).add(d),n)}function v$(e,t=e.length){let n=gs.fromNumber(81,!0);if(t<=32)return t<=16?y$(e,t):b$(e,t);if(t<=64)return x$(e,t);let r=n,a=n.mul(ms).add(113),s=Hm(a.mul(pn).add(113)).mul(pn),i=[gs.UZERO,gs.UZERO],o=[gs.UZERO,gs.UZERO];r=r.mul(pn).add(pt(e,0));let u=0,p=(t-1>>6)*64,l=p+(t-1&63)-63;do r=Gt(r.add(a).add(i[0]).add(pt(e,u+8)),37).mul(ms),a=Gt(a.add(i[1]).add(pt(e,u+48)),42).mul(ms),r=r.xor(o[1]),a=a.add(i[0]).add(pt(e,u+40)),s=Gt(s.add(o[0]),33).mul(ms),i=Pd(e,u,i[1].mul(ms),r.add(o[0])),o=Pd(e,u+32,s.add(o[1]),a.add(pt(e,u+16))),[s,r]=[r,s],u+=64;while(u!==p);let d=ms.add(s.and(255).shl(1));return u=l,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Gt(r.add(a).add(i[0]).add(pt(e,u+8)),37).mul(d),a=Gt(a.add(i[1]).add(pt(e,u+48)),42).mul(d),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add(pt(e,u+40))),s=Gt(s.add(o[0]),33).mul(d),i=Pd(e,u,i[1].mul(d),r.add(o[0])),o=Pd(e,u+32,s.add(o[1]),a.add(pt(e,u+16))),[s,r]=[r,s],Fa(Fa(i[0],o[0],d).add(Hm(a).mul(F0)).add(s),Fa(i[1],o[1],d).add(r),d)}function w$(e,t){return t==="string"?Vp(e):oc([e],t)}function k$(e,t){return e instanceof Float32Array&&t==="float32"||e instanceof Int32Array&&t==="int32"||e instanceof Uint8Array&&t==="bool"}function oc(e,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Oa(e)),H().getBool("DEBUG")&&x0(e,t),k$(e,t))return e;if(t==null||t==="float32"||t==="complex64")return new Float32Array(e);if(t==="int32")return new Int32Array(e);if(t==="bool"){let n=new Uint8Array(e.length);for(let r=0;r<n.length;++r)Math.round(e[r])!==0&&(n[r]=1);return n}else throw new Error(`Unknown data type ${t}`)}function tp(){return H().platform.now()}function I$(e,t){return H().platform.fetch(e,t)}function Vp(e,t="utf-8"){return t=t||"utf-8",H().platform.encode(e,t)}function yh(e,t="utf-8"){return t=t||"utf-8",H().platform.decode(e,t)}function Ht(e){return H().platform.isTypedArray!=null?H().platform.isTypedArray(e):A0(e)}function Oa(e,t=[],n=!1){if(t==null&&(t=[]),typeof e=="boolean"||typeof e=="number"||typeof e=="string"||Kh(e)||e==null||Ht(e)&&n)t.push(e);else if(Array.isArray(e)||Ht(e))for(let r=0;r<e.length;++r)Oa(e[r],t,n);else{let r=-1;for(let a of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(a)&&(r=Math.max(r,Number(a)));for(let a=0;a<=r;a++)Oa(e[a],t,n)}return t}var S$=class{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new T$)}profileKernel(e,t,n){let r,a=()=>{r=n()},s,i=tp();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(let o of r)o.dataSync();s=Promise.resolve({kernelMs:tp()-i})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let o=0;o<r.length;o++){let u=r[o];u.data().then(p=>{N$(p,u.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(o=>o.kernelMs),extraInfo:s.then(o=>o.getExtraProfileInfo!=null?o.getExtraProfileInfo():"")}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(i=>{Promise.all([i.data(),r,s]).then(o=>{this.logger.logKernelProfile(t,i,o[0],o[1],a,o[2])})})}};function N$(e,t,n){if(t!=="float32")return!1;for(let r=0;r<e.length;r++){let a=e[r];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var T$=class{logKernelProfile(e,t,n,r,a,s){let i=typeof r=="number"?Ku(`${r}ms`,9):r.error,o=Ku(e,25),u=t.rank,p=t.size,l=Ku(t.shape.toString(),14),d="";for(let h in a){let c=a[h];if(c!=null){let m=c.shape||t.shape,f=m.length;d+=`${h}: ${f}D ${f>0?m:""} `}}console.log(`%c${o}	%c${i}	%c${u}D ${l}	%c${p}	%c${d}	%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function C$(e,t,n){let r={},a={};for(let u=0;u<t.length;u++)r[t[u].id]=!0;for(let u=0;u<e.length;u++){let p=e[u],l=p.inputs;for(let d in l){let h=l[d],c=!1;for(let m=0;m<t.length;m++)if(r[h.id]){p.outputs.forEach(f=>r[f.id]=!0),c=!0,a[p.id]=!0;break}if(c)break}}let s={};s[n.id]=!0;let i={};for(let u=e.length-1;u>=0;u--){let p=e[u],l=p.inputs;for(let d=0;d<p.outputs.length;d++)if(s[p.outputs[d].id]){for(let h in l)s[l[h].id]=!0,i[p.id]=!0;break}}let o=[];for(let u=0;u<e.length;u++){let p=e[u];if(a[p.id]&&i[p.id]){let l={};for(let h in p.inputs){let c=p.inputs[h];r[c.id]&&(l[h]=c)}let d=Object.assign({},p);d.inputs=l,d.outputs=p.outputs,o.push(d)}}return o}function _$(e,t,n,r){for(let a=t.length-1;a>=0;a--){let s=t[a],i=[];if(s.outputs.forEach(u=>{let p=e[u.id];p!=null?i.push(p):i.push(null)}),s.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let u in s.inputs){if(!(u in o))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(o)}.`);let p=n(()=>o[u]());if(p.dtype!=="float32")throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${p.dtype}'`);let l=s.inputs[u];if(!ca(p.shape,l.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${u}' has shape '${p.shape}', which does not match the shape of the input '${l.shape}'`);if(e[l.id]==null)e[l.id]=p;else{let d=e[l.id];e[l.id]=r(d,p),d.dispose()}}}}var Ev=20,Ru=3,Tm=7;function E$(e,t,n,r){let a=sl(t),s=$$(e,t,n,a),i=t.length,o=nh(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(p=>"    "+p).join(`
`)),u.join(`
`)}function $$(e,t,n,r){let a=dt(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u=n==="complex64"?Pu(e):e;if(o>1)for(let p=0;p<a/s;p++){let l=p*s;for(let d=0;d<s;d++)i[d]=Math.max(i[d],zu(u[l+d],0,n).length)}return i}function zu(e,t,n){let r;return Array.isArray(e)?r=`${parseFloat(e[0].toFixed(Tm))} + ${parseFloat(e[1].toFixed(Tm))}j`:_a(e)?r=`'${e}'`:n==="bool"?r=D0(e):r=parseFloat(e.toFixed(Tm)).toString(),Ku(r,t)}function D0(e){return e===0?"false":"true"}function nh(e,t,n,r,a,s=!0){let i=n==="complex64"?2:1,o=t[0],u=t.length;if(u===0){if(n==="complex64"){let f=Pu(e);return[zu(f[0],0,n)]}return n==="bool"?[D0(e[0])]:[e[0].toString()]}if(u===1){if(o>Ev){let f=Ru*i,g=Array.from(e.slice(0,f)),y=Array.from(e.slice((o-Ru)*i,o*i));return n==="complex64"&&(g=Pu(g),y=Pu(y)),["["+g.map((b,x)=>zu(b,a[x],n)).join(", ")+", ..., "+y.map((b,x)=>zu(b,a[o-Ru+x],n)).join(", ")+"]"]}return["["+(n==="complex64"?Pu(e):Array.from(e)).map((f,g)=>zu(f,a[g],n)).join(", ")+"]"]}let p=t.slice(1),l=r.slice(1),d=r[0]*i,h=[];if(o>Ev){for(let f=0;f<Ru;f++){let g=f*d,y=g+d;h.push(...nh(e.slice(g,y),p,n,l,a,!1))}h.push("...");for(let f=o-Ru;f<o;f++){let g=f*d,y=g+d;h.push(...nh(e.slice(g,y),p,n,l,a,f===o-1))}}else for(let f=0;f<o;f++){let g=f*d,y=g+d;h.push(...nh(e.slice(g,y),p,n,l,a,f===o-1))}let c=u===2?",":"";h[0]="["+(o>0?h[0]+c:"");for(let f=1;f<h.length-1;f++)h[f]=" "+h[f]+c;let m=`,
`;for(let f=2;f<u;f++)m+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":m),h}function Pu(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var At=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=dt(e),n!=null){let r=n.length;$(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Zf(t,this.size),this.strides=sl(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);let n=this.locToIndex(t);this.values[n]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(let r of e){if(r<0||r>=this.shape[t]){let a=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(a)}t++}let n=e[e.length-1];for(let r=0;r<e.length-1;++r)n+=this.strides[r]*e[r];return this.values[n]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return wr().makeTensor(this.values,this.shape,this.dtype)}},wr=null,Fo=null;function A$(e){wr=e}function F$(e){Fo=e}var Ae=class{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=dt(e),this.strides=sl(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Fo.buffer(this.shape,this.dtype,e)}bufferSync(){return Fo.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Do(this.shape,e,this.dtype==="complex64")}arraySync(){return Do(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();let e=wr().read(this.dataId);if(this.dtype==="string"){let t=await e;try{return t.map(n=>yh(n))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),wr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=wr().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>yh(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await wr().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(wr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Fo.print(this,e)}clone(){return this.throwIfDisposed(),Fo.clone(this)}toString(e=!1){let t=this.dataSync();return E$(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Fo.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),wr().makeVariable(this,e,t,n)}};Object.defineProperty(Ae,Symbol.hasInstance,{value:e=>!!e&&e.data!=null&&e.dataSync!=null&&e.throwIfDisposed!=null});function Y(){return Qf("Tensor",()=>Ae)}Y();var Fs=class extends Ae{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ca(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);wr().disposeTensor(this),this.dataId=e.dataId,wr().incRef(this,null)}dispose(){wr().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Fs,Symbol.hasInstance,{value:e=>e instanceof Ae&&e.assign!=null&&e.assign instanceof Function});var Sr={};Ee(Sr,{assertTypesMatch:()=>L0,getTensorsInContainer:()=>ng,isTensorInList:()=>D$,makeTypesMatch:()=>kt});var jm;(function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"})(jm||(jm={}));var qm;(function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"})(qm||(qm={}));var Km;(function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"})(Km||(Km={}));var Xm;(function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"})(Xm||(Xm={}));var Zm;(function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"})(Zm||(Zm={}));var R$={float32:Xm,int32:qm,bool:Km,complex64:Zm};function ar(e,t){if(e==="string"||t==="string"){if(e==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return R$[e][t]}function lc(e){return ar(e,"int32")}function M0(e){return e!=null&&typeof e=="object"&&"texture"in e&&e.texture instanceof WebGLTexture}function O0(e){return typeof GPUBuffer<"u"&&e!=null&&typeof e=="object"&&"buffer"in e&&e.buffer instanceof GPUBuffer}function kt(e,t){if(e.dtype===t.dtype)return[e,t];let n=ar(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function L0(e,t){$(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function D$(e,t){return t.some(n=>n.id===e.id)}function ng(e){let t=[];return z0(e,t,new Set),t}function z0(e,t,n){if(e==null)return;if(e instanceof Ae){t.push(e);return}if(!M$(e))return;let r=e;for(let a in r){let s=r[a];n.has(s)||(n.add(s),z0(s,t,n))}}function M$(e){return Array.isArray(e)||typeof e=="object"}function Cm(e){return e.kernelName!=null}var $v=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},np=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new $v}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success){await this.setBackend(n);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){let{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(Ca(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new S$(this.backendInstance),!0}setupRegisteredKernels(){gh(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){gh(e).forEach(t=>{t.disposeFunc!=null&&t.disposeFunc(this.registry[e])})}initializeBackend(e){let t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(n&&!(n instanceof yp)&&typeof n.then=="function"){let r=++this.pendingBackendInitId,a=n.then(s=>r<this.pendingBackendInitId?!1:(this.registry[e]=s,this.pendingBackendInit=null,!0)).catch(s=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,Ca(`Initialization of backend ${e} failed`),Ca(s.stack||s.message)),!1));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}else return this.registry[e]=n,{success:!0,asyncInit:!1}}catch(n){return Ca(`Initialization of backend ${e} failed`),Ca(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");n=e}let r;return this.scopedRun(()=>this.startScope(n),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,n){e();try{let r=n();return t(),r}catch(r){throw t(),r}}nextTensorId(){return np.nextTensorId++}nextVariableId(){return np.nextVariableId++}clone(e){let t=O.runKernel(Si,{x:e}),n={x:e},r=s=>({x:()=>{let i="float32",o={x:s},u={dtype:i};return O.runKernel(si,o,u)}}),a=[];return this.addTapeNode(this.state.activeScope.name,n,[t],r,a,{}),t}runKernel(e,t,n){if(this.backendName==null&&this.backend,fh(e,this.backendName)==null)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let r=this.backend.numDataIds(),a=0;n.forEach(o=>{a+=o.dtype==="complex64"?3:1});let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[],r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let o,u=Cm(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Cm(e)){let{kernelName:c,inputs:m,attrs:f}=e;this.backendName==null&&this.backend;let g=fh(c,this.backendName);$(g!=null,()=>`Cannot find registered kernel '${c}' for backend '${this.backendName}'`),i=()=>{let y=this.backend.numDataIds();o=g.kernelFunc({inputs:m,attrs:f,backend:this.backend});let b=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,y,b);let x=b.map(w=>w.rank!=null?w:this.makeTensorFromTensorInfo(w));if(r){let w=this.getTensorsForGradient(c,m,x);n=this.saveTensorsForBackwardMode(w)}return x}}else{let{forwardFunc:c}=e,m=f=>{r&&(n=f.map(g=>this.keep(this.clone(g))))};i=()=>{let f=this.backend.numDataIds();o=this.tidy(()=>c(this.backend,m));let g=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,f,g),g}}let{inputs:p,attrs:l}=e,d=Cm(e)?null:e.backwardsFunc,h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(h=this.profiler.profileKernel(u,p,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs)}),r&&this.addTapeNode(u,p,t,d,n,l),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map(c=>p[c]!=null?p[c].shape:null),outputShapes:t.map(c=>c.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(t=>this.keep(this.clone(t)))}getTensorsForGradient(e,t,n){let r=Gm(e);if(r!=null){let a=r.inputsToSave||[],s=r.outputsToSave||[],i;r.saveAllInputs?($(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=a.map(u=>t[u]);let o=n.filter((u,p)=>s[p]);return i.concat(o)}return[]}makeTensor(e,t,n,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;n==="string"&&_a(e[0])&&(a=e.map(o=>Vp(o)));let s=r.write(a,t,n),i=new Ae(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),n==="string"){let o=this.state.tensorInfo.get(s),u=w0(a);this.state.numBytes+=u-o.bytes,o.bytes=u}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";let a={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(a,r)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:r,dtype:a}=e,s=new Ae(r,a,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));let a=new Fs(e,t,n,this.nextTensorId());if(this.state.registeredVariables[a.name]!=null)throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let n=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(n=e.size*hh(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Fs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){let n=e.size*hh(e.dtype);this.state.numBytes-=n}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,n,r,a,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=Gm(e);o!=null&&(r=o.gradFunc),r!=null&&(i.gradient=u=>(u=u.map((p,l)=>{if(p==null){let d=n[l],h=qh(d.size,d.dtype);return this.makeTensor(h,d.shape,d.dtype)}return p}),r(u.length>1?u:u[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=ng(e),n=new Set(t.map(a=>a.id));for(let a=0;a<this.state.activeScope.track.length;a++){let s=this.state.activeScope.track[a];!s.kept&&!n.has(s.id)&&s.dispose()}let r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(a=>{!a.kept&&a.scopeId===r.id&&this.track(a)})}gradients(e,t,n,r=!1){if($(t.length>0,()=>"gradients() received an empty list of xs."),n!=null&&n.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(a instanceof Ae,()=>"The result y returned by f() must be a tensor.");let s=C$(this.state.activeTape,t,a);if(!r&&s.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{let i={};i[a.id]=n==null?O$(a.shape):n,_$(i,s,u=>this.tidy(u),L$);let o=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(let p of u.saved)p.dispose()}),this.state.activeTape=null),{value:a,grads:o}})}customGrad(e){return $(Ma(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{$(t.every(i=>i instanceof Ae),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let n,r={};t.forEach((i,o)=>{r[o]=i});let a=(i,o)=>(n=e(...t,o),$(n.value instanceof Ae,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(Ma(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),s=(i,o)=>{let u=n.gradFunc(i,o),p=Array.isArray(u)?u:[u];$(p.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(p.every(d=>d instanceof Ae),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");let l={};return p.forEach((d,h)=>{l[h]=()=>d}),l};return this.runKernelFunc({forwardFunc:a,backwardsFunc:s,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=tp(),n=await this.backend.time(e);return n.wallMs=tp()-t,n}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new $v;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};np.nextTensorId=0;np.nextVariableId=0;function O$(e){let t=Jf(dt(e),"float32");return O.makeTensor(t,e,"float32")}function P0(){let e=T0();if(e._tfengine==null){let t=new N0(e);e._tfengine=new np(t)}return i$(e._tfengine.ENV),A$(()=>e._tfengine),e._tfengine}var O=P0();function L$(e,t){let n={a:e,b:t};return O.runKernel(Ka,n)}var Up={};Ee(Up,{isBrowser:()=>B0,isMobile:()=>B$,mockIsMobile:()=>P$});function z$(){return typeof navigator<"u"&&navigator!=null}var Jm;function P$(e){Jm=e}function B$(e){if(Jm!==void 0)return Jm;if(e||z$()){if(e||(e=navigator),e.product==="ReactNative")return!0;let t=e.userAgent||e.vendor||(typeof window<"u"?window.opera:"");if(!t){let n=e;return n.userAgentData&&n.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function B0(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}var An=H();An.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});An.registerFlag("IS_BROWSER",()=>B0());An.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");An.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));An.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));An.registerFlag("PROD",()=>!1);An.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>An.getBool("DEBUG"));An.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);An.registerFlag("IS_TEST",()=>!1);An.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>An.getBool("DEBUG"));An.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);An.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);An.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);function Ur(e,t){let n=e;if(Ht(e))return t==="string"?[]:[e.length];if(M0(e)){let a=e.channels||"RGBA";return[e.height,e.width*a.length]}else if(O0(e))return[e.buffer.size/(t==null?4:hh(t))];if(!Array.isArray(e))return[];let r=[];for(;Array.isArray(n)||Ht(n)&&t!=="string";)r.push(n.length),n=n[0];return Array.isArray(e)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&W0(e,r,[]),r}function W0(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ht(e)){$(t.length===0,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}$(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),$(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);let r=t.slice(1);for(let a=0;a<e.length;++a)W0(e[a],r,n.concat(a))}function Av(e,t,n,r){if(e!=="string_or_numeric"){if(e==null)throw new Error("Expected dtype cannot be null.");if(e!=="numeric"&&e!==t||e==="numeric"&&t==="string")throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function _(e,t,n,r="numeric"){if(e instanceof Ae)return Av(r,e.dtype,t,n),e;let a=bp(e);if(a!=="string"&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Av(r,a,t,n),e==null||!Ht(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string"){let o=e==null?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${o}'`)}let s=Ur(e,a);!Ht(e)&&!Array.isArray(e)&&(e=[e]);let i=a!=="string"?oc(e,a):Oa(e,[],!0);return O.makeTensor(i,s,a)}function rp(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((a,s)=>_(a,`${t}[${s}]`,n,r))}var rg="__op";function L(e){let t=Object.keys(e);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n=n+rg;let a=(...s)=>{O.startScope(n);try{let i=r(...s);return Kh(i)&&console.error("Cannot return a Promise inside of tidy."),O.endScope(i),i}catch(i){throw O.endScope(null),i}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}function W$(e,t){let n=_(e,"real","complex"),r=_(t,"imag","complex");vn(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);let a={real:n,imag:r};return O.runKernel(Xh,a)}var pa=L({complex_:W$});function Ya(e,t,n,r){if(r==null)r=bp(e);else if(r==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(O0(e)||M0(e)){if(r!=="float32"&&r!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${r}.`);return O.backend.createTensorFromGPUData(e,t||n,r)}if(!Ht(e)&&!Array.isArray(e)&&typeof e!="number"&&typeof e!="boolean"&&typeof e!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){Kn(t);let a=dt(t),s=dt(n);$(a===s,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${s}`);for(let i=0;i<n.length;++i){let o=n[i],u=i===n.length-1?o!==dt(t.slice(i)):!0;$(n[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return!Ht(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e=r!=="string"?oc(e,r):Oa(e,[],!0),O.makeTensor(e,t,r)}function mn(e,t,n){let r=Ur(e,n);return Ya(e,t,r,n)}var Ym={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},jr=class{static join(e){return new jr(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,e==null||(e instanceof Array||(e=[e]),e=e.map(n=>Ht(n)?n.buffer:n),e.length===0))return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){let r=e[n];n!==e.length-1&&r.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);let a=t+r.byteLength;this.shards.push({buffer:r,start:t,end:a}),t=a}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);let n=this.findShardForByte(e);if(n===-1)throw new Error(`Could not find start shard for byte ${e}`);let r=t-e,a=new ArrayBuffer(r),s=new Uint8Array(a),i=0;for(let o=n;o<this.shards.length;o++){let u=this.shards[o],p=e+i-u.start,l=i,d=Math.min(t,u.end)-u.start,h=new Uint8Array(u.buffer,p,d-p);if(s.set(h,l),i+=h.length,t<u.end)break}return a}findShardForByte(e){if(this.shards.length===0||e<0||e>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(r){return e<r.start?-1:e>=r.end?1:0}if(t(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;let n=V$(this.shards,t);return n===-1?-1:(this.previousShardIndex=n,this.previousShardIndex)}};function V$(e,t){let n=0,r=e.length;for(;n<=r;){let a=Math.floor((r-n)/2)+n,s=t(e[a]);if(s===0)return a;s<0?r=a:n=a+1}return-1}var bh=4;async function U$(e,t){let n=[],r=[],a=Array.isArray(e)?e.map(i=>i.name):Object.keys(e);for(let i=0;i<a.length;++i){let o=a[i],u=Array.isArray(e)?e[i].tensor:e[o];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${o}': ${u.dtype}`);let p={name:o,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){let l=new Promise(async d=>{let h=await u.bytes(),c=h.reduce((g,y)=>g+y.length,0)+bh*h.length,m=new Uint8Array(c),f=0;for(let g=0;g<h.length;g++){let y=h[g],b=new Uint8Array(new Uint32Array([y.length]).buffer);m.set(b,f),f+=bh,m.set(y,f),f+=y.length}d(m)});r.push(l)}else r.push(u.data());t!=null&&(p.group=t),n.push(p)}let s=await Promise.all(r);return{data:G$(s),specs:n}}function V0(e,t){let n=new jr(e),r={},a,s=0;for(let i of t){let o=i.name,u=i.dtype,p=i.shape,l=dt(p),d;if("quantization"in i){let h=i.quantization;if(h.dtype==="uint8"||h.dtype==="uint16"){if(!("min"in h&&"scale"in h))throw new Error(`Weight ${i.name} with quantization ${h.dtype} doesn't have corresponding metadata min and scale.`)}else if(h.dtype==="float16"){if(u!=="float32")throw new Error(`Weight ${i.name} is quantized with ${h.dtype} which only supports weights of type float32 not ${u}.`)}else throw new Error(`Weight ${i.name} has unknown quantization dtype ${h.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);let c=Ym[h.dtype],m=n.slice(s,s+l*c),f=h.dtype==="uint8"?new Uint8Array(m):new Uint16Array(m);if(u==="float32")if(h.dtype==="uint8"||h.dtype==="uint16"){d=new Float32Array(f.length);for(let g=0;g<f.length;g++){let y=f[g];d[g]=y*h.scale+h.min}}else if(h.dtype==="float16")a===void 0&&(a=J$()),d=a(f);else throw new Error(`Unsupported quantization type ${h.dtype} for weight type float32.`);else if(u==="int32"){if(h.dtype!=="uint8"&&h.dtype!=="uint16")throw new Error(`Unsupported quantization type ${h.dtype} for weight type int32.`);d=new Int32Array(f.length);for(let g=0;g<f.length;g++){let y=f[g];d[g]=Math.round(y*h.scale+h.min)}}else throw new Error(`Unsupported dtype in weight '${o}': ${u}`);s+=l*c}else if(u==="string"){let h=dt(i.shape);d=[];for(let c=0;c<h;c++){let m=new Uint32Array(n.slice(s,s+bh))[0];s+=bh;let f=new Uint8Array(n.slice(s,s+m));d.push(f),s+=m}}else{let h=Ym[u],c=n.slice(s,s+l*h);if(u==="float32")d=new Float32Array(c);else if(u==="int32")d=new Int32Array(c);else if(u==="bool")d=new Uint8Array(c);else if(u==="complex64"){d=new Float32Array(c);let m=new Float32Array(d.length/2),f=new Float32Array(d.length/2);for(let b=0;b<m.length;b++)m[b]=d[b*2],f[b]=d[b*2+1];let g=mn(m,p,"float32"),y=mn(f,p,"float32");r[o]=pa(g,y),g.dispose(),y.dispose()}else throw new Error(`Unsupported dtype in weight '${o}': ${u}`);s+=l*h}u!=="complex64"&&(r[o]=mn(d,p,u))}return r}function G$(e){if(e===null)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach(s=>{if(t+=s.byteLength,n.push(s.byteLength===s.buffer.byteLength?s:new s.constructor(s)),!(s instanceof Float32Array||s instanceof Int32Array||s instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${s.constructor.name}`)});let r=new Uint8Array(t),a=0;return n.forEach(s=>{r.set(new Uint8Array(s.buffer),a),a+=s.byteLength}),r.buffer}var ag=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Fv(e){return ag?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function H$(e){if(ag)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let r=0,a=t.length;r<a;r++)n+=String.fromCharCode(t[r]);return btoa(n)}function j$(e){if(ag){let r=Buffer.from(e,"base64");return r.buffer.slice(r.byteOffset,r.byteOffset+r.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let r=0;r<t.length;++r)n.set([t.charCodeAt(r)],r);return n.buffer}function q$(e){return jr.join(e)}function Rv(e){let t="/";for(e=e.trim();e.endsWith(t);)e=e.slice(0,e.length-1);let n=e.split(t);return n[n.length-1]}function U0(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return e.signature!=null&&(n.signature=e.signature),e.userDefinedMetadata!=null&&(n.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(n.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(n.initializerSignature=e.initializerSignature),e.trainingConfig!=null&&(n.trainingConfig=e.trainingConfig),n}function G0(e,t,n){let r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(e.trainingConfig!=null&&(r.trainingConfig=e.trainingConfig),e.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");r.weightSpecs=t,r.weightData=n}return e.signature!=null&&(r.signature=e.signature),e.userDefinedMetadata!=null&&(r.userDefinedMetadata=e.userDefinedMetadata),e.modelInitializer!=null&&(r.modelInitializer=e.modelInitializer),e.initializerSignature!=null&&(r.initializerSignature=e.initializerSignature),r}async function sg(e,t){let n,r;return e.weightsManifest!=null&&([n,r]=await t(e.weightsManifest)),G0(e,n,r)}function Gp(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:e.modelTopology==null?0:Fv(JSON.stringify(e.modelTopology)),weightSpecsBytes:e.weightSpecs==null?0:Fv(JSON.stringify(e.weightSpecs)),weightDataBytes:e.weightData==null?0:new jr(e.weightData).byteLength}}function H0(e){let t=[];for(let n of e)t.push(...n.weights);return t}function K$(){let e=n=>{let r=n<<13,a=0;for(;!(r&8388608);)a-=8388608,r<<=1;return r&=-8388609,a+=947912704,r|a},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function X$(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function Z$(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function J$(){let e=K$(),t=X$(),n=Z$();return r=>{let a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let i=0;i<r.length;i++){let o=r[i],u=e[n[o>>10]+(o&1023)]+t[o>>10];s[i]=u}return new Float32Array(a)}}var St=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return St.instance==null&&(St.instance=new St),St.instance}static registerSaveRouter(e){St.getInstance().saveRouters.push(e)}static registerLoadRouter(e){St.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return St.getHandlers(e,"save")}static getLoadHandlers(e,t){return St.getHandlers(e,"load",t)}static getHandlers(e,t,n){let r=[];return(t==="load"?St.getInstance().loadRouters:St.getInstance().saveRouters).forEach(a=>{let s=a(e,n);s!==null&&r.push(s)}),r}},Y$=e=>St.registerSaveRouter(e),Q$=e=>St.registerLoadRouter(e),eA=e=>St.getSaveHandlers(e),tA=(e,t)=>St.getLoadHandlers(e,t),Qm="tensorflowjs",ef=1,ws="models_store",Ea="model_info_store";function j0(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e=typeof window>"u"?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function tf(e){let t=e.result;t.createObjectStore(ws,{keyPath:"modelPath"}),t.createObjectStore(Ea,{keyPath:"modelPath"})}var Rs=class{constructor(e){if(this.indexedDB=j0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((n,r)=>{let a=this.indexedDB.open(Qm,ef);a.onupgradeneeded=()=>tf(a),a.onsuccess=()=>{let s=a.result;if(t==null){let i=s.transaction(ws,"readonly"),o=i.objectStore(ws).get(this.modelPath);o.onsuccess=()=>{if(o.result==null)return s.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));n(o.result.modelArtifacts)},o.onerror=u=>(s.close(),r(o.error)),i.oncomplete=()=>s.close()}else{t.weightData=jr.join(t.weightData);let i=Gp(t),o=s.transaction(Ea,"readwrite"),u=o.objectStore(Ea),p;try{p=u.put({modelPath:this.modelPath,modelArtifactsInfo:i})}catch(d){return r(d)}let l;p.onsuccess=()=>{l=s.transaction(ws,"readwrite");let d=l.objectStore(ws),h;try{h=d.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i})}catch(c){return r(c)}h.onsuccess=()=>n({modelArtifactsInfo:i}),h.onerror=c=>{u=o.objectStore(Ea);let m=u.delete(this.modelPath);m.onsuccess=()=>(s.close(),r(h.error)),m.onerror=f=>(s.close(),r(h.error))}},p.onerror=d=>(s.close(),r(p.error)),o.oncomplete=()=>{l==null?s.close():l.oncomplete=()=>s.close()}}},a.onerror=s=>r(a.error)})}};Rs.URL_SCHEME="indexeddb://";var q0=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Rs.URL_SCHEME)?nA(e.slice(Rs.URL_SCHEME.length)):null;St.registerSaveRouter(q0);St.registerLoadRouter(q0);function nA(e){return new Rs(e)}function rA(e){return e.startsWith(Rs.URL_SCHEME)?e.slice(Rs.URL_SCHEME.length):e}var aA=class{constructor(){this.indexedDB=j0()}async listModels(){return new Promise((e,t)=>{let n=this.indexedDB.open(Qm,ef);n.onupgradeneeded=()=>tf(n),n.onsuccess=()=>{let r=n.result,a=r.transaction(Ea,"readonly"),s=a.objectStore(Ea).getAll();s.onsuccess=()=>{let i={};for(let o of s.result)i[o.modelPath]=o.modelArtifactsInfo;e(i)},s.onerror=i=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=r=>t(n.error)})}async removeModel(e){return e=rA(e),new Promise((t,n)=>{let r=this.indexedDB.open(Qm,ef);r.onupgradeneeded=()=>tf(r),r.onsuccess=()=>{let a=r.result,s=a.transaction(Ea,"readwrite"),i=s.objectStore(Ea),o=i.get(e),u;o.onsuccess=()=>{if(o.result==null)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let p=i.delete(e),l=()=>{u=a.transaction(ws,"readwrite");let d=u.objectStore(ws).delete(e);d.onsuccess=()=>t(o.result.modelArtifactsInfo),d.onerror=h=>n(o.error)};p.onsuccess=l,p.onerror=d=>(l(),a.close(),n(o.error))}},o.onerror=p=>(a.close(),n(o.error)),s.oncomplete=()=>{u==null?a.close():u.oncomplete=()=>a.close()}},r.onerror=a=>n(r.error)})}},ia="/",Ro="tensorflowjs_models",K0="info",sA="model_topology",iA="weight_specs",oA="weight_data",lA="model_metadata";function X0(e){return{info:[Ro,e,K0].join(ia),topology:[Ro,e,sA].join(ia),weightSpecs:[Ro,e,iA].join(ia),weightData:[Ro,e,oA].join(ia),modelMetadata:[Ro,e,lA].join(ia)}}function Z0(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function uA(e){let t=e.split(ia);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ia)}function pA(e){return e.startsWith(Ds.URL_SCHEME)?e.slice(Ds.URL_SCHEME.length):e}var Ds=class{constructor(e){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=X0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Gp(e),a=jr.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,H$(a));let s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch{throw Z0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(n==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;let a=this.LS.getItem(this.keys.modelMetadata);if(a!=null){let i=JSON.parse(a);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(s==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=j$(s),t}};Ds.URL_SCHEME="localstorage://";var J0=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ds.URL_SCHEME)?dA(e.slice(Ds.URL_SCHEME.length)):null;St.registerSaveRouter(J0);St.registerLoadRouter(J0);function dA(e){return new Ds(e)}var hA=class{constructor(){$(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){let e={},t=Ro+ia,n=ia+K0;for(let r=0;r<this.LS.length;++r){let a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){let s=uA(a);e[s]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){e=pA(e);let t=X0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return Z0(t),n}},Mo="://",Cn=class{constructor(){this.managers={}}static getInstance(){return Cn.instance==null&&(Cn.instance=new Cn),Cn.instance}static registerManager(e,t){$(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Mo)&&(e=e.slice(0,e.indexOf(Mo))),$(e.length>0,()=>"scheme must not be an empty string.");let n=Cn.getInstance();$(n.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){let t=Cn.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Cn.getInstance().managers)}};function rh(e){if(e.indexOf(Mo)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Cn.getSchemes().join(",")}`);return{scheme:e.split(Mo)[0],path:e.split(Mo)[1]}}async function Y0(e,t,n=!1){$(e!==t,()=>`Old path and new path are the same: '${e}'`);let r=St.getLoadHandlers(e);$(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),$(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);let a=r[0],s=St.getSaveHandlers(t);$(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),$(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);let i=s[0],o=rh(e).scheme,u=rh(e).path,p=o===rh(e).scheme,l=await a.load();n&&p&&await Cn.getManager(o).removeModel(u);let d=await i.save(l);return n&&!p&&await Cn.getManager(o).removeModel(u),d.modelArtifactsInfo}async function cA(){let e=Cn.getSchemes(),t={};for(let n of e){let r=await Cn.getManager(n).listModels();for(let a in r){let s=n+Mo+a;t[s]=r[a]}}return t}async function mA(e){let t=rh(e);return Cn.getManager(t.scheme).removeModel(t.path)}async function fA(e,t){return Y0(e,t,!1)}async function gA(e,t){return Y0(e,t,!0)}var yA=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",n=>{if(n.source===window&&n.data.name===this.messageName){n.stopPropagation();let r=this.functionRefs[n.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(e){return A0(e)}};if(H().get("IS_BROWSER")){H().setPlatform("browser",new yA);try{Cn.registerManager(Ds.URL_SCHEME,new hA)}catch{}try{Cn.registerManager(Rs.URL_SCHEME,new aA)}catch{}}var bA={importFetch:()=>NE()},_m,xA=class{constructor(){this.util=TE(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return H().global.fetch!=null?H().global.fetch(e,t):(_m==null&&(_m=bA.importFetch()),_m(e,t))}now(){let e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}};H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new xA);function Pe(e,t="float32",n){return t=t||"float32",Kn(e),new At(e,t,n)}function vA(e,t){let n=_(e,"x","cast");if(!v0(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&n.dtype!=="string"||t!=="string"&&n.dtype==="string")throw new Error("Only strings can be casted to strings");let r={x:n},a={dtype:t};return O.runKernel(si,r,a)}var se=L({cast_:vA});function wA(e){let t={x:_(e,"x","clone","string_or_numeric")};return O.runKernel(Si,t)}var Br=L({clone_:wA});function ig(e,t=!1){console.log(e.toString(t))}P0();var kA={buffer:Pe,cast:se,clone:Br,print:ig};F$(kA);function IA(){H().set("PROD",!0)}function SA(){H().set("DEBUG",!0)}function NA(){H().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Q0(e){H().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function TA(){O.disposeVariables()}function hr(){return O}function xh(){return O.memory()}function CA(e){return O.profile(e)}function W(e,t){return O.tidy(e,t)}function _e(e){ng(e).forEach(t=>t.dispose())}function Mt(e){return O.keep(e)}function _A(e){return O.time(e)}function EA(e){return O.setBackend(e)}function $A(){return O.ready()}function AA(){return O.backendName}function FA(e){O.removeBackend(e)}function RA(e){return O.findBackend(e)}function DA(e){return O.findBackendFactory(e)}function uc(e,t,n=1){return O.registerBackend(e,t,n)}function e1(){return O.backend}function MA(e,t){H().setPlatform(e,t)}function OA(e,t){let n=_(e,"a","add"),r=_(t,"b","add");[n,r]=kt(n,r);let a={a:n,b:r};return O.runKernel(Ka,a)}var J=L({add_:OA});function LA(e,t){let n=_(e,"a","floorDiv"),r=_(t,"b","floorDiv");[n,r]=kt(n,r);let a={a:n,b:r};return O.runKernel(wi,a)}var pc=L({floorDiv_:LA});function zA(e,t){let n=_(e,"a","div"),r=_(t,"b","div");if([n,r]=kt(n,r),n.dtype==="int32"&&r.dtype==="int32")return pc(n,r);let a={a:n,b:r},s={};return O.runKernel(fi,a,s)}var fe=L({div_:zA});function PA(e,t){let n=_(e,"a","mul"),r=_(t,"b","mul");[n,r]=kt(n,r);let a={a:n,b:r};return O.runKernel(Bi,a)}var z=L({mul_:PA});function BA(e){let t=_(e,"x","abs");if(t.dtype==="complex64"){let n={x:t};return O.runKernel(kp,n)}else{let n={x:t};return O.runKernel(il,n)}}var Et=L({abs_:BA});function WA(e){let t={x:_(e,"x","acos")};return O.runKernel(Xs,t)}var og=L({acos_:WA});function VA(e){let t={x:_(e,"x","acosh")};return O.runKernel(Zs,t)}var lg=L({acosh_:VA});function UA(e){$(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),$(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);let t=e.map((a,s)=>_(a,`tensors${s}`,"addN")),n=t[0];t.forEach(a=>{if(a.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!ca(a.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});let r=t;return O.runKernel(Js,r)}var t1=L({addN_:UA});function GA(e,t=null,n=!1){let r={x:_(e,"x","all","bool")},a={axis:t,keepDims:n};return O.runKernel(ol,r,a)}var dc=L({all_:GA});function HA(e,t=null,n=!1){let r={x:_(e,"x","any","bool")},a={axis:t,keepDims:n};return O.runKernel(ll,r,a)}var ap=L({any_:HA});function jA(e,t=0){let n={x:_(e,"x","argMax")},r={axis:t};return O.runKernel(ul,n,r)}var Ms=L({argMax_:jA});function qA(e,t=0){let n={x:_(e,"x","argMin")},r={axis:t};return O.runKernel(pl,n,r)}var ug=L({argMin_:qA});function KA(e){let t={x:_(e,"x","asin")};return O.runKernel(Ys,t)}var pg=L({asin_:KA});function XA(e){let t={x:_(e,"x","asinh")};return O.runKernel(Qs,t)}var dg=L({asinh_:XA});function ZA(e){let t={x:_(e,"x","atan")};return O.runKernel(ei,t)}var hg=L({atan_:ZA});function JA(e,t){let n=_(e,"a","atan2"),r=_(t,"b","atan2");[n,r]=kt(n,r);let a={a:n,b:r};return O.runKernel(ni,a)}var cg=L({atan2_:JA});function YA(e){let t={x:_(e,"x","atanh")};return O.runKernel(ti,t)}var mg=L({atanh_:YA});function QA(e,t,n,r,a="NHWC",s){let i=e[3],o=[...t,i],u=a1(a);return Hp(e,o,n,s,r,null,null,u)}function n1(e,t,n,r,a,s,i="channelsLast"){let[o,u]=sp(t),p;if(i==="channelsLast")p=[o,u,e[3],e[3]];else if(i==="channelsFirst")p=[o,u,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return Hp(e,p,n,r,a,s,!1,i)}function eF(e,t,n,r,a,s,i="NDHWC"){let[o,u,p]=nf(t),l,d;if(i==="NDHWC")d="channelsLast",l=[o,u,p,e[4],e[4]];else if(i==="NCDHW")d="channelsFirst",l=[o,u,p,e[1],e[1]];else throw new Error(`Unknown dataFormat ${i}`);return r1(e,l,n,r,a,!1,d,s)}function Hp(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,p,l,d]=[-1,-1,-1,-1];if(o==="channelsLast")[u,p,l,d]=e;else if(o==="channelsFirst")[u,d,p,l]=e;else throw new Error(`Unknown dataFormat ${o}`);let[h,c,,m]=t,[f,g]=sp(n),[y,b]=sp(r),x=Oo(h,y),w=Oo(c,b),{padInfo:I,outHeight:T,outWidth:C}=rF(a,p,l,f,g,x,w,s,o),E=i?m*d:m,A;return o==="channelsFirst"?A=[u,E,T,C]:o==="channelsLast"&&(A=[u,T,C,E]),{batchSize:u,dataFormat:o,inHeight:p,inWidth:l,inChannels:d,outHeight:T,outWidth:C,outChannels:E,padInfo:I,strideHeight:f,strideWidth:g,filterHeight:h,filterWidth:c,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:A,filterShape:t}}function r1(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,p,l,d,h]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,p,l,d,h]=e;else if(i==="channelsFirst")[u,h,p,l,d]=e;else throw new Error(`Unknown dataFormat ${i}`);let[c,m,f,,g]=t,[y,b,x]=nf(n),[w,I,T]=nf(r),C=Oo(c,w),E=Oo(m,I),A=Oo(f,T),{padInfo:R,outDepth:F,outHeight:S,outWidth:M}=aF(a,p,l,d,y,b,x,C,E,A,o),B=s?g*h:g,U;return i==="channelsFirst"?U=[u,B,F,S,M]:i==="channelsLast"&&(U=[u,F,S,M,B]),{batchSize:u,dataFormat:i,inDepth:p,inHeight:l,inWidth:d,inChannels:h,outDepth:F,outHeight:S,outWidth:M,outChannels:B,padInfo:R,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:c,filterHeight:m,filterWidth:f,effectiveFilterDepth:C,effectiveFilterHeight:E,effectiveFilterWidth:A,dilationDepth:w,dilationHeight:I,dilationWidth:T,inShape:e,outShape:U,filterShape:t}}function tF(e,t,n,r,a){r==null&&(r=fg(e,t,n));let s=e[0],i=e[1],o=ip((s-t+2*r)/n+1,a),u=ip((i-t+2*r)/n+1,a);return[o,u]}function nF(e,t,n,r,a,s){a==null&&(a=fg(e,t[0],r[0]));let i=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*a>=t[o]&&(i[o]=ip((e[o]-t[o]+2*a)/r[o]+1,s));return i}function fg(e,t,n,r=1){let a=Oo(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function sp(e){return typeof e=="number"?[e,e,e]:e.length===2?[e[0],e[1],1]:e}function nf(e){return typeof e=="number"?[e,e,e]:e}function Oo(e,t){return t<=1?e:e+(e-1)*(t-1)}function rF(e,t,n,r,a,s,i,o,u){let p,l,d;if(typeof e=="number"){p={top:e,bottom:e,left:e,right:e,type:e===0?"VALID":"NUMBER"};let h=tF([t,n],s,r,e,o);l=h[0],d=h[1]}else if(e==="same"){l=Math.ceil(t/r),d=Math.ceil(n/a);let h=Math.max(0,(l-1)*r+s-t),c=Math.max(0,(d-1)*a+i-n),m=Math.floor(h/2),f=h-m,g=Math.floor(c/2),y=c-g;p={top:m,bottom:f,left:g,right:y,type:"SAME"}}else if(e==="valid")p={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else if(typeof e=="object"){let h=u==="channelsLast"?e[1][0]:e[2][0],c=u==="channelsLast"?e[1][1]:e[2][1],m=u==="channelsLast"?e[2][0]:e[3][0],f=u==="channelsLast"?e[2][1]:e[3][1];p={top:h,bottom:c,left:m,right:f,type:h===0&&c===0&&m===0&&f===0?"VALID":"EXPLICIT"},l=ip((t-s+h+c)/r+1,o),d=ip((n-i+m+f)/a+1,o)}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:p,outHeight:l,outWidth:d}}function aF(e,t,n,r,a,s,i,o,u,p,l){let d,h,c,m;if(e==="valid"&&(e=0),typeof e=="number"){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:e===0?"VALID":"NUMBER"};let f=nF([t,n,r,1],[o,u,p],1,[a,s,i],e,l);h=f[0],c=f[1],m=f[2]}else if(e==="same"){h=Math.ceil(t/a),c=Math.ceil(n/s),m=Math.ceil(r/i);let f=(h-1)*a+o-t,g=(c-1)*s+u-n,y=(m-1)*i+p-r,b=Math.floor(f/2),x=f-b,w=Math.floor(g/2),I=g-w,T=Math.floor(y/2),C=y-T;d={top:w,bottom:I,left:T,right:C,front:b,back:x,type:"SAME"}}else throw Error(`Unknown padding parameter: ${e}`);return{padInfo:d,outDepth:h,outHeight:c,outWidth:m}}function ip(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function La(e){let[t,n,r]=sp(e);return t===1&&n===1&&r===1}function qr(e,t){return La(e)||La(t)}function Os(e){return sp(e).every(t=>t>0)}function a1(e){if(e==="NHWC")return"channelsLast";if(e==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function wn(e,t,n){if(n!=null){if(typeof t=="string")throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if(typeof t=="number")$(zo(t),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);else if(typeof t=="object")t.forEach(r=>{r.forEach(a=>{$(zo(a),()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${a}.`)})});else throw Error(`Error in ${e}: Unknown padding parameter: ${t}`)}}function sF(e,t){let n={x:_(e,"x","reshape","string_or_numeric")},r={shape:t};return O.runKernel(Gl,n,r)}var P=L({reshape_:sF});function iF(e,t,n,r,a){let s=_(e,"x","avgPool","float32"),i=1;$(qr(n,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`);let o=s,u=!1;s.rank===3&&(u=!0,o=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`),wn("avgPool",r,a);let p={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=O.runKernel(ri,p,l);return d=se(d,s.dtype),u?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var ma=L({avgPool_:iF});function oF(e,t,n,r,a,s="NDHWC"){let i=_(e,"x","avgPool3d","float32"),o=i,u=!1;i.rank===4&&(u=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),$(typeof n=="number"&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`),wn("avgPool3d",r,a);let p={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=O.runKernel(dl,p,l);return d=se(d,o.dtype),u?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var gg=L({avgPool3d_:oF});function lF(e,t=0){$(e.length>=1,()=>"Pass at least one tensor to concat");let n=rp(e,"tensors","concat","string_or_numeric");if(n[0].dtype==="complex64"&&n.forEach(s=>{if(s.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${s.dtype}. `)}),n.length===1)return Br(n[0]);let r=n,a={axis:t};return O.runKernel(fl,r,a)}var at=L({concat_:lF});function uF(e,t,n=!1,r=!1){let a=_(e,"a","matMul"),s=_(t,"b","matMul");[a,s]=kt(a,s);let i={a,b:s},o={transposeA:n,transposeB:r};return O.runKernel(ai,i,o)}var Oe=L({matMul_:uF});function pF(e){let t={x:_(e,"x","sigmoid","float32")};return O.runKernel(ao,t)}var mr=L({sigmoid_:pF});function dF(e,t,n){let r=_(e,"x","slice","string_or_numeric");if(r.rank===0)throw new Error("Slicing scalar is not possible");let a={x:r},s={begin:t,size:n};return O.runKernel(Jl,a,s)}var Ue=L({slice_:dF});function hF(e){let t={x:_(e,"x","tanh","float32")};return O.runKernel(co,t)}var Ls=L({tanh_:hF});function cF(e,t,n,r,a,s){let i=_(e,"forgetBias","basicLSTMCell"),o=_(t,"lstmKernel","basicLSTMCell"),u=_(n,"lstmBias","basicLSTMCell"),p=_(r,"data","basicLSTMCell"),l=_(a,"c","basicLSTMCell"),d=_(s,"h","basicLSTMCell"),h=at([p,d],1),c=Oe(h,o),m=J(c,u),f=m.shape[0],g=m.shape[1]/4,y=[f,g],b=Ue(m,[0,0],y),x=Ue(m,[0,g],y),w=Ue(m,[0,g*2],y),I=Ue(m,[0,g*3],y),T=J(z(mr(b),Ls(x)),z(l,mr(J(i,w)))),C=z(Ls(T),mr(I));return[T,C]}var s1=L({basicLSTMCell_:cF});function mF(e,t,n){let r=_(e,"x","batchToSpaceND"),a=t.reduce((o,u)=>o*u);$(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),$(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),$(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);let s={x:r},i={blockShape:t,crops:n};return O.runKernel(hl,s,i)}var jp=L({batchToSpaceND_:mF});function fF(e){let t;return e.rank===0||e.rank===1?t=P(e,[1,1,1,e.size]):e.rank===2?t=P(e,[1,1,e.shape[0],e.shape[1]]):e.rank===3?t=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]):t=e,t}function gF(e,t,n,r,a,s){s==null&&(s=.001);let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let l;r!=null&&(l=_(r,"offset","batchNorm")),$(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(l==null||o.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(p==null||o.rank===p.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let d={x:fF(i),scale:p,offset:l,mean:o,variance:u},h={varianceEpsilon:s},c=O.runKernel(ki,d,h);return P(c,i.shape)}var mo=L({batchNorm_:gF});function yF(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let l;return r!=null&&(l=_(r,"offset","batchNorm")),$(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),$(o.rank===2||o.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===2||p.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${p.rank}.`),l!=null&&$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),mo(i,o,u,l,p,s)}var yg=L({batchNorm2d_:yF});function bF(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let l;return r!=null&&(l=_(r,"offset","batchNorm")),$(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),$(o.rank===3||o.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===3||p.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${p.rank}.`),l!=null&&$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),mo(i,o,u,l,p,s)}var bg=L({batchNorm3d_:bF});function xF(e,t,n,r,a,s){let i=_(e,"x","batchNorm"),o=_(t,"mean","batchNorm"),u=_(n,"variance","batchNorm"),p;a!=null&&(p=_(a,"scale","batchNorm"));let l;return r!=null&&(l=_(r,"offset","batchNorm")),$(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),$(o.rank===4||o.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),p!=null&&$(p.rank===4||p.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${p.rank}.`),l!=null&&$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),mo(i,o,u,l,p,s)}var xg=L({batchNorm4d_:xF});function vF(e,t,n){let r=_(e,"x","bincount"),a=_(t,"weights","bincount");$(r.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(a.size===r.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);let s={x:r,weights:a},i={size:n};return O.runKernel(cl,s,i)}var vg=L({bincount_:vF});function wF(e,t){let n=_(e,"x","bitwiseAnd"),r=_(t,"y","bitwiseAnd");if(!ca(n.shape,r.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${n.shape}, y: ${r.shape}`);if(n.dtype!=="int32"||r.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${n.dtype} and type of y: ${r.dtype}`);let a={a:n,b:r};return O.runKernel(ml,a)}var i1=L({bitwiseAnd_:wF});function kF(e,t){let n=_(e,"s0","broadcastArgs","int32"),r=_(t,"s1","broadcastArgs","int32");if(n.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(r.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);let a={s0:n,s1:r};return O.runKernel(wp,a)}var o1=L({broadcastArgs_:kF});function IF(e,t){let n=_(e,"broadcastTo","x"),r=n.shape;if(Kn(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let u=n.shape.slice();for(;u.length<t.length;)u.unshift(1);n=P(n,u)}let a=n.shape,s=Array.from(t);for(let u=t.length-1;u>=0;u--)if(a[u]===t[u])s[u]=1;else if(n.shape[u]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(s.map((u,p)=>u>1?p:-1).filter(u=>u>=0).length===0)return Br(n);let i={x:n},o={reps:s};return O.runKernel(Za,i,o)}var Ss=L({broadcastTo_:IF});function SF(e){let t={x:_(e,"x","ceil","float32")};return O.runKernel(ii,t)}var wg=L({ceil_:SF});function Un(e,t,n){Kn(e),n=n||bp(t);let r={shape:e,value:t,dtype:n};return O.runKernel(Np,{},r)}function NF(e,t,n){let r=_(e,"x","clipByValue");if($(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`),t===n)return Un(r.shape,t,r.dtype);let a={x:r},s={clipValueMin:t,clipValueMax:n};return O.runKernel(Xa,a,s)}var on=L({clipByValue_:NF});function TF(e){return at(e,0)}var kg=L({concat1d_:TF});function CF(e,t){return at(e,t)}var Ig=L({concat2d_:CF});function _F(e,t){return at(e,t)}var Sg=L({concat3d_:_F});function EF(e,t){return at(e,t)}var Ng=L({concat4d_:EF});function $F(e,t,n,r,a="NHWC",s=[1,1],i){let o=_(e,"x","conv2d","float32"),u=_(t,"filter","conv2d","float32"),p=o,l=!1;o.rank===3&&(l=!0,p=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(p.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${p.rank}.`),$(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),wn("conv2d",r,i);let d=a==="NHWC"?p.shape[3]:p.shape[1];$(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),$(qr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(Os(s),()=>"Error in conv2D: Dilated rates should be larger than 0."),$(Os(n),()=>"Error in conv2D: Strides should be larger than 0.");let h={x:p,filter:u},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=O.runKernel(oi,h,c);return l?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var fn=L({conv2d_:$F});function AF(e,t,n,r,a="NWC",s=1,i){let o=_(e,"x","conv1d"),u=_(t,"filter","conv1d"),p=o,l=!1;o.rank===2&&(l=!0,p=P(o,[1,o.shape[0],o.shape[1]])),$(p.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${p.rank}.`),$(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),wn("conv1d",r,i),$(p.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${p.shape[2]}) must match input depth for filter ${u.shape[1]}.`),$(qr(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),$(Os(s),()=>"Error in conv1D: Dilated rates should be larger than 0."),$(Os(n),()=>"Error in conv1D: Stride should be larger than 0."),$(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);let d=P(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=P(p,[p.shape[0],1,p.shape[1],p.shape[2]]),c=fn(h,d,[1,n],r,"NHWC",[1,s],i);return l?P(c,[c.shape[2],c.shape[3]]):P(c,[c.shape[0],c.shape[2],c.shape[3]])}var hc=L({conv1d_:AF});function FF(e,t,n,r,a,s="NHWC",i){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,p=!1;t.rank===3&&(p=!0,u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),$(o.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),$(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),$(n.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);let l=s==="NHWC"?o[3]:o[1],d=s==="NHWC"?u.shape[3]:u.shape[1];$(l===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[2]}.`),$(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),wn("conv2dDerInput",a,i);let h={dy:u,filter:n},c={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},m=O.runKernel(li,h,c);return p?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var Tg=L({conv2DBackpropInput_:FF});function RF(e,t,n,r,a,s){let i=_(e,"x","conv2dTranspose"),o=_(t,"filter","conv2dTranspose");return Tg(n,i,o,r,a,"NHWC",s)}var cc=L({conv2dTranspose_:RF});function DF(e,t,n,r,a="NDHWC",s=[1,1,1]){let i=_(e,"x","conv3d"),o=_(t,"filter","conv3d"),u=i,p=!1;i.rank===4&&(p=!0,u=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),$(o.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),$(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),$(qr(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),$(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),$(Os(s),()=>"Error in conv3D: Dilated rates should be larger than 0."),$(Os(n),()=>"Error in conv3D: Strides should be larger than 0.");let l={x:u,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},h=O.runKernel(ui,l,d);return p?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var Cg=L({conv3d_:DF});function MF(e,t,n,r,a){$(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;t.rank===4&&(o=!0,i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let u=s[4],p=i.shape[4];$(s.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),$(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),$(n.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),$(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),$(p===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`);let l={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},h=O.runKernel(yl,l,d);return o?P(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var l1=L({conv3DBackpropInput_:MF});function OF(e,t,n,r,a){let s=_(e,"x","conv3dTranspose"),i=_(t,"filter","conv3dTranspose");return l1(n,s,i,r,a)}var _g=L({conv3dTranspose_:OF});function LF(e){let t={x:_(e,"x","cos","float32")};return O.runKernel(pi,t)}var qp=L({cos_:LF});function zF(e){let t={x:_(e,"x","cosh","float32")};return O.runKernel(di,t)}var mc=L({cosh_:zF});function PF(e,t=0,n=!1,r=!1){let a={x:_(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(bl,a,s)}var op=L({cumprod_:PF});function BF(e,t=0,n=!1,r=!1){let a={x:_(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return O.runKernel(hi,a,s)}var fc=L({cumsum_:BF});function WF(e,t,n,r=!1){let a=_(e,"x","denseBincount"),s=_(t,"weights","denseBincount");$(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),$(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),$(n>=0,()=>`size must be non-negative, but got ${n}.`),$(s.size===a.size||s.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);let i={x:a,weights:s},o={size:n,binaryOutput:r};return O.runKernel(Ip,i,o)}var vh=L({denseBincount_:WF});function VF(e,t,n="NHWC"){let r=_(e,"x","depthToSpace","float32"),a=n==="NHWC"?r.shape[1]:r.shape[2],s=n==="NHWC"?r.shape[2]:r.shape[3],i=n==="NHWC"?r.shape[3]:r.shape[1];$(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),$(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${r.shape}`),$(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${s} and ${t} for depthToSpace with input shape
        ${r.shape}`),$(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);let o={x:r},u={blockSize:t,dataFormat:n};return O.runKernel(vl,o,u)}var Eg=L({depthToSpace_:VF});function UF(e,t,n,r,a="NHWC",s=[1,1],i){let o=_(e,"x","depthwiseConv2d","float32"),u=_(t,"filter","depthwiseConv2d","float32"),p=o,l=!1;o.rank===3&&(l=!0,p=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(p.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),$(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);let d=a==="NHWC"?p.shape[3]:p.shape[1];$(d===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${u.shape[2]}.`),wn("depthwiseConv2d",r,i);let h={x:p,filter:u},c={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},m=O.runKernel(ci,h,c);return l?P(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var fo=L({depthwiseConv2d_:UF});function GF(e){let t={x:_(e,"x","diag")};return O.runKernel(Sp,t)}var u1=L({diag_:GF});function HF(e,t,n,r,a=[1,1],s="NHWC"){let i=_(e,"x","dilation2d"),o=_(t,"filter","dilation2d");$(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),$(o.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),$(s==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,p=!1;i.rank===3&&(u=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),p=!0),$(u.shape[3]===o.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${o.shape[2]}`);let l={x:u,filter:o},d={strides:n,pad:r,dilations:a},h=O.runKernel(mi,l,d);return p?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var $g=L({dilation2d_:HF}),lu={};Ee(lu,{assertAndGetBroadcastShape:()=>st,getBroadcastDims:()=>p1,getReductionAxes:()=>Ft});function p1(e,t){let n=e.length,r=[];for(let a=0;a<n;a++){let s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&i===1&&r.unshift(s)}return r}function Ft(e,t){let n=[];for(let r=0;r<t.length;r++){let a=e[e.length-r-1],s=t.length-r-1,i=t[s];(a==null||a===1&&i>1)&&n.unshift(s)}return n}function st(e,t){let n=Math.max(e.length,t.length),r=new Array(n);for(let a=0;a<n;a++){let s=e[e.length-a-1];s==null&&(s=1);let i=t[t.length-a-1];if(i==null&&(i=1),s===1)r[n-a-1]=i;else if(i===1)r[n-a-1]=s;else if(s!==i){let o=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(o)}else r[n-a-1]=s}return r}function jF(e,t){let n=_(e,"a","equal","string_or_numeric"),r=_(t,"b","equal","string_or_numeric");[n,r]=kt(n,r),st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(kl,a)}var Gn=L({equal_:jF});function qF(e,t,n){let r=_(t,"a","where"),a=_(n,"b","where"),s=_(e,"condition","where","bool"),i=st(st(s.shape,r.shape),a.shape),o=Ss(s,i),u=Ss(r,i),p=Ss(a,i),l={condition:o,t:u,e:p};return O.runKernel(Zl,l)}var qt=L({where_:qF});function KF(e){let t={x:_(e,"x","zerosLike")};return O.runKernel(iu,t)}var He=L({zerosLike_:KF});function XF(e,t){let n=_(e,"a","div"),r=_(t,"b","div");[n,r]=kt(n,r);let a=fe(n,r),s=He(a),i=Gn(r,s);return qt(i,s,a)}var Ag=L({divNoNan_:XF});function ZF(e,t){let n=_(e,"t1","dot"),r=_(t,"t2","dot");$((n.rank===1||n.rank===2)&&(r.rank===1||r.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);let a=n.rank===1?n.size:n.shape[1],s=r.rank===1?r.size:r.shape[0];if($(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),n.rank===1&&r.rank===1){let i=P(n,[1,-1]),o=P(r,[-1,1]),u=Oe(i,o);return P(u,[])}else if(n.rank===1&&r.rank===2){let i=P(n,[1,-1]),o=P(r,[r.shape[0],r.shape[1]]),u=Oe(i,o);return P(u,[u.size])}else if(n.rank===2&&r.rank===1){let i=P(r,[-1,1]),o=Oe(n,i);return P(o,[o.size])}else{let i=P(r,[r.shape[0],r.shape[1]]);return Oe(n,i)}}var Fg=L({dot_:ZF});function JF(e,...t){let n=t.map((a,s)=>_(a,`tensors${s}`,"einsum")),r={equation:e};return O.runKernel(Qh,n,r)}var d1=L({einsum_:JF});function YF(e){let t={x:_(e,"x","elu","float32")};return O.runKernel(gi,t)}var uu=L({elu_:YF});function QF(e,t){let n=_(e,"x","ensureShape","string_or_numeric");if(!g0(n.shape,t))throw new Error(`EnsureShape: Shape of tensor ${n.shape} is not compatible with expected shape ${t}`);return e}var h1=L({ensureShape_:QF});function eR(e){let t=_(e,"x","erf");$(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=se(t,"float32"));let n={x:t};return O.runKernel(yi,n)}var Rg=L({erf_:eR});function Dg(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function c1(e,t,n){let r=e.length+t.length,a=[],s=0,i=0;for(let o=0;o<r;o++)n.indexOf(o)===-1?a.push(e[s++]):a.push(t[i++]);return a}function m1(e,t){let n=[],r=e.length;for(let s=0;s<r;s++)t.indexOf(s)===-1&&n.push(e[s]);let a=t.map(s=>e[s]);return[n,a]}function zs(e,t){let n=t.map(r=>1);return c1(e,n,t)}function tR(e,t,n){$(Dg(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function f1(e,t){if(Dg(e,t))return null;let n=[];for(let r=0;r<t;++r)e.indexOf(r)===-1&&n.push(r);return e.forEach(r=>n.push(r)),n}function Mg(e){return e.map((t,n)=>[n,t]).sort((t,n)=>t[1]-n[1]).map(t=>t[0])}function nR(e,t){let n=[];for(let r=t-e;r<t;++r)n.push(r);return n}function rR(e,t=null,n=!1){let r={x:_(e,"x","max")},a={reductionIndices:t,keepDims:n};return O.runKernel(Fi,r,a)}var rr=L({max_:rR});function aR(e,t=null,n=!1){let r={x:_(e,"x","min")},a={axis:t,keepDims:n};return O.runKernel(Oi,r,a)}var Vo=L({min_:aR});function sR(e,t){let n=_(e,"base","pow"),r=_(t,"exp","pow");[n,r]=kt(n,r);let a={a:n,b:r};return O.runKernel(Ui,a)}var da=L({pow_:sR});function we(e,t){if((Ht(e)&&t!=="string"||Array.isArray(e))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&Ht(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ya(e,[],[],t)}function iR(e){let t={x:_(e,"x","sqrt","float32")};return O.runKernel(io,t)}var rn=L({sqrt_:iR});function oR(e){let t=_(e,"x","square"),n={};return O.runKernel("Square",{x:t},n)}var rt=L({square_:oR});function lR(e,t=null,n=!1){let r=_(e,"x","sum");r.dtype==="bool"&&(r=se(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(oo,a,s)}var ge=L({sum_:lR});function uR(e,t="euclidean",n=null,r=!1){e=_(e,"x","norm");let a=g1(e,t,n),s=a.shape;if(r){let i=yr(n,e.shape);s=zs(a.shape,i)}return P(a,s)}function g1(e,t,n=null){if(e.rank===0)return Et(e);if(e.rank!==1&&n===null)return g1(P(e,[-1]),t,n);if(e.rank===1||typeof n=="number"||Array.isArray(n)&&n.length===1){if(t===1)return ge(Et(e),n);if(t===1/0)return rr(Et(e),n);if(t===-1/0)return Vo(Et(e),n);if(t==="euclidean"||t===2)return rn(ge(da(Et(e),we(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&n.length===2){if(t===1)return rr(ge(Et(e),n[0]),n[1]-1);if(t===1/0)return rr(ge(Et(e),n[1]),n[0]);if(t===-1/0)return Vo(ge(Et(e),n[1]),n[0]);if(t==="fro"||t==="euclidean")return rn(ge(rt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var pu=L({norm_:uR});function pR(e,t=null,n=!1){return pu(e,"euclidean",t,n)}var Og=L({euclideanNorm_:pR});function dR(e){let t={x:_(e,"x","exp")};return O.runKernel(bi,t)}var gn=L({exp_:dR});function hR(e,t=0){let n=_(e,"x","expandDims","string_or_numeric");$(t<=n.rank,()=>"Axis must be <= rank of the tensor");let r={input:n},a={dim:t};return O.runKernel(Il,r,a)}var Qt=L({expandDims_:hR});function cR(e){let t={x:_(e,"x","expm1")};return O.runKernel(xi,t)}var Lg=L({expm1_:cR});function mR(e,t){let n=_(e,"x","tile","string_or_numeric");$(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);let r={x:n},a={reps:t};return O.runKernel(Za,r,a)}var Wn=L({tile_:mR});function fR(e,t,n,r="float32"){t==null&&(t=e);let a=Pe([e,t],r),s=e<=t?e:t;for(let o=0;o<s;++o)a.set(1,o,o);let i=P(a.toTensor(),[e,t]);if(n==null)return i;if(n.length===1)return Wn(Qt(i,0),[n[0],1,1]);if(n.length===2)return Wn(Qt(Qt(i,0),0),[n[0],n[1],1,1]);if(n.length===3)return Wn(Qt(Qt(Qt(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var gc=L({eye_:fR});function gR(e){let t={x:_(e,"x","floor","float32")};return O.runKernel(vi,t)}var du=L({floor_:gR});function yR(e,t,n=0,r=0){let a=_(e,"x","gather"),s=_(t,"indices","gather","int32"),i={x:a,indices:s},o={axis:n,batchDims:r};return O.runKernel(Nl,i,o)}var hu=L({gather_:yR});function bR(e,t){let n=_(e,"a","greater","string_or_numeric"),r=_(t,"b","greater","string_or_numeric");[n,r]=kt(n,r),st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Cl,a)}var kn=L({greater_:bR});function xR(e,t){let n=_(e,"a","greaterEqual","string_or_numeric"),r=_(t,"b","greaterEqual","string_or_numeric");[n,r]=kt(n,r),st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ii,a)}var fa=L({greaterEqual_:xR});function vR(e){let t={input:_(e,"input","imag")};return O.runKernel(nc,t)}var Kp=L({imag_:vR});function wR(e){let t={x:_(e,"x","isFinite")};return O.runKernel(Ni,t)}var zg=L({isFinite_:wR});function kR(e){let t={x:_(e,"x","isInf")};return O.runKernel(Ti,t)}var Pg=L({isInf_:kR});function IR(e){let t={x:_(e,"x","isNaN")};return O.runKernel(Ci,t)}var Bg=L({isNaN_:IR});function SR(e,t=.2){let n={x:_(e,"x","leakyRelu")},r={alpha:t};return O.runKernel(_i,n,r)}var Xp=L({leakyRelu_:SR});function NR(e,t){let n=_(e,"a","less","string_or_numeric"),r=_(t,"b","less","string_or_numeric");[n,r]=kt(n,r),st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(_l,a)}var Uo=L({less_:NR});function TR(e,t){let n=_(e,"a","lessEqual","string_or_numeric"),r=_(t,"b","lessEqual","string_or_numeric");[n,r]=kt(n,r),st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(El,a)}var Qa=L({lessEqual_:TR});function y1(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let r={start:e,stop:t,num:n};return O.runKernel($l,{},r)}function CR(e,t=5,n=1,r=1,a=.5){let s=_(e,"x","localResponseNormalization");$(s.rank===4||s.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${s.rank}.`),$(zo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;s.rank===3&&(o=!0,i=P(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let u={x:i},p={depthRadius:t,bias:n,alpha:r,beta:a},l=O.runKernel(Ai,u,p);return o?P(l,[l.shape[1],l.shape[2],l.shape[3]]):l}var Wg=L({localResponseNormalization_:CR});function _R(e){let t={x:_(e,"x","log","float32")};return O.runKernel(Ei,t)}var Hn=L({log_:_R});function ER(e){let t={x:_(e,"x","log1p")};return O.runKernel($i,t)}var Zp=L({log1p_:ER});function $R(e){return $(Ma(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{let r=_(t,"x","tf.grad","string_or_numeric"),a=n!=null?_(n,"dy","tf.grad"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(r),[r],a);return a!=null&&vn(s.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),yc(i),i[0]})}}function AR(e){return $(Ma(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{$(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");let r=rp(t,"args","tf.grads","string_or_numeric"),a=n!=null?_(n,"dy","tf.grads"):null;return O.tidy(()=>{let{value:s,grads:i}=O.gradients(()=>e(...r),r,a);return a!=null&&vn(s.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),yc(i),i})}}function FR(e){return $(Ma(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{$(t instanceof Ae,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),$(n==null||n instanceof Ae,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");let{grads:r,value:a}=O.gradients(()=>e(t),[t],n);return yc(r),{grad:r[0],value:a}}}function RR(e){return $(Ma(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{$(Array.isArray(t)&&t.every(a=>a instanceof Ae),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),$(n==null||n instanceof Ae,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");let r=O.gradients(()=>e(...t),t,n);return n!=null&&vn(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),yc(r.grads),r}}function b1(e,t){$(Ma(e),()=>"The f passed in variableGrads(f) must be a function"),$(t==null||Array.isArray(t)&&t.every(p=>p instanceof Fs),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");let n=t!=null;if(!n){t=[];for(let p in O.registeredVariables)t.push(O.registeredVariables[p])}let r=n?t.filter(p=>!p.trainable):null,a=t.length;t=t.filter(p=>p.trainable),$(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);let s=!0,{value:i,grads:o}=O.gradients(e,t,null,s);$(o.some(p=>p!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);let u={};return t.forEach((p,l)=>{o[l]!=null&&(u[p.name]=o[l])}),r!=null&&r.forEach(p=>u[p.name]=null),{value:i,grads:u}}function Gr(e){return O.customGrad(e)}function yc(e){if(e.filter(t=>t==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}function DR(e){let t={x:_(e,"x","neg")};return O.runKernel(Ll,t)}var ht=L({neg_:DR});function MR(e){let t={x:_(e,"x","softplus")};return O.runKernel(so,t)}var go=L({softplus_:MR});function OR(e){let t=_(e,"x","logSigmoid");return Gr(n=>({value:ht(go(ht(n))),gradFunc:r=>z(r,mr(ht(n)))}))(t)}var Vg=L({logSigmoid_:OR});function LR(e,t){let n=_(e,"a","sub"),r=_(t,"b","sub");[n,r]=kt(n,r);let a={a:n,b:r};return O.runKernel(po,a)}var he=L({sub_:LR});function zR(e,t=-1){let n=_(e,"logits","logSoftmax");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Gr((r,a)=>{let s=rr(r,t,!0),i=he(r,s),o=he(se(i,"float32"),Hn(ge(gn(i),t,!0)));return a([o]),{value:o,gradFunc:(u,p)=>{let[l]=p,d=!0,h=gn(l);return he(u,z(ge(u,t,d),h))}}})(n)}var bc=L({logSoftmax_:zR});function PR(e,t=null,n=!1){let r=_(e,"x","logSumExp"),a=yr(t,r.shape),s=rr(r,a,!0),i=he(r,s),o=gn(i),u=ge(o,a),p=Hn(u),l=J(P(s,p.shape),p);if(n){let d=zs(l.shape,a);return P(l,d)}return l}var xc=L({logSumExp_:PR});function BR(e,t){let n=_(e,"a","logicalAnd","bool"),r=_(t,"b","logicalAnd","bool");st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Al,a)}var fr=L({logicalAnd_:BR});function WR(e){let t={x:_(e,"x","logicalNot","bool")};return O.runKernel(Fl,t)}var Jp=L({logicalNot_:WR});function VR(e,t){let n=_(e,"a","logicalOr","bool"),r=_(t,"b","logicalOr","bool");st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Rl,a)}var vc=L({logicalOr_:VR});function UR(e,t){let n=_(e,"a","logicalXor","bool"),r=_(t,"b","logicalXor","bool");return st(n.shape,r.shape),fr(vc(e,t),Jp(fr(e,t)))}var Ug=L({logicalXor_:UR}),Bd=2147483648;function GR(e,t,n="left"){let r=_(e,"sortedSequence","searchSorted"),a=_(t,"values","searchSorted"),s=r.shape[r.shape.length-1],i=a.shape[a.shape.length-1],o=P(r,[-1,s]),u=P(a,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(dt(u.shape)>=Bd)throw new Error(`values tensor size must less than ${Bd}`);if(o.shape[1]>=Bd)throw new Error(`trailing dim_size must less than ${Bd} for int32 output type, was ${o.shape[1]}`);let p={sortedSequence:o,values:u},l={side:n};return O.runKernel(Xl,p,l)}var wc=L({searchSorted_:GR});function x1(e,t){return wc(e,t,"left")}function HR(e,t,n,r,a){let s=_(e,"x","maxPool"),i=1,o=s,u=!1;s.rank===3&&(u=!0,o=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(o.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`),$(qr(n,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`),wn("maxPool",r,a);let p={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},d=O.runKernel(Di,p,l);return u?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var Ut=L({maxPool_:HR});function jR(e,t=[1,1,1],n,r,a,s="NDHWC"){let i=_(e,"x","maxPool3d"),o=i,u=!1;i.rank===4&&(u=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(o.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),$(s==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),wn("maxPool3d",r,a);let p={x:o},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=O.runKernel(Ml,p,l);return u?P(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Gg=L({maxPool3d_:jR});function qR(e,t,n,r,a=!1){let s={x:_(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=O.runKernel(_p,s,i);return{result:o[0],indexes:o[1]}}var v1=L({maxPoolWithArgmax_:qR});function KR(e,t){let n=_(e,"a","maximum"),r=_(t,"b","maximum");[n,r]=kt(n,r),n.dtype==="bool"&&(n=se(n,"int32"),r=se(r,"int32")),st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Ri,a)}var Kr=L({maximum_:KR});function XR(e,t=null,n=!1){let r={x:_(e,"x","mean")},a={axis:t,keepDims:n};return O.runKernel(Mi,r,a)}var xt=L({mean_:XR});function vt(e,t="float32"){if(Kn(e),t==="complex64"){let r=vt(e,"float32"),a=vt(e,"float32");return pa(r,a)}let n=qh(dt(e),t);return O.makeTensor(n,e,t)}function Vn(e,t="float32"){if(Kn(e),t==="complex64"){let r=Vn(e,"float32"),a=vt(e,"float32");return pa(r,a)}let n=Jf(dt(e),t);return O.makeTensor(n,e,t)}function w1(e,t,{indexing:n="xy"}={}){if(n!=="xy"&&n!=="ij")throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(e===void 0)return[];let r=_(e,"x","meshgrid",e instanceof Ae?e.dtype:"float32");if(t===void 0)return[r];let a=_(t,"y","meshgrid",t instanceof Ae?t.dtype:"float32"),s=dt(r.shape),i=dt(a.shape);return n==="xy"?(r=P(r,[1,-1]),a=P(a,[-1,1]),[Oe(Vn([i,1],r.dtype),r),Oe(a,Vn([1,s],a.dtype))]):(r=P(r,[-1,1]),a=P(a,[1,-1]),[Oe(r,Vn([1,i],r.dtype)),Oe(Vn([s,1],a.dtype),a)])}function ZR(e,t){let n=_(e,"a","minimum"),r=_(t,"b","minimum");[n,r]=kt(n,r),n.dtype==="bool"&&(n=se(n,"int32"),r=se(r,"int32")),st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(Li,a)}var za=L({minimum_:ZR});function JR(e,t,n){$(n==="reflect"||n==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);let r=_(e,"x","mirrorPad");if(r.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);let a=n==="reflect"?1:0;for(let o=0;o<r.rank;o++)$(t[o].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(t[o][0]>=0&&t[o][0]<=r.shape[o]-a&&t[o][1]>=0&&t[o][1]<=r.shape[o]-a,()=>`Padding in dimension ${o} cannot be greater than or equal to ${r.shape[o]-a} or less than 0 for input of shape ${r.shape}`);let s={paddings:t,mode:n},i={x:r};return O.runKernel(zi,i,s)}var Hg=L({mirrorPad_:JR});function YR(e,t){let n=_(e,"a","mod"),r=_(t,"b","mod");[n,r]=kt(n,r);let a={a:n,b:r};return O.runKernel(Pi,a)}var jg=L({mod_:YR});function QR(e,t=null,n=!1){e=_(e,"x","moments");let r=yr(t,e.shape),a=xt(e,r,n),s=a.shape;n||(s=zs(a.shape,r));let i=rt(he(se(e,"float32"),P(a,s))),o=xt(i,r,n);return{mean:a,variance:o}}var Yp=L({moments_:QR});function eD(e,t,n,r){let a=_(t,"data","multiRNNCell"),s=rp(n,"c","multiRNNCell"),i=rp(r,"h","multiRNNCell"),o=a,u=[];for(let d=0;d<e.length;d++){let h=e[d](o,s[d],i[d]);u.push(h[0]),u.push(h[1]),o=h[1]}let p=[],l=[];for(let d=0;d<u.length;d+=2)p.push(u[d]),l.push(u[d+1]);return[p,l]}var k1=L({multiRNNCell_:eD});function tD(e,t,n,r=!1){let a=_(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:i===1?P(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},p=O.runKernel(Ol,o,u);return i===1?P(p,[p.size]):p}var I1=L({multinomial_:tD});function nD(e,t){let n=_(e,"a","notEqual","string_or_numeric"),r=_(t,"b","notEqual","string_or_numeric");[n,r]=kt(n,r),st(n.shape,r.shape);let a={a:n,b:r};return O.runKernel(zl,a)}var Ps=L({notEqual_:nD});function rD(e,t,n=1,r=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:_(e,"indices","oneHot","int32")},i={dtype:a,depth:t,onValue:n,offValue:r};return O.runKernel(Wi,s,i)}var Go=L({oneHot_:rD});function aD(e){let t={x:_(e,"x","onesLike")};return O.runKernel(Vl,t)}var jn=L({onesLike_:aD});function sD(e,t){let n=_(e,"v1","outerProduct"),r=_(t,"v2","outerProduct");$(n.rank===1&&r.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);let a=P(n,[-1,1]),s=P(r,[1,-1]);return Oe(a,s)}var S1=L({outerProduct_:sD});function iD(e,t,n=0){let r=_(e,"x","pad");if(r.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let a={paddings:t,constantValue:n},s={x:r};return O.runKernel(Vi,s,a)}var $r=L({pad_:iD});function oD(e,t,n=0){return $(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),$r(e,[t],n)}var N1=L({pad1d_:oD});function lD(e,t,n=0){return $(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(e,t,n)}var T1=L({pad2d_:lD});function uD(e,t,n=0){return $(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(e,t,n)}var C1=L({pad3d_:uD});function pD(e,t,n=0){return $(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$r(e,t,n)}var _1=L({pad4d_:pD});function dD(e,t,n){let r=_(e,"x","spaceToBatchND");$(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),$(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),$(r.shape.reduce((i,o,u)=>u>0&&u<=t.length?i&&(o+n[u-1][0]+n[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);let a={x:r},s={blockShape:t,paddings:n};return O.runKernel(Yl,a,s)}var Qp=L({spaceToBatchND_:dD});function hD(e,t,n,r,a,s,i){a==null&&(a=[1,1]),s==null&&(s=1),r===0&&(r="valid");let o=_(e,"x","maxPool"),u=o,p=!1;o.rank===3&&(p=!0,u=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),$(qr(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);let l=n1(u.shape,t,s,a,r),d=[l.dilationHeight,l.dilationWidth],h;r==="same"?h=mD([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];let c=d[0]===1&&d[1]===1,[m,f]=cD([l.inHeight,l.inWidth],d,h),g=c?r:"valid",y=c?u:Qp(u,d,m),b=(n==="avg"?()=>ma(y,t,s,g,i):()=>Ut(y,t,s,g,i))(),x=c?b:jp(b,d,f);return p?P(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function cD(e,t,n){let r=n.map(l=>l[0]),a=n.map(l=>l[1]),s=e.concat(r,a),i=t.map((l,d)=>(l-s[d]%l)%l),o=a.map((l,d)=>l+i[d]),u=t.map((l,d)=>[r[d],o[d]]),p=t.map((l,d)=>[0,i[d]]);return[u,p]}function mD(e,t){let n=e.map((s,i)=>s+(s-1)*(t[i]-1)).map(s=>s-1),r=n.map(s=>Math.floor(s/2)),a=n.map((s,i)=>s-r[i]);return n.map((s,i)=>[r[i],a[i]])}var qg=L({pool_:hD});function fD(e,t){let n=_(e,"x","prelu"),r=_(t,"alpha","prelu"),a={x:n,alpha:r};return O.runKernel(Gi,a)}var ed=L({prelu_:fD});function gD(e,t=null,n=!1){let r=_(e,"x","prod");r.dtype==="bool"&&(r=se(r,"int32"));let a={x:r},s={axis:t,keepDims:n};return O.runKernel(Hi,a,s)}var Kg=L({prod_:gD});function yD(e,t,n,r){let a=e.map((l,d)=>_(l,`tensors${d}`,"raggedGather","int32")),s=_(t,"paramsDenseValues","raggedGather"),i=_(n,"indices","raggedGather","int32"),o={paramsNestedSplits:a,paramsDenseValues:s,indices:i},u={outputRaggedRank:r},p=O.runKernel(rc,o,u);return{outputNestedSplits:p.slice(0,p.length-1),outputDenseValues:p[p.length-1]}}var E1=L({raggedGather_:yD});function bD(e,t,n){let r=_(e,"starts","raggedRange"),a=_(t,"limits","raggedRange",r.dtype),s=_(n,"deltas","raggedRange",r.dtype),i={starts:r,limits:a,deltas:s},o=O.runKernel(ac,i);return{rtNestedSplits:o[0],rtDenseValues:o[1]}}var $1=L({raggedRange_:bD});function xD(e,t,n,r,a){let s=_(e,"shape","raggedTensorToTensor","int32"),i=_(t,"values","raggedTensorToTensor"),o=_(n,"defaultValue","raggedTensorToTensor",i.dtype),u=r.map((d,h)=>_(d,`tensors${h}`,"raggedTensorToTensor","int32")),p={shape:s,values:i,defaultValue:o,rowPartitionTensors:u},l={rowPartitionTypes:a};return O.runKernel(sc,p,l)}var A1=L({raggedTensorToTensor_:xD});function vD(e,t,n){Kn(e);let r=dt(e),a=null;if(n==null||n==="float32")a=new Float32Array(r);else if(n==="int32")a=new Int32Array(r);else if(n==="bool")a=new Uint8Array(r);else throw new Error(`Unknown data type ${n}`);for(let s=0;s<r;s++)a[s]=t();return O.makeTensor(a,e,n)}var F1=L({rand_:vD}),Xg=qa(Hh()),R1={};Ee(R1,{TEST_EPSILON_FLOAT16:()=>D1,createVideoElement:()=>_D,encodeStrings:()=>M1,expectArrayBuffersEqual:()=>CD,expectArraysClose:()=>kD,expectArraysEqual:()=>SD,expectNumbersClose:()=>ND,expectPromiseToFail:()=>ID,expectValuesInRange:()=>TD,play:()=>ED,testEpsilon:()=>Zg});var wD=.001,D1=.1;function kD(e,t,n){return n==null&&(n=Zg()),rf(e,t,(r,a)=>Jg(r,a,n))}function Zg(){return O.backend.floatPrecision()===32?wD:D1}function rf(e,t,n){let r=!0;if((Ht(e)||Ht(t))&&(r=!1),Ht(e)&&Ht(t)&&(r=!0),r){let i=e.constructor.name,o=t.constructor.name;if(i!==o)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${o}`)}if(Array.isArray(e)&&Array.isArray(t)){let i=Ur(e),o=Ur(t);if(!ca(i,o))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${o}]`)}let a=Ht(e)?e:Oa(e),s=Ht(t)?t:Oa(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.
Actual:   ${a}.
Expected: ${s}.`);for(let i=0;i<s.length;++i){let o=a[i],u=s[i];if(!n(o,u))throw new Error(`Arrays differ: actual[${i}] = ${o}, expected[${i}] = ${u}.
Actual:   ${a}.
Expected: ${s}.`)}typeof expect<"u"&&expect().nothing()}function ID(e,t){e().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function SD(e,t){let n=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return _a(e)||_a(e[0])||_a(t)||_a(t[0])?rf(e,n,(r,a)=>r==a):rf(e,t,(r,a)=>Jg(r,a,0))}function ND(e,t,n){if(n==null&&(n=Zg()),!Jg(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function Jg(e,t,n){return!isFinite(e)&&!isFinite(t)?!0:!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function TD(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function CD(e,t){let n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let a=0;a<r.length;a++)if(n[a]!==r[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${r[a]} but got ${n[a]} instead`)}function M1(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?M1(n):e[t]=Vp(n)}return e}function _D(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise(n=>{t.addEventListener("loadeddata",r=>n(t)),t.load()})}async function ED(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise(t=>{e.requestVideoFrameCallback(t)})}var Yg=class{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);let s=a||Math.random();this.random=Xg.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let r=this.nextVal;return this.nextVal=NaN,r}let e,t,n=!1;for(;!n;){let r,a,s;do r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a;while(s>=1||s===0);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},$D=class{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;let a=r||Math.random();this.randu=Xg.alea(a.toString()),this.randn=new Yg(0,1,n,!1,this.randu()),e<1?this.d=e+2/3:this.d=e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do r=this.randn.nextValue(),s=1+this.c*r;while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return this.dtype==="float32"?e:Math.round(e)}},AD=class{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=n,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Xg.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function FD(e,t,n=1,r="float32",a){if(Kn(e),n==null&&(n=1),r==null&&(r="float32"),r!=="float32"&&r!=="int32")throw new Error(`Unsupported data type ${r}`);let s=new $D(t,n,r,a),i=Pe(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var O1=L({randomGamma_:FD});function RD(e,t=0,n=1,r,a){if(Kn(e),r!=null&&r==="bool")throw new Error(`Unsupported data type ${r}`);let s=new Yg(t,n,r,!1,a),i=Pe(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var kc=L({randomNormal_:RD});function DD(e,t,n){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return kc(e,0,1,t,n)}var L1=L({randomStandardNormal_:DD});function MD(e,t=0,n=1,r="float32",a){Kn(e);let s=Pe(e,r),i=new AD(t,n,null,a);for(let o=0;o<s.values.length;o++)s.values[o]=i.nextValue();return s.toTensor()}var es=L({randomUniform_:MD});function OD(e,t,n,r){return es(e,t,n,"int32",r)}var z1=L({randomUniformInt_:OD});function Bs(e,t,n=1,r="float32"){if(n===0)throw new Error("Cannot have a step of zero");let a={start:e,stop:t,step:n,dtype:r};return O.runKernel(Ep,{},a)}function LD(e){let t={input:_(e,"input","real")};return O.runKernel(ic,t)}var Ho=L({real_:LD});function zD(e){let t={x:_(e,"x","reciprocal")};return O.runKernel(ji,t)}var Qg=L({reciprocal_:zD});function PD(e){let t={x:_(e,"x","relu")};return O.runKernel(qi,t)}var et=L({relu_:PD});function BD(e){let t={x:_(e,"x","relu6")};return O.runKernel(Zi,t)}var Ic=L({relu6_:BD});function WD(e,t){let n={x:_(e,"x","reverse")},r={dims:t};return O.runKernel(Ji,n,r)}var sr=L({reverse_:WD});function VD(e){let t=_(e,"x","reverse");return $(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),sr(t,0)}var P1=L({reverse1d_:VD});function UD(e,t){let n=_(e,"x","reverse");return $(n.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),sr(n,t)}var B1=L({reverse2d_:UD});function GD(e,t){let n=_(e,"x","reverse");return $(n.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),sr(n,t)}var W1=L({reverse3d_:GD});function HD(e,t){let n=_(e,"x","reverse");return $(n.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),sr(n,t)}var V1=L({reverse4d_:HD});function jD(e){let t={x:_(e,"x","round")};return O.runKernel(Yi,t)}var Sc=L({round_:jD});function qD(e){let t={x:_(e,"x","rsqrt","float32")};return O.runKernel(Qi,t)}var Nc=L({rsqrt_:qD});function KD(e){let t={x:_(e,"x","selu")};return O.runKernel(eo,t)}var Tc=L({selu_:KD});function XD(e,t,n,r,a,s=[1,1],i="NHWC"){let o=_(e,"x","separableConv2d"),u=_(t,"depthwiseFilter","separableConv2d"),p=_(n,"pointwiseFilter","separableConv2d"),l=o,d=!1;if(o.rank===3&&(d=!0,l=P(o,[1,o.shape[0],o.shape[1],o.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),$(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),$(p.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),$(p.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${p.shape[0]}.`),$(p.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${p.shape[1]}.`);let h=u.shape[2],c=u.shape[3];$(p.shape[2]===h*c,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*c}, but got ${p.shape[2]}.`);let m=fo(l,u,r,a,i,s),f=fn(m,p,1,"valid",i);return d?P(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var cu=L({separableConv2d_:XD});async function ZD(e,t){let n=_(e,"x","setdiff1d"),r=_(t,"y","setdiff1d");$(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),$(n.rank===1,()=>`x should be 1D tensor, but got x (${n.shape}).`),$(r.rank===1,()=>`y should be 1D tensor, but got y (${r.shape}).`);let a=await n.data(),s=await r.data(),i=new Set(s),o=0;for(let l=0;l<a.length;l++)i.has(a[l])||o++;let u=new At([o],n.dtype),p=new At([o],"int32");for(let l=0,d=0;l<a.length;l++)i.has(a[l])||(u.values[d]=a[l],p.values[d]=l,d++);return[u.toTensor(),p.toTensor()]}var U1=ZD;function JD(e){let t={x:_(e,"x","sign")};return O.runKernel(ro,t)}var ey=L({sign_:JD});function YD(e){let t={x:_(e,"x","sin","float32")};return O.runKernel(to,t)}var Cc=L({sin_:YD});function QD(e){let t={x:_(e,"x","sinh")};return O.runKernel(no,t)}var _c=L({sinh_:QD});function eM(e,t,n){let r=_(e,"x","slice1d");return $(r.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),Ue(r,[t],[n])}var td=L({slice1d_:eM});function tM(e,t,n){let r=_(e,"x","slice2d");return $(r.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var Ec=L({slice2d_:tM});function nM(e,t,n){let r=_(e,"x","slice3d");return $(r.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var mu=L({slice3d_:nM});function rM(e,t,n){let r=_(e,"x","slice4d");return $(r.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),Ue(r,t,n)}var jo=L({slice4d_:rM});function aM(e,t=-1){let n=_(e,"logits","softmax","float32");if(t===-1&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let r={logits:n},a={dim:t};return O.runKernel(lo,r,a)}var ts=L({softmax_:aM});function sM(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(ec,t)}var nd=L({fft_:sM});function iM(e){$(e.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);let t={input:e};return O.runKernel(tc,t)}var qo=L({ifft_:iM});function oM(e){let t=e.shape[e.shape.length-1],n=e.size/t,r;if(t<=2){let a=P(e,[n,t]);r=qo(a)}else{let a=[n,2*(t-1)],s=P(Ho(e),[n,t]),i=P(Kp(e),[n,t]),o=sr(Ue(s,[0,1],[n,t-2]),1),u=z(sr(Ue(i,[0,1],[n,t-2]),1),we(-1)),p=at([s,o],1),l=at([i,u],1),d=P(pa(p,l),[a[0],a[1]]);r=qo(d)}if(r=Ho(r),e.rank===3&&e.shape[0]!==0){let a=r,s=e.shape[0];r=P(r,[s,r.shape[0]/s,r.shape[1]]),a.dispose()}return r}var $c=L({irfft_:oM});function lM(e,t,n=0){let r={x:_(e,"x","split")},a={numOrSizeSplits:t,axis:n};return O.runKernel(Ql,r,a)}var En=L({split_:lM});function uM(e,t){$(e.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1],r=e.size/n,a;if(t!=null&&t<n){let m=e.shape.map(g=>0),f=e.shape.map(g=>g);f[e.shape.length-1]=t,a=Ue(e,m,f),n=t}else if(t!=null&&t>n){let m=e.shape.map(f=>f);m[e.shape.length-1]=t-n,a=at([e,vt(m)],e.shape.length-1),n=t}else a=e;let s=He(a),i=P(pa(a,s),[r,n]),o=nd(i),u=Math.floor(n/2)+1,p=Ho(o),l=Kp(o),d=En(p,[u,n-u],p.shape.length-1),h=En(l,[u,n-u],l.shape.length-1),c=a.shape.slice();return c[a.shape.length-1]=u,P(pa(d[0],h[0]),c)}var rd=L({rfft_:uM});function pM(e,t){let n=_(e,"a","squaredDifference"),r=_(t,"b","squaredDifference");[n,r]=kt(n,r),st(n.shape,r.shape);let a={a:n,b:r},s={};return O.runKernel(uo,a,s)}var Ac=L({squaredDifference_:pM});function dM(e,t){let n=_(e,"x","squeeze","string_or_numeric");return P(n,y0(n.shape,t).newShape)}var ns=L({squeeze_:dM});function hM(e,t=0){let n=rp(e,"tensors","stack","string_or_numeric");$(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&$(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");let r=n,a={axis:t};return O.runKernel(Ul,r,a)}var Lt=L({stack_:hM});function cM(e,t=0){let n={x:_(e,"x","step")},r={alpha:t};return O.runKernel(Ja,n,r)}var yo=L({step_:cM});function mM(e,t,n,r,a=0,s=0,i=0,o=0,u=0){let p={x:_(e,"x","stridedSlice","string_or_numeric")},l={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return O.runKernel(nu,p,l)}var ty=L({stridedSlice_:mM});function fM(e){let t={x:_(e,"x","tan","float32")};return O.runKernel(ho,t)}var ny=L({tan_:fM});function Qe(e,t){Ks(e);let n=Ur(e,t);if(n.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ya(e,null,n,t)}function Wr(e,t,n){if(Ks(e),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");let r=Ur(e,n);if(r.length!==2&&r.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ya(e,t,r,n)}function Fc(e,t,n){if(Ks(e),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");let r=Ur(e,n);if(r.length!==3&&r.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}function Pa(e,t,n){if(Ks(e),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");let r=Ur(e,n);if(r.length!==4&&r.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}function G1(e,t,n){if(Ks(e),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");let r=Ur(e,n);if(r.length!==5&&r.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ya(e,t,r,n)}function H1(e,t,n){if(Ks(e),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");let r=Ur(e,n);if(r.length!==6&&r.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(r.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Ya(e,t,r,n)}var Rc={};Ee(Rc,{calculateShapes:()=>j1,validateInput:()=>Dc,validateUpdateShape:()=>ry});function ry(e,t,n){let r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+` update.rank != ${a+e.length-r}`);for(let i=0;i<a;++i)if(n.shape[i]!==t.shape[i])throw new Error(s+` updates.shape[${i}] (${n.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<n.rank-a;++i)if(n.shape[i+a]!==e[i+r])throw new Error(s+` updates.shape[${i+a}] (${n.shape[i+a]}) != shape[${i+a}] (${e[i+a]})`)}function Dc(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(n.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(e.size===0)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ry(n,t,e)}function j1(e,t,n){let r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length,i=1;for(let d=a;d<s;++d)i*=n[d];let o=a<1?1:a,u=dt(t.shape)/o,p=[...sl(n.slice(0,a)),1],l=dt(n);return{sliceRank:a,numUpdates:u,sliceSize:i,strides:p,outputSize:l}}function gM(e,t,n){let r=_(e,"tensor","tensorScatterupdate"),a=_(t,"indices","tensorScatterupdate","int32"),s=_(n,"updates","tensorScatterupdate");if(Dc(s,a,r.shape),r.dtype!==s.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${r.dtype} and ${s.dtype}.`);let i={tensor:r,indices:a,updates:s},o={};return O.runKernel(Kl,i,o)}var q1=L({tensorScatterUpdate_:gM});function yM(e,t=1,n=!0){let r=_(e,"x","topk");if(r.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");let a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);let s={x:r},i={k:t,sorted:n},[o,u]=O.runKernel(ru,s,i);return{values:o,indices:u}}var ay=L({topk_:yM});function bM(e,t=0,n=1,r,a){if(Kn(e),r!=null&&r==="bool")throw new Error("Unsupported data type $ { dtype }");let s=new Yg(t,n,r,!0,a),i=Pe(e,r);for(let o=0;o<i.values.length;o++)i.values[o]=s.nextValue();return i.toTensor()}var Mc=L({truncatedNormal_:bM});function xM(e,t=0){let n=_(e,"x","unique","string_or_numeric");$(n.rank>0,()=>"The input tensor must be at least 1D");let r={x:n},a={axis:t},[s,i]=O.runKernel(zp,r,a);return{values:s,indices:i}}var sy=L({unique_:xM});function vM(e,t,n){let r=_(e,"x","unsortedSegmentSum"),a=_(t,"segmentIds","unsortedSegmentSum","int32");$(zo(n),()=>"numSegments must be of dtype int");let s={x:r,segmentIds:a},i={numSegments:n};return O.runKernel(Pp,s,i)}var Oc=L({unsortedSegmentSum_:vM});function wM(e,t=0){let n=_(e,"x","unstack","string_or_numeric");$(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);let r={value:n},a={axis:t};return O.runKernel(su,r,a)}var Nt=L({unstack_:wM});function K1(e,t){return wc(e,t,"right")}function iy(e,t=!0,n,r){return O.makeVariable(e,t,n,r)}function X1(e,t){let n=[];for(let s=0;s<t.length;s++)t[s]&&n.push(s);let r=Pe(e,"int32"),a=Pe([n.length,e.length],"int32");for(let s=0;s<n.length;s++){let i=r.indexToLoc(n[s]),o=s*e.length;a.values.set(i,o)}return a.toTensor()}async function kM(e){let t=_(e,"condition","whereAsync","bool"),n=await t.data(),r=X1(t.shape,n);return e!==t&&t.dispose(),r}var oy=kM;async function IM(e,t,n){let r=_(e,"tensor","boolMask"),a=_(t,"mask","boolMask","bool"),s=n==null?0:n,i=a.rank,o=r.shape;$(i>0,()=>"mask cannot be scalar"),vn(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let f=s;f<s+i;f++)u*=o[f];let p=o.slice(0,s).concat([u],o.slice(s+i)),l=P(r,p),d=P(a,[-1]),h=await oy(d),c=ns(h,[1]),m=hu(l,c,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),c.dispose(),l.dispose(),d.dispose(),h.dispose(),m}var Z1=IM;function SM(e,t,n){let r=_(e,"x","transpose");if(t==null&&(t=r.shape.map((i,o)=>o).reverse()),$(r.rank===t.length,()=>`Error in transpose: rank of input ${r.rank} must match length of perm ${t}.`),t.forEach(i=>{$(i>=0&&i<r.rank,()=>`All entries in 'perm' must be between 0 and ${r.rank-1} but got ${t}`)}),r.rank<=1)return r.clone();let a={x:r},s={perm:t};return r.dtype==="complex64"?W(()=>{let i=Ho(r),o=Kp(r);return i=O.runKernel(oa,{x:i},s),o=O.runKernel(oa,{x:o},s),n&&(o=ht(o)),pa(i,o)}):O.runKernel(oa,a,s)}var ze=L({transpose_:SM});function NM(e,t,n,r,a=!0){let s=_(e,"v","movingAverage"),i=_(t,"x","movingAverage"),o=_(n,"decay","movingAverage");L0(s,i),$(ca(s.shape,i.shape),()=>"Shape mismatch in v and x");let u=we(1),p=he(u,o),l=z(he(i,s),p);if(a){$(r!=null,()=>"When using zeroDebias: true, step is required.");let d=_(r,"step","movingAverage");l=fe(l,he(u,da(o,d)))}return J(s,l)}var J1=L({movingAverage_:NM});function TM(e,t,n){Kn(n);let r=_(e,"indices","scatterND","int32"),a=_(t,"updates","scatterND");Dc(a,r,n);let s={indices:r,updates:a},i={shape:n};return O.runKernel(ql,s,i)}var Y1=L({scatterND_:TM});function CM(e,t,n,r){if(e.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function _M(e,t,n,r=0){Kn(n);let a=_(e,"sparseIndices","sparseToDense","int32"),s=_(t,"sparseValues","sparseToDense","string_or_numeric"),i=_(r,"defaultValue","sparseToDense",s.dtype);CM(a,s,n,i);let o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return O.runKernel(tu,o,u)}var Q1=L({sparseToDense_:_M});function EM(e,t){let n=_(t,"indices","gatherND","int32"),r={params:_(e,"x","gatherND","string_or_numeric"),indices:n};return O.runKernel(Tl,r)}var ek=L({gatherND_:EM});function $M(e,t){if(t==null)return e.shape.slice();if(ca(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let r=0;r<e.shape.length;r++)t[r]==null&&e.shape[r]!=null?n.push(e.shape[r]):n.push(t[r]);return n}return t}function AM(e,t,n,r){let a=_(e,"x","dropout");if($(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),$(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return e instanceof Ae?a.clone():a;let s=$M(a,n),i=1-t,o=fe(du(J(es(s,0,1,"float32",r),i)),i);return z(a,o)}var ly=L({dropout_:AM});function uy(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Lc(e,t,n){let r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Qe(a,"float32")}async function FM(e,t,n=1){let r=_(e,"predictions","inTopK"),a=_(t,"targets","inTopK");$(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),$(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),vn(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=r.shape[r.shape.length-1];$(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);let i=await r.data(),o=await a.data(),[u,p]=[i.length/s,s],l=b0("bool",u);for(let d=0;d<u;d++){let h=d*p,c=i.subarray(h,h+p),m=[];for(let f=0;f<c.length;f++)m.push({value:c[f],index:f});m.sort((f,g)=>g.value-f.value),l[d]=0;for(let f=0;f<n;f++)if(m[f].index===o[d]){l[d]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),mn(l,a.shape,"bool")}var tk=FM,Ko={};Ee(Ko,{conv2d:()=>MM,depthwiseConv2d:()=>PM,matMul:()=>WM});function RM(e,t,n,r,a,s="NHWC",i){let o=e;e.rank===3&&(o=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]])),$(o.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),$(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),$(n.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);let p=s==="NHWC"?o.shape[3]:o.shape[1],l=s==="NHWC"?u.shape[3]:u.shape[1];$(p===n[2],()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`),$(l===n[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${n[3]}).`),wn("conv2dDerFilter",a,i);let d={x:o,dy:u},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return O.runKernel(Zh,d,h)}var py=L({conv2DBackpropFilter_:RM});function zc(e,t,n){if(n==null||n==="linear")return e;if(n==="relu")return z(e,yo(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Pc(e,t){let n=t,r=Ft(e.shape,t.shape);return r.length>0&&(n=ge(n,r)),P(n,e.shape)}function Bc(e,t,n,r){if(t==="linear")return e;if(t==="relu")return et(e);if(t==="elu")return uu(e);if(t==="relu6")return Ic(e);if(t==="prelu")return ed(e,n);if(t==="leakyrelu")return Xp(e,r);if(t==="sigmoid")return mr(e);throw new Error(`Unknown fused activation ${t}.`)}var Wc=(e,t)=>!(e>0)||t==="linear";function DM({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:p,leakyreluAlpha:l}){if(u=u||"linear",Wc(O.state.gradientDepth,u)===!1){$(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let T=fn(e,t,n,r,a,s,i);return o!=null&&(T=J(T,o)),Bc(T,u,p,l)}let d=_(e,"x","conv2d","float32"),h=_(t,"filter","conv2d","float32"),c=d,m=!1;d.rank===3&&(m=!0,c=P(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(c.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`),$(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),wn("fused conv2d",r,i);let f=a==="NHWC"?c.shape[3]:c.shape[1];$(h.shape[2]===f,()=>`Error in conv2d: depth of input (${f}) must match input depth for filter ${h.shape[2]}.`),$(qr(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);let g=Hp(c.shape,h.shape,n,s,r,i),y;o!=null&&(y=_(o,"bias","fused conv2d"),[y]=kt(y,d),a==="NHWC"?st(g.outShape,y.shape):($(y.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${y.shape.length}.`),$(y.shape.length===0||y.shape[0]===g.outChannels||y.shape[0]===1,()=>`Error in fused conv2d: bias shape (${y.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let b;if(p!=null){let T=p.shape;if($(T.length<=1||T.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${T.length}.`),T.length===1)$(T[0]===1||T[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the number of output channels (${g.outChannels}).`);else if(T.length===3)try{st(T,g.outShape)}catch{let E=`Error in fused conv2d: PReLU activation weights (${T}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(E)}b=_(p,"prelu weights","fused conv2d")}let x=(T,C)=>{$(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);let[E,A,R,F]=C,S=zc(T,R,u);$(La(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);let M=Tg(A.shape,S,E,n,r),B=py(A,S,E.shape,n,r),U=[M,B];if(F!=null){let G=Pc(F,S);U.push(G)}return U},w={x:c,filter:h,bias:y,preluActivationWeights:b},I={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return o==null?Gr((T,C,E)=>{let A=O.runKernel($s,w,I);return E([C,T,A]),m&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:x}})(c,h):Gr((T,C,E,A)=>{let R=O.runKernel($s,w,I);return A([C,T,R,E]),m&&(R=P(R,[R.shape[1],R.shape[2],R.shape[3]])),{value:R,gradFunc:x}})(c,h,y)}var MM=L({fusedConv2d_:DM});function OM(e,t,n,r,a,s=[1,1],i){let o=e;e.rank===3&&(o=P(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;u.rank===3&&(u=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={x:o,dy:u},l={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return O.runKernel(Jh,p,l)}var nk=L({depthwiseConv2dNativeBackpropFilter_:OM});function LM(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;t.rank===3&&(u=!0,o=P(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p={dy:o,filter:n},l={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=O.runKernel(Yh,p,l);return u?P(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var rk=L({depthwiseConv2dNativeBackpropInput_:LM});function zM({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:p,leakyreluAlpha:l}){if(Wc(O.state.gradientDepth,u)===!1){let I=fo(e,t,n,r,a,s,i);return o!=null&&(I=J(I,o)),Bc(I,u,p,l)}let d=_(e,"x","depthwiseConv2d","float32"),h=_(t,"filter","depthwiseConv2d","float32"),c=d,m=!1;d.rank===3&&(m=!0,c=P(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(c.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`),$(h.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),$(c.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),s==null&&(s=[1,1]),$(qr(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),wn("fused depthwiseConv2d",r,i);let f=Hp(c.shape,h.shape,n,s,r,i,!0),g;o!=null&&(g=_(o,"bias","fused conv2d"),[g]=kt(g,d),st(f.outShape,g.shape));let y;p!=null&&(y=_(p,"prelu weights","fused depthwiseConv2d"));let b=(I,T)=>{$(La(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);let[C,E,A,R]=T,F=zc(I,A,u),S=rk(E.shape,F,C,n,r,s,i),M=nk(E,F,C.shape,n,r,s,i);if(R!=null){let B=Pc(g,F);return[S,M,B]}return[S,M]},x={x:c,filter:h,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:l};return o==null?Gr((I,T,C)=>{let E=O.runKernel(As,x,w);return C([T,I,E]),m&&(E=P(E,[E.shape[1],E.shape[2],E.shape[3]])),{value:E,gradFunc:b}})(c,h):Gr((I,T,C,E)=>{let A=O.runKernel(As,x,w);return E([T,I,A,C]),m&&(A=P(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:b}})(c,h,g)}var PM=L({fusedDepthwiseConv2d_:zM});function BM({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(Wc(O.state.gradientDepth,s)===!1){let R=Oe(e,t,n,r);return a!=null&&(R=J(R,a)),Bc(R,s,i,o)}let u=_(e,"a","fused matMul"),p=_(t,"b","fused matMul");[u,p]=kt(u,p);let l=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?p.shape[p.rank-1]:p.shape[p.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],c=r?p.shape[p.rank-2]:p.shape[p.rank-1],m=u.shape.slice(0,-2),f=p.shape.slice(0,-2),g=dt(m),y=dt(f);$(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${u.shape} and ${p.shape} and transposeA=${n} and transposeB=${r} must match.`);let b=st(u.shape.slice(0,-2),p.shape.slice(0,-2)).concat([h,c]),x=n?P(u,[g,l,h]):P(u,[g,h,l]),w=r?P(p,[y,c,d]):P(p,[y,d,c]),I;a!=null&&(I=_(a,"bias","fused matMul"),[I]=kt(I,u),st(b,I.shape));let T;i!=null&&(T=_(i,"prelu weights","fused matMul"));let C=(R,F)=>{let[S,M,B,U]=F,G=zc(P(R,B.shape),B,s),K,j;if(!n&&!r?(K=Oe(G,M,!1,!0),j=Oe(S,G,!0,!1)):!n&&r?(K=Oe(G,M,!1,!1),j=Oe(G,S,!0,!1)):n&&!r?(K=Oe(M,G,!1,!0),j=Oe(S,G,!1,!1)):(K=Oe(M,G,!0,!0),j=Oe(G,S,!0,!0)),a!=null){let X=Pc(U,G);return[K,j,X]}else return[K,j]},E={a:x,b:w,bias:I,preluActivationWeights:T},A={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};return a==null?Gr((R,F,S)=>{let M=O.runKernel(Es,E,A);return S([R,F,M]),{value:P(M,b),gradFunc:C}})(x,w):Gr((R,F,S,M)=>{let B=O.runKernel(Es,E,A);return M([R,F,B,S]),{value:P(B,b),gradFunc:C}})(x,w,I)}var WM=L({fusedMatMul_:BM});function VM(e){return Lc(e,.54,.46)}var UM=L({hammingWindow_:VM});function GM(e){return Lc(e,.5,.5)}var ak=L({hannWindow_:GM});function HM(e,t,n,r=!1,a=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Ue(e,s,t)),s+=n;if(r)for(;s<e.size;){let o=s+t-e.size,u=at([Ue(e,s,t-o),Un([o],a)]);i.push(u),s+=n}return i.length===0?Wr([],[0,t]):P(at(i),[i.length,t])}var sk=L({frame_:HM});function jM(e,t,n,r,a=ak){r==null&&(r=uy(t));let s=sk(e,t,n),i=z(s,a(t));return rd(i,r)}var qM=L({stft_:jM});function KM(e,t,n,r,a="bilinear",s=0){let i=_(e,"image","cropAndResize"),o=_(t,"boxes","cropAndResize","float32"),u=_(n,"boxInd","cropAndResize","int32"),p=o.shape[0];$(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&o.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${p},4] but had shape ${o.shape}.`),$(u.rank===1&&u.shape[0]===p,()=>`Error in cropAndResize: boxInd must be have size [${p}] but had shape ${o.shape}.`),$(r.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),$(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),$(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);let l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return O.runKernel(xl,l,d)}var XM=L({cropAndResize_:KM});function ZM(e){let t=_(e,"image","flipLeftRight","float32");$(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);let n={image:t};return O.runKernel(Sl,n,{})}var JM=L({flipLeftRight_:ZM});function YM(e){let t=_(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];$(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),$(r===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);let a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,Wn(t,a)}var QM=L({grayscaleToRGB_:YM});function eO(e,t,n=0,r=.5){let a=_(e,"image","rotateWithOffset","float32");$(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);let s={image:a},i={radians:t,fillValue:n,center:r};return O.runKernel(ou,s,i)}var tO=L({rotateWithOffset_:eO});function fu(e,t,n,r,a,s){r==null&&(r=.5),a==null&&(a=Number.NEGATIVE_INFINITY),s==null&&(s=0);let i=e.shape[0];return n=Math.min(n,i),$(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),$(e.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),$(e.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),$(t.rank===1,()=>"scores must be a 1D tensor"),$(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),$(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}function nO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppression","float32"),i=_(t,"scores","nonMaxSuppression","float32"),o=fu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let u={maxOutputSize:n,iouThreshold:r,scoreThreshold:a};return O.runKernel(Pl,{boxes:s,scores:i},u)}var rO=L({nonMaxSuppression_:nO});function aO(e,t,n){let r=sO(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function sO(e,t,n){return oO(e,t,n||iO)}function iO(e,t){return e>t?1:e<t?-1:0}function oO(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);let o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}function ik(e,t,n,r,a){return dy(e,t,n,r,a,0)}function ok(e,t,n,r,a,s){return dy(e,t,n,r,a,0,!1,s,!0)}function lk(e,t,n,r,a,s){return dy(e,t,n,r,a,s,!0)}function dy(e,t,n,r,a,s,i=!1,o=!1,u=!1){let p=[];for(let g=0;g<t.length;g++)t[g]>a&&p.push({score:t[g],boxIndex:g,suppressBeginIndex:0});p.sort(Dv);let l=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&p.length>0;){let g=p.pop(),{score:y,boxIndex:b,suppressBeginIndex:x}=g;if(y<a)break;let w=!1;for(let I=d.length-1;I>=x;--I){let T=lO(e,b,d[I]);if(T>=r){w=!0;break}if(g.score=g.score*uO(r,l,T),g.score<=a)break}g.suppressBeginIndex=d.length,w||(g.score===y?(d.push(b),h.push(g.score)):g.score>a&&aO(p,g,Dv))}let c=d.length,m=n-c;o&&m>0&&(d.push(...new Array(m).fill(0)),h.push(...new Array(m).fill(0)));let f={selectedIndices:d};return i&&(f.selectedScores=h),u&&(f.validOutputs=c),f}function lO(e,t,n){let r=e.subarray(t*4,t*4+4),a=e.subarray(n*4,n*4+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),p=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),c=(o-s)*(u-i),m=(d-p)*(h-l);if(c<=0||m<=0)return 0;let f=Math.max(s,p),g=Math.max(i,l),y=Math.min(o,d),b=Math.min(u,h),x=Math.max(y-f,0)*Math.max(b-g,0);return x/(c+m-x)}function uO(e,t,n){let r=Math.exp(t*n*n);return n<=e?r:0}function Dv(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function pO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){let s=_(e,"boxes","nonMaxSuppressionAsync"),i=_(t,"scores","nonMaxSuppressionAsync"),o=fu(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;let u=await Promise.all([s.data(),i.data()]),p=u[0],l=u[1],{selectedIndices:d}=ik(p,l,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Qe(d,"int32")}var dO=pO;function hO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),u=fu(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;let p={boxes:i,scores:o},l={maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s},d=O.runKernel(Wl,p,l);return{selectedIndices:d[0],selectedScores:d[1]}}var cO=L({nonMaxSuppressionWithScore_:hO});async function mO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),u=fu(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;let p=await Promise.all([i.data(),o.data()]),l=p[0],d=p[1],{selectedIndices:h,selectedScores:c}=lk(l,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(h,"int32"),selectedScores:Qe(c)}}var fO=mO;function gO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppression"),o=_(t,"scores","nonMaxSuppression"),u=fu(i,o,n,r,a,null),p=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,h={boxes:i,scores:o},c={maxOutputSize:p,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:s},m=O.runKernel(Bl,h,c);return{selectedIndices:m[0],validOutputs:m[1]}}var yO=L({nonMaxSuppressionPadded_:gO});async function bO(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){let i=_(e,"boxes","nonMaxSuppressionAsync"),o=_(t,"scores","nonMaxSuppressionAsync"),u=fu(i,o,n,r,a,null),p=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:m,validOutputs:f}=ok(h,c,p,l,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qe(m,"int32"),validOutputs:we(f,"int32")}}var xO=bO;function vO(e,t,n=!1,r=!1){let a=_(e,"images","resizeBilinear");$(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),$(r===!1||n===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},p=O.runKernel(Xi,o,u);return i?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var uk=L({resizeBilinear_:vO});function wO(e,t,n=!1,r=!1){let a=_(e,"images","resizeNearestNeighbor");$(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),$(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),$(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(r===!1||n===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;a.rank===3&&(i=!0,s=P(a,[1,a.shape[0],a.shape[1],a.shape[2]]));let o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},p=O.runKernel(Ki,o,u);return i?P(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var pk=L({resizeNearestNeighbor_:wO});function kO(e,t="binary",n=!1,r=.5){let a=_(e,"image","threshold"),s=.2989,i=.587,o=.114,u=a.shape[0]*a.shape[1],p=z(Qe([r]),255),l,d,h,c;if($(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),$(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),$(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),$(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[l,d,h]=En(a,[1,1,1],-1);let f=z(l,s),g=z(d,i),y=z(h,o);c=J(J(f,g),y)}else c=e;if(t==="otsu"){let f=vg(se(Sc(c),"int32"),mn([]),256);p=IO(f,u)}let m=n?Qa(c,p):kn(c,p);return se(z(m,255),"int32")}function IO(e,t){let n=Qe([-1]),r=Qe([0]),a=Qe([0]),s,i,o,u,p,l;for(let d=0;d<e.size-1;d++){s=Ue(e,0,d+1),i=Ue(e,d+1),p=fe(ge(s),t),l=fe(ge(i),t);let h=ge(z(s,Bs(0,s.size)));o=fe(h,ge(s));let c=Un(i.shape,s.size),m=J(Bs(0,i.size),c),f=z(i,m);u=fe(ge(f),ge(i));let g=he(o,u),y=he(o,u),b=z(p,l);a=z(z(b,g),y);let x=kn(a,r);r=qt(x,a,r),n=qt(x,Qe([d]),n)}return n}var SO=L({threshold_:kO});function NO(e,t,n="nearest",r="constant",a=0,s){let i=_(e,"image","transform","float32"),o=_(t,"transforms","transform","float32");$(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),$(o.rank===2&&(o.shape[0]===i.shape[0]||o.shape[0]===1)&&o.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(s==null||s.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);let u={image:i,transforms:o},p={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return O.runKernel(au,u,p)}var TO=L({transform_:NO});function CO(e,t,n){let r=_(e,"a","bandPart");$(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);let a=r.shape,[s,i]=r.shape.slice(-2),o,u;typeof t=="number"?($(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),$(t<=s,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`),o=_(t<0?s:t,"numLower","bandPart")):($(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),o=qt(Uo(t,0),s,za(t,s))),typeof n=="number"?($(n%1===0,()=>`bandPart(): numUpper must be an integer, got ${n}.`),$(n<=i,()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`),u=_(n<0?i:n,"numUpper","bandPart")):($(n.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=qt(Uo(n,0),i,za(n,i)));let p=P(Bs(0,s,1,"int32"),[-1,1]),l=Bs(0,i,1,"int32"),d=he(p,l),h=fr(Qa(d,o),fa(d,ht(u))),c=vt([s,i],r.dtype);return P(Lt(Nt(P(r,[-1,s,i])).map(m=>qt(h,m,c))),a)}var _O=L({bandPart_:CO});function EO(e){let t;if(Array.isArray(e)){t=!1,$(e!=null&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");let a=e[0].shape[0];for(let s=1;s<e.length;++s)$(e[s].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[s].shape[0]} vs. ${a})`)}else t=!0,e=En(e,e.shape[0],0).map(a=>ns(a,[0]));$(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);let n=[],r=e;for(let a=0;a<e.length;++a)n.push(O.tidy(()=>{let s=r[a];if(a>0)for(let i=0;i<a;++i){let o=z(ge(z(n[i],s)),n[i]);s=he(s,o)}return fe(s,pu(s,"euclidean"))}));return t?Lt(n,0):n}var $O=L({gramSchmidt_:EO});function AO(e,t=!1){if($(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),e.rank===2)return Mv(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce((u,p)=>u*p),r=Nt(P(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach(u=>{let[p,l]=Mv(u,t);a.push(p),s.push(l)});let i=P(Lt(a,0),e.shape),o=P(Lt(s,0),e.shape);return[i,o]}}function Mv(e,t=!1){return O.tidy(()=>{$(e.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);let n=e.shape[0],r=e.shape[1],a=gc(n),s=Br(e),i=Wr([[1]],[1,1]),o=Br(i),u=n>=r?r:n;for(let p=0;p<u;++p){let l=s,d=o,h=a;[o,s,a]=O.tidy(()=>{let c=Ue(s,[p,p],[n-p,1]),m=pu(c),f=Ue(s,[p,p],[1,1]),g=qt(kn(f,0),Wr([[-1]]),Wr([[1]])),y=he(f,z(g,m)),b=fe(c,y);b.shape[0]===1?o=Br(i):o=at([i,Ue(b,[1,0],[b.shape[0]-1,b.shape[1]])],0);let x=ht(fe(Oe(g,y),m)),w=Ue(s,[p,0],[n-p,r]),I=z(x,o),T=ze(o);if(p===0)s=he(w,Oe(I,Oe(T,w)));else{let A=he(w,Oe(I,Oe(T,w)));s=at([Ue(s,[0,0],[p,r]),A],0)}let C=ze(I),E=Ue(a,[0,p],[n,a.shape[1]-p]);if(p===0)a=he(E,Oe(Oe(E,o),C));else{let A=he(E,Oe(Oe(E,o),C));a=at([Ue(a,[0,0],[n,p]),A],1)}return[o,s,a]}),_e([l,d,h])}return!t&&n>r&&(a=Ue(a,[0,0],[n,r]),s=Ue(s,[0,0],[r,r])),[a,s]})}var FO=L({qr_:AO}),dn;(function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(dn||(dn={}));function RO(e,t,n=dn.SUM_BY_NONZERO_WEIGHTS){let r=_(e,"losses","computeWeightedLoss"),a=null;t!=null&&(a=_(t,"weights","computeWeightedLoss"));let s=a==null?r:z(r,a);if(n===dn.NONE)return s;if(n===dn.SUM)return ge(s);if(n===dn.MEAN){if(a==null)return xt(s);{let i=r.size/a.size,o=fe(ge(s),ge(a));return i>1?fe(o,we(i)):o}}if(n===dn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return fe(ge(s),we(r.size));{let i=z(a,Vn(r.shape)),o=se(ge(Ps(i,we(0))),"float32");return fe(ge(s),o)}}throw Error(`Unknown reduction: ${n}`)}var ga=L({computeWeightedLoss_:RO});function DO(e,t,n,r=dn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","absoluteDifference"),s=_(t,"predictions","absoluteDifference"),i=null;n!=null&&(i=_(n,"weights","absoluteDifference")),vn(a.shape,s.shape,"Error in absoluteDifference: ");let o=Et(he(a,s));return ga(o,i,r)}var MO=L({absoluteDifference_:DO});function OO(e,t,n,r,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","cosineDistance"),i=_(t,"predictions","cosineDistance"),o=null;r!=null&&(o=_(r,"weights","cosineDistance")),vn(s.shape,i.shape,"Error in cosineDistance: ");let u=we(1),p=he(u,ge(z(s,i),n,!0));return ga(p,o,a)}var LO=L({cosineDistance_:OO});function zO(e,t,n,r=dn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","hingeLoss"),s=_(t,"predictions","hingeLoss"),i=null;n!=null&&(i=_(n,"weights","hingeLoss")),vn(a.shape,s.shape,"Error in hingeLoss: ");let o=we(1);a=he(z(we(2),a),o);let u=et(he(o,z(a,s)));return ga(u,i,r)}var PO=L({hingeLoss_:zO});function BO(e,t,n,r=1,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","huberLoss"),i=_(t,"predictions","huberLoss"),o=null;n!=null&&(o=_(n,"weights","huberLoss")),vn(s.shape,i.shape,"Error in huberLoss: ");let u=we(r),p=Et(he(i,s)),l=za(p,u),d=he(p,l),h=J(z(we(.5),rt(l)),z(u,d));return ga(h,o,a)}var WO=L({huberLoss_:BO});function VO(e,t,n,r=1e-7,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"labels","logLoss"),i=_(t,"predictions","logLoss"),o=null;n!=null&&(o=_(n,"weights","logLoss")),vn(s.shape,i.shape,"Error in logLoss: ");let u=we(1),p=we(r),l=ht(z(s,Hn(J(i,p)))),d=z(he(u,s),Hn(J(he(u,i),p))),h=he(l,d);return ga(h,o,a)}var UO=L({logLoss_:VO});function GO(e,t,n,r=dn.SUM_BY_NONZERO_WEIGHTS){let a=_(e,"labels","meanSquaredError"),s=_(t,"predictions","meanSquaredError"),i=null;n!=null&&(i=_(n,"weights","meanSquaredError")),vn(a.shape,s.shape,"Error in meanSquaredError: ");let o=Ac(a,s);return ga(o,i,r)}var HO=L({meanSquaredError_:GO});function jO(e,t){let n=_(e,"labels","sigmoidCrossEntropyWithLogits"),r=_(t,"logits","sigmoidCrossEntropyWithLogits");vn(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");let a=et(r),s=z(r,n),i=Zp(gn(ht(Et(r))));return J(he(a,s),i)}function qO(e,t,n,r=0,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"multiClassLabels","sigmoidCrossEntropy"),i=_(t,"logits","sigmoidCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","sigmoidCrossEntropy")),vn(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){let p=we(r),l=we(1),d=we(.5);s=J(z(s,he(l,p)),z(d,p))}let u=jO(s,i);return ga(u,o,a)}var KO=L({sigmoidCrossEntropy_:qO});function XO(e,t,n=-1){if(n===-1&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Gr((r,a,s)=>{let i=xc(a,[n],!0),o=he(se(a,"float32"),i);s([r,o]);let u=ht(z(o,r));return{value:ge(u,[n]),gradFunc:(p,l)=>{let[d,h]=l,c=zs(p.shape,[n]);return[z(P(p,c),he(se(d,"float32"),gn(h))),z(P(p,c),he(gn(h),se(d,"float32")))]}}})(e,t)}function ZO(e,t,n,r=0,a=dn.SUM_BY_NONZERO_WEIGHTS){let s=_(e,"onehotLabels","softmaxCrossEntropy"),i=_(t,"logits","softmaxCrossEntropy"),o=null;if(n!=null&&(o=_(n,"weights","softmaxCrossEntropy")),vn(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){let p=we(r),l=we(1),d=we(s.shape[1]);s=J(z(s,he(l,p)),fe(p,d))}let u=XO(s,i);return ga(u,o,a)}var JO=L({softmaxCrossEntropy_:ZO});function YO(e,t,n,r){let a=_(e,"indices","sparseFillEmptyRows","int32"),s=_(t,"values","sparseFillEmptyRows"),i=_(n,"denseShape","sparseFillEmptyRows","int32"),o=_(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(s.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(o.rank!==0)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let u={indices:a,values:s,denseShape:i,defaultValue:o},p=O.runKernel($p,u);return{outputIndices:p[0],outputValues:p[1],emptyRowIndicator:p[2],reverseIndexMap:p[3]}}var QO=L({sparseFillEmptyRows_:YO});function e3(e,t,n){let r=_(e,"inputIndices","sparseReshape","int32"),a=_(t,"inputShape","sparseReshape","int32"),s=_(n,"newShape","sparseReshape","int32");if(r.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${r.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(s.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:r,inputShape:a,newShape:s},o=O.runKernel(eu,i);return{outputIndices:o[0],outputShape:o[1]}}var t3=L({sparseReshape_:e3});function n3(e,t,n){let r=_(e,"data","sparseSegmentMean"),a=_(t,"indices","sparseSegmentMean","int32"),s=_(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(Ap,i)}var r3=L({sparseSegmentMean_:n3});function a3(e,t,n){let r=_(e,"data","sparseSegmentSum"),a=_(t,"indices","sparseSegmentSum","int32"),s=_(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(s.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${s.shape}`);let i={data:r,indices:a,segmentIds:s};return O.runKernel(Fp,i)}var s3=L({sparseSegmentSum_:a3});function i3(e,t,n,r,a,s,i,o){let u=_(e,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);let p=_(t,"dataSplits","stringNGrams");if(p.dtype!=="int32")throw new Error("Data splits must be of datatype int32");let l={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:p},h=O.runKernel(Mp,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}var o3=L({stringNGrams_:i3});function l3(e,t,n=!0){let r=_(e,"input","stringSplit","string"),a=_(t,"delimiter","stringSplit","string");if(r.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);let s={skipEmpty:n},i={input:r,delimiter:a},o=O.runKernel(Op,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var u3=L({stringSplit_:l3});function p3(e,t){let n=_(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let a={input:n};return O.runKernel(Lp,a,r)}var d3=L({stringToHashBucketFast_:p3});function h3(e,t,n,r=!0){let a=_(e,"input","staticRegexReplace","string"),s={pattern:t,rewrite:n,replaceGlobal:r};return O.runKernel(Dp,{x:a},s)}var c3=L({staticRegexReplace_:h3}),dk={fft:nd,ifft:qo,rfft:rd,irfft:$c},hk={hammingWindow:UM,hannWindow:ak,frame:sk,stft:qM},Qn={flipLeftRight:JM,grayscaleToRGB:QM,resizeNearestNeighbor:pk,resizeBilinear:uk,rotateWithOffset:tO,cropAndResize:XM,nonMaxSuppression:rO,nonMaxSuppressionAsync:dO,nonMaxSuppressionWithScore:cO,nonMaxSuppressionWithScoreAsync:fO,nonMaxSuppressionPadded:yO,nonMaxSuppressionPaddedAsync:xO,threshold:SO,transform:TO},hy={bandPart:_O,gramSchmidt:$O,qr:FO},ck={absoluteDifference:MO,computeWeightedLoss:ga,cosineDistance:LO,hingeLoss:PO,huberLoss:WO,logLoss:UO,meanSquaredError:HO,sigmoidCrossEntropy:KO,softmaxCrossEntropy:JO},mk={sparseFillEmptyRows:QO,sparseReshape:t3,sparseSegmentMean:r3,sparseSegmentSum:s3},fk={stringNGrams:o3,stringSplit:u3,stringToHashBucketFast:d3,staticRegexReplace:c3},ne={};Ee(ne,{Serializable:()=>gk,SerializationMap:()=>ys,registerClass:()=>yk});var gk=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},ys=class{constructor(){this.classNameMap={}}static getMap(){return ys.instance==null&&(ys.instance=new ys),ys.instance}static register(e){ys.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function yk(e){$(e.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof e.className=="string",()=>"className is required to be a string, but got type "+typeof e.className),$(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),ys.register(e)}var ya=class extends gk{minimize(e,t=!1,n){let{value:r,grads:a}=this.computeGradients(e,n);if(n!=null){let s=n.map(i=>({name:i.name,tensor:a[i.name]}));this.applyGradients(s)}else this.applyGradients(a);return _e(a),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return b1(e,t)}dispose(){this.iterations_!=null&&_e(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:we(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(ya,Symbol.hasInstance,{value:e=>e.minimize!=null&&e.computeGradients!=null&&e.applyGradients!=null});var cy=class extends ya{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],n==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:W(()=>He(r).variable(a))}),this.accumulatedUpdates[n]==null&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:W(()=>He(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;W(()=>{let u=J(z(i,this.rho),z(rt(s),1-this.rho)),p=z(fe(rn(J(o,this.epsilon)),rn(J(i,this.epsilon))),s),l=J(z(o,this.rho),z(rt(p),1-this.rho));i.assign(u),o.assign(l);let d=J(z(p,-this.learningRate),r);r.assign(d)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(_e(this.accumulatedGrads.map(e=>e.variable)),_e(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}},my=class extends ya{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulatedGrads[n]==null&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:W(()=>Un(r.shape,this.initialAccumulatorValue).variable(!1))});let a=Array.isArray(e)?e[n].tensor:e[t];if(a==null)return;let s=this.accumulatedGrads[n].variable;W(()=>{let i=J(s,rt(a));s.assign(i);let o=J(z(fe(a,rn(J(i,O.backend.epsilon()))),-this.learningRate),r);r.assign(o)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&_e(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulatedGrads=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}},fy=class extends ya{static get className(){return"Adam"}constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],W(()=>{this.accBeta1=we(t).variable(),this.accBeta2=we(n).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=he(1,this.accBeta1),r=he(1,this.accBeta2);t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:W(()=>He(i).variable(o))}),this.accumulatedSecondMoment[s]==null&&(this.accumulatedSecondMoment[s]={originalName:`${a}/v`,variable:W(()=>He(i).variable(o))});let u=Array.isArray(e)?e[s].tensor:e[a];if(u==null)return;let p=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,d=J(z(p,this.beta1),z(u,1-this.beta1)),h=J(z(l,this.beta2),z(rt(u),1-this.beta2)),c=fe(d,n),m=fe(h,r);p.assign(d),l.assign(h);let f=J(z(fe(c,J(rn(m),this.epsilon)),-this.learningRate),i);i.assign(f)}),this.accBeta1.assign(z(this.accBeta1,this.beta1)),this.accBeta2.assign(z(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&_e(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),W(()=>{this.accBeta1.assign(da(this.beta1,this.iterations_+1)),this.accBeta2.assign(da(this.beta2,this.iterations_+1))});let t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}},gy=class extends ya{static get className(){return"Adamax"}constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],W(()=>{this.iteration=we(0).variable(),this.accBeta1=we(t).variable()}),r==null&&(this.epsilon=O.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map(n=>n.name):Object.keys(e);W(()=>{let n=he(1,this.accBeta1),r=fe(-this.learningRate,J(z(this.iteration,this.decay),1));t.forEach((a,s)=>{let i=O.registeredVariables[a],o=!1;this.accumulatedFirstMoment[s]==null&&(this.accumulatedFirstMoment[s]={originalName:`${a}/m`,variable:He(i).variable(o)}),this.accumulatedWeightedInfNorm[s]==null&&(this.accumulatedWeightedInfNorm[s]={originalName:`${a}/v`,variable:He(i).variable(o)});let u=Array.isArray(e)?e[s].tensor:e[a];if(u==null)return;let p=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,d=J(z(p,this.beta1),z(u,1-this.beta1)),h=z(l,this.beta2),c=Et(u),m=Kr(h,c);p.assign(d),l.assign(m);let f=J(z(fe(r,n),fe(d,J(m,this.epsilon))),i);i.assign(f)}),this.iteration.assign(J(this.iteration,1)),this.accBeta1.assign(z(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&_e(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&_e(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}},Vc=class extends ya{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=Array.isArray(e)?e[n].tensor:e[t];if(r==null)return;let a=O.registeredVariables[t];W(()=>{let s=J(z(this.c,r),a);a.assign(s)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Mt(we(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}},yy=class extends Vc{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=we(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t];this.accumulations[n]==null&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:W(()=>He(r).variable(!1))});let a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];s!=null&&W(()=>{let i,o=J(z(this.m,a),s);this.useNesterov?i=J(z(this.c,J(s,z(o,this.m))),r):i=J(z(this.c,o),r),a.assign(o),r.assign(i)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&_e(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=!1;this.accumulations=e.map(n=>({originalName:n.name,variable:n.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}},by=class extends ya{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,r==null&&(this.epsilon=O.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(t=>t.name):Object.keys(e)).forEach((t,n)=>{let r=O.registeredVariables[t],a=!1;this.accumulatedMeanSquares[n]==null&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:W(()=>He(r).variable(a))}),this.accumulatedMoments[n]==null&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:W(()=>He(r).variable(a))}),this.accumulatedMeanGrads[n]==null&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:W(()=>He(r).variable(a))});let s=Array.isArray(e)?e[n].tensor:e[t];if(s==null)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;W(()=>{let u=J(z(i,this.decay),z(rt(s),1-this.decay));if(this.centered){let p=this.accumulatedMeanGrads[n].variable,l=J(z(p,this.decay),z(s,1-this.decay)),d=fe(z(s,this.learningRate),rn(he(u,J(rt(l),this.epsilon)))),h=J(z(o,this.momentum),d);i.assign(u),p.assign(l),o.assign(h);let c=he(r,h);r.assign(c)}else{let p=J(z(i,this.decay),z(rt(s),1-this.decay)),l=J(z(o,this.momentum),fe(z(s,this.learningRate),rn(J(p,this.epsilon))));i.assign(p),o.assign(l);let d=he(r,l);r.assign(d)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&_e(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&_e(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&_e(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}},m3=[cy,my,fy,gy,yy,by,Vc];function f3(){for(let e of m3)yk(e)}var nn={};Ee(nn,{CompositeArrayBuffer:()=>jr,browserFiles:()=>k3,browserHTTPRequest:()=>C3,concatenateArrayBuffers:()=>q$,copyModel:()=>fA,decodeWeights:()=>V0,encodeWeights:()=>U$,fromMemory:()=>E3,fromMemorySync:()=>kk,getLoadHandlers:()=>tA,getModelArtifactsForJSON:()=>sg,getModelArtifactsForJSONSync:()=>G0,getModelArtifactsInfoForJSON:()=>Gp,getSaveHandlers:()=>eA,getWeightSpecs:()=>H0,http:()=>vy,isHTTPScheme:()=>af,listModels:()=>cA,loadWeights:()=>I3,moveModel:()=>gA,registerLoadRouter:()=>Q$,registerSaveRouter:()=>Y$,removeModel:()=>mA,weightsLoaderFactory:()=>xk,withSaveHandler:()=>$3,withSaveHandlerSync:()=>A3});var g3="model",y3=".json",b3=".weights.bin";function Ov(e){return new Promise(t=>setTimeout(t)).then(e)}var Xo=class{constructor(e){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Xo.URL_SCHEME)&&(e=e.slice(Xo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=g3),this.modelJsonFileName=e+y3,this.weightDataFileName=e+b3}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=jr.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let r=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],a=U0(e,r),s=window.URL.createObjectURL(new Blob([JSON.stringify(a)],{type:"application/json"})),i=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=s,await Ov(()=>i.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){let o=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;o.download=this.weightDataFileName,o.href=n,await Ov(()=>o.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Gp(e)}}}};Xo.URL_SCHEME="downloads://";var x3=class{constructor(e){if(e==null||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{let n=new FileReader;n.onload=r=>{let a=JSON.parse(r.target.result),s=a.modelTopology;if(s==null){t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(a.weightsManifest==null){t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){e({modelTopology:s});return}let i=sg(a,o=>this.loadWeights(o));e(i)},n.onerror=r=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){let t=[],n=[];for(let s of e)t.push(...s.weights),n.push(...s.paths);let r=this.checkManifestAndWeightFiles(e),a=n.map(s=>this.loadWeightsFile(s,r[s]));return Promise.all(a).then(s=>[t,s])}loadWeightsFile(e,t){return new Promise((n,r)=>{let a=new FileReader;a.onload=s=>{let i=s.target.result;n(i)},a.onerror=s=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map(a=>Rv(a.name)),r={};for(let a of e)a.paths.forEach(s=>{let i=Rv(s);if(t.indexOf(i)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${i}'`);if(t.push(i),n.indexOf(i)===-1)throw new Error(`Weight file with basename '${i}' is not provided.`);r[s]=this.weightsFiles[n.indexOf(i)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}},v3=e=>H().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Xo.URL_SCHEME)?w3(e.slice(Xo.URL_SCHEME.length)):null;St.registerSaveRouter(v3);function w3(e="model"){return new Xo(e)}function k3(e){return new x3(e)}function Lv(e,t,n,r){i(e),n=n==null?0:n,r=r==null?1:r,o(n,r);let a=0,s=u=>(u.then(p=>{let l=n+ ++a/e.length*(r-n);return t(l),p}),u);function i(u){$(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function o(u,p){$(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),$(p>=0&&p<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${p}`),$(p>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${p}`)}return Promise.all(e.map(s))}async function bk(e,t){t==null&&(t={});let n=t.fetchFunc==null?H().platform.fetch:t.fetchFunc,r=e.map(p=>n(p,t.requestInit,{isBinary:!0})),a=0,s=.5,i=(t.onProgress==null?await Promise.all(r):await Lv(r,t.onProgress,a,s)).map(p=>p.arrayBuffer()),o=.5,u=1;return t.onProgress==null?await Promise.all(i):await Lv(i,t.onProgress,o,u)}async function I3(e,t="",n,r){return xk(a=>bk(a,{requestInit:r}))(e,t,n)}function xk(e){return async(t,n="",r)=>{let a=t.map(()=>!1),s={},i=r!=null?r.map(()=>!1):[],o=[];if(t.forEach((c,m)=>{let f=0;c.weights.forEach(g=>{let y="quantization"in g?g.quantization.dtype:g.dtype,b=Ym[y]*dt(g.shape),x=()=>{a[m]=!0,s[m]==null&&(s[m]=[]),s[m].push({manifestEntry:g,groupOffset:f,sizeBytes:b})};r!=null?r.forEach((w,I)=>{w===g.name&&(x(),i[I]=!0)}):x(),o.push(g.name),f+=b})}),!i.every(c=>c)){let c=r.filter((m,f)=>!i[f]);throw new Error(`Could not find weights in manifest with names: ${c.join(", ")}. 
Manifest JSON has weights with names: ${o.join(", ")}.`)}let u=a.reduce((c,m,f)=>(m&&c.push(f),c),[]),p=[];u.forEach(c=>{t[c].paths.forEach(m=>{let f=n+(n.endsWith("/")?"":"/")+m;p.push(f)})});let l=await e(p),d={},h=0;return u.forEach(c=>{let m=t[c].paths.length,f=new jr(l.slice(h,h+m));s[c].forEach(g=>{let y=f.slice(g.groupOffset,g.groupOffset+g.sizeBytes),b=V0(y,[g.manifestEntry]);for(let x in b)d[x]=b[x]}),h+=m}),d}}var S3="application/octet-stream",N3="application/json",xy=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=H().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=U0(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(r)],{type:N3}),"model.json"),e.weightData!=null){let s=jr.join(e.weightData);t.body.append("model.weights.bin",new Blob([s],{type:S3}),"model.weights.bin")}let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Gp(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let s=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?s+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":s+=" Please make sure the server is serving valid JSON for this request.",new Error(s)}let n=t.modelTopology,r=t.weightsManifest;if(n==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return sg(t,a=>this.loadWeights(a))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=T3(t),a=this.weightPathPrefix||n,s=H0(e),i=[],o=[];for(let p of e)for(let l of p.paths)this.weightUrlConverter!=null?o.push(this.weightUrlConverter(l)):i.push(a+l+r);this.weightUrlConverter&&i.push(...await Promise.all(o));let u=await bk(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,u]}};xy.URL_SCHEME_REGEX=/^https?:\/\//;function T3(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}function af(e){return e.match(xy.URL_SCHEME_REGEX)!=null}var vk=(e,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let n=!0;if(Array.isArray(e)?n=e.every(r=>af(r)):n=af(e),n)return vy(e,t)}return null};St.registerSaveRouter(vk);St.registerLoadRouter(vk);function vy(e,t){return new xy(e,t)}function C3(e,t){return vy(e,t)}var Em=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},wk=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},_3=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function E3(e,t,n,r){let a=arguments;return new _3(kk(...a))}function kk(e,t,n,r){return arguments.length===1?e.modelTopology!=null||e.weightSpecs!=null?new Em(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Em({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Em({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function $3(e){return new wk(e)}function A3(e){return new wk(e)}var Ik={};Ee(Ik,{confusionMatrix:()=>R3});function F3(e,t,n){let r=_(e,"labels","confusionMatrix"),a=_(t,"predictions","confusionMatrix");$(n==null||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),$(r.rank===1,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),$(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),$(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),$(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);let s=Go(se(r,"int32"),n),i=Go(se(a,"int32"),n),o=ze(s),u=Oe(o,i);return se(u,"int32")}var R3=L({confusionMatrix_:F3}),ad={};Ee(ad,{draw:()=>W3,fromPixels:()=>V3,fromPixelsAsync:()=>z3,toPixels:()=>B3});var hs,zv=!1;function Sk(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(e==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if(typeof ImageData<"u"&&e instanceof ImageData)r=!0;else if(typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement)s=!0;else if(e.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&e instanceof ImageBitmap)o=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);if(fh(mh,O.backendName)!=null){let h={pixels:e},c={numChannels:t};return O.runKernel(mh,h,c)}let[u,p]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height],l;if(i)l=e.getContext("2d").getImageData(0,0,u,p).data;else if(r||n)l=e.data;else if(s||a||o){if(hs==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")hs=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else hs=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});hs.canvas.width=u,hs.canvas.height=p,hs.drawImage(e,0,0,u,p),l=hs.getImageData(0,0,u,p).data}let d;if(t===4)d=new Int32Array(l);else{let h=u*p;d=new Int32Array(h*t);for(let c=0;c<h;c++)for(let m=0;m<t;++m)d[c*t+m]=l[c*4+m]}return Fc(d,[p,u,t],"int32")}function D3(e){return e!=null&&e.data instanceof Uint8Array}function M3(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function O3(e){return e!=null&&e.width!==0&&e.height!==0}function L3(e){return M3()&&!(e instanceof ImageBitmap)&&O3(e)&&!D3(e)}async function z3(e,t=3){let n=null;if(H().getBool("WRAP_TO_IMAGEBITMAP")&&L3(e)){let r;try{r=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch{r=null}r!=null&&r.width===e.width&&r.height===e.height?n=r:n=e}else n=e;return Sk(n,t)}function Nk(e){if(e.rank!==2&&e.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);let t=e.rank===2?1:e.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(e.dtype!=="float32"&&e.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function P3(e){let t=(e==null?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function B3(e,t){let n=_(e,"img","toPixels");if(!(e instanceof Ae)){let p=n;n=se(p,"int32"),p.dispose()}Nk(n);let[r,a]=n.shape.slice(0,2),s=n.rank===2?1:n.shape[2],i=await n.data(),o=n.dtype==="float32"?255:1,u=new Uint8ClampedArray(a*r*4);for(let p=0;p<r*a;++p){let l=[0,0,0,255];for(let h=0;h<s;h++){let c=i[p*s+h];if(n.dtype==="float32"){if(c<0||c>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${c}.`)}else if(n.dtype==="int32"&&(c<0||c>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${c}.`);s===1?(l[0]=c*o,l[1]=c*o,l[2]=c*o):l[h]=c*o}let d=p*4;u[d+0]=Math.round(l[0]),u[d+1]=Math.round(l[1]),u[d+2]=Math.round(l[2]),u[d+3]=Math.round(l[3])}if(t!=null){zv||(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),zv=!0),t.width=a,t.height=r;let p=t.getContext("2d"),l=new ImageData(u,a,r);p.putImageData(l,0,0)}return n!==e&&n.dispose(),u}function W3(e,t,n){let r=_(e,"img","draw");if(!(e instanceof Ae)){let i=r;r=se(i,"int32"),i.dispose()}Nk(r),P3(n==null?void 0:n.imageOptions);let a={image:r},s={canvas:t,options:n};O.runKernel(eg,a,s)}var V3=L({fromPixels_:Sk}),wy={};Ee(wy,{prepareAndValidate:()=>Tk});function Tk(e,t){let n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(dt(e.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let a=t.shape,s=a[a.length-1],i=1;for(let d=0;d<a.length-1;++d)i*=a[d];let o=e.shape,u=a.slice();u.pop();let p=1;for(let d=s;d<n;++d)p*=o[d],u.push(o[d]);let l=[...sl(e.shape).map(d=>d/p),1].slice(0,s);return[u,i,p,l]}var zt={};Ee(zt,{assertParamsValid:()=>G3,computeFlatOffset:()=>X3,computeOutShape:()=>j3,getNormalizedAxes:()=>q3,isSliceContinous:()=>K3,maskToAxes:()=>H3,parseSliceParams:()=>Mk,sliceInfo:()=>Z3,startForAxis:()=>Rk,startIndicesWithElidedDims:()=>$k,stopForAxis:()=>Dk,stopIndicesWithElidedDims:()=>Ak,stridesForAxis:()=>Fk,stridesWithElidedDims:()=>Ck});var sf=-2,U3=-1;function G3(e,t,n){let r=e.shape.length;$(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),$(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)$(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function H3(e){let t=[],n=0;for(;e>0;)e&1&&t.push(n),e/=2,n++;return t}function j3(e,t,n){let r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function Ck(e,t,n,r){let a=[...e];for(let s=a.length;s<r.length;s++)a.push(1);for(let s=0;s<n;s++)s===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function _k(e,t,n){return n<=e?n:n-(t-1)}function Ek(e,t){let n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function q3(e,t,n,r,a,s,i,o,u){let p=e.length,l=new Array(p),d=new Array(p),h=new Array(p);if(t.length&&n>0){let c=t[0],m=n+1;l=$k(i,c,m,r,e),d=Ak(o,c,m,a,e),h=Ck(s,c,m,e)}else for(let c=0;c<p;c++)l[c]=Rk(i,r,s,e,c,u),d[c]=Dk(o,a,s,e,c,u),h[c]=Fk(s,c,u);return{begin:l,end:d,strides:h}}function $k(e,t,n,r,a){let s=[...a],i=Ek(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=0;else{let u=_k(t,n,o),p=r[u];e&1<<u&&(p=0),s[o]=p}return s}function Ak(e,t,n,r,a){let s=[...a],i=Ek(n,t);for(let o=0;o<s.length;o++)if(i.indexOf(o)>-1)s[o]=Number.MAX_SAFE_INTEGER;else{let u=_k(t,n,o),p=r[u];e&1<<u&&(p=Number.MAX_SAFE_INTEGER),s[o]=p}for(let o=0;o<s.length;o++){let u=a[o];s[o]<0&&(s[o]+=u),s[o]=Qu(0,s[o],a[o])}return s}function Fk(e,t,n){let r=e[t];return(n&1<<t||r==null)&&(r=1),r}function Rk(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);let u=r[a];return i<0&&(i+=u),i=Qu(0,i,u-1),i}function Dk(e,t,n,r,a,s){let i=t[a],o=n[a]||1;(e&1<<a||s&1<<a||i==null)&&(o>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);let u=r[a];return i<0&&(i+=u),o>0?i=Qu(0,i,u):i=Qu(-1,i,u-1),i}function K3(e,t,n){let r=n.length;for(let a=0;a<n.length;a++)if(n[a]>1){r=a;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function X3(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Mk(e,t,n){let r,a=e.shape.length;typeof t=="number"?r=[t,...new Array(a-1).fill(0)]:t.length<a?r=t.concat(new Array(a-t.length).fill(0)):r=t.slice(),r.forEach(i=>{$(i!==-1,()=>"slice() does not support negative begin indexing.")});let s;return n==null?s=new Array(a).fill(-1):typeof n=="number"?s=[n,...new Array(a-1).fill(-1)]:n.length<a?s=n.concat(new Array(a-n.length).fill(-1)):s=n,s=s.map((i,o)=>i>=0?i:($(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${o}.`),e.shape[o]-r[o])),[r,s]}function Z3(e,t,n,r,a,s,i,o,u){let p;if(r==null?(p=new Array(t.length),p.fill(1)):p=r,i!=null&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1,d={dims:p.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:p.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let b=0;b<d.dims;b++)l&&1<<b&o&&d.numAddAxisAfterEllipsis++,1<<b&i&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);let h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};J3(d,h);let c=!0,m=!0,f=!0,g=[],y=[];for(let b=0;b<e.length;++b){if(h.strides[b]===0)throw Error(`strides[${b}] must be non-zero`);let x=!!(h.shrinkAxisMask&1<<b),w=e[b];if(w===-1){g.push(x?1:-1);continue}let I=[h.beginMask&1<<b,h.endMask&1<<b],T=[h.strides[b]>0?0:-1,h.strides[b]>0?w:w-1];if(x&&h.strides[b]<=0)throw Error("only stride 1 allowed on non-range indexing.");f=f&&h.strides[b]===1;let C=!!(h.beginMask&1<<b&&h.endMask&1<<b);if(h.beginValid&&h.endValid){if(x){let F=h.begin[b]<0?w+h.begin[b]:h.begin[b];if(h.begin[b]=F,h.end[b]=h.begin[b]+1,F<0||F>=w)throw Error(`slice index ${h.begin[b]} of dimension ${b} out of bounds.`)}else h.begin[b]=Pv(h.begin[b],0,h.strides[b],w,I,T),h.end[b]=Pv(h.end[b],1,h.strides[b],w,I,T);let R=h.strides[b]===1&&h.begin[b]===0&&h.end[b]===w;c=c&&R,m=m&&(b===0&&h.strides[b]===1||R)}else c=c&&h.strides[b]===1&&C,m=m&&(b===0&&h.strides[b]===1||C);let E,A=!1;if(h.beginValid&&h.endValid?(E=h.end[b]-h.begin[b],A=!0):x?(E=1,A=!0):C&&w>=0&&(h.strides[b]<0?E=-w:E=w,A=!0),A){let R;E===0||E<0!=h.strides[b]<0?R=0:R=Math.trunc(E/h.strides[b])+(E%h.strides[b]!==0?1:0),g.push(R)}else g.push(-1)}for(let b=0;b<h.finalShapeGatherIndices.length;++b){let x=h.finalShapeGatherIndices[b];x>=0?y.push(g[x]):x===sf&&y.push(1)}return{finalShapeSparse:y.filter((b,x)=>h.finalShapeGatherIndices[x]!==sf),finalShape:y,isIdentity:c,sliceDim0:m,isSimpleSlice:f,begin:h.begin,end:h.end,strides:h.strides}}function J3(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=e.begin!=null,t.endValid=e.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){let a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(sf),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);e.begin!=null&&(t.begin[n]=e.begin[r]),e.end!=null&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(U3),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}function Pv(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{let i=e<0?r+e:e;return i<s[0]?s[0]:i>s[1]?s[1]:i}}var Y3="4.7.0",Ok=class{static sgd(e){return new Vc(e)}static momentum(e,t,n=!1){return new yy(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new by(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new fy(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new cy(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new gy(e,t,n,r,a)}static adagrad(e,t=.1){return new my(e,t)}},fs=Ok,Q3=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:e=>e())();function ky(){return new Promise(e=>Q3(()=>e()))}var N={};Ee(N,{ERF_A1:()=>mL,ERF_A2:()=>fL,ERF_A3:()=>gL,ERF_A4:()=>yL,ERF_A5:()=>bL,ERF_P:()=>cL,PARALLELIZE_THRESHOLD:()=>Iy,RowPartitionType:()=>Or,SELU_SCALE:()=>zk,SELU_SCALEALPHA:()=>Lk,applyActivation:()=>Bc,assertAndGetBroadcastShape:()=>st,assertAxesAreInnerMostDims:()=>tR,assertParamsConsistent:()=>eL,assignToTypedArray:()=>SL,axesAreInnerMostDims:()=>Dg,calculateShapes:()=>j1,checkEinsumDimSizes:()=>$L,checkPadOnDimRoundingMode:()=>wn,combineLocations:()=>c1,combineRaggedTensorToTensorShapes:()=>nL,complexWithEvenIndex:()=>wL,complexWithOddIndex:()=>kL,computeConv2DInfo:()=>Hp,computeConv3DInfo:()=>r1,computeDefaultPad:()=>fg,computeDilation2DInfo:()=>QA,computeOptimalWindowSize:()=>iL,computeOutAndReduceShapes:()=>m1,computeOutShape:()=>tL,computePool2DInfo:()=>n1,computePool3DInfo:()=>eF,convertConv2DDataFormat:()=>a1,decodeEinsumEquation:()=>_L,eitherStridesOrDilationsAreOne:()=>qr,expandShapeToKeepDim:()=>zs,exponent:()=>TL,exponents:()=>NL,fromStringArrayToUint8:()=>JL,fromUint8ToStringArray:()=>ZL,getAxesPermutation:()=>f1,getBroadcastDims:()=>p1,getComplexWithIndex:()=>IL,getEinsumComputePath:()=>AL,getEinsumPermutation:()=>EL,getFusedBiasGradient:()=>Pc,getFusedDyActivation:()=>zc,getImageCenter:()=>oL,getInnerMostAxes:()=>nR,getPermuted:()=>uL,getRaggedRank:()=>aL,getReductionAxes:()=>Ft,getReshaped:()=>lL,getReshapedPermuted:()=>pL,getRowPartitionTypesHelper:()=>rL,getSliceBeginCoords:()=>dL,getSliceSize:()=>hL,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>ML,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>OL,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>LL,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>BL,getSparseReshapeInputOutputMismatchErrorMessage:()=>VL,getSparseReshapeInputOutputMultipleErrorMessage:()=>WL,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>zL,getSparseReshapeNegativeOutputDimErrorMessage:()=>PL,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>jL,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>UL,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>GL,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>HL,getUndoAxesPermutation:()=>Mg,isIdentityPermutation:()=>FL,log:()=>h$,mergeRealAndImagArrays:()=>xL,prepareAndValidate:()=>Tk,prepareSplitSize:()=>DL,segment_util:()=>Pk,shouldFuse:()=>Wc,slice_util:()=>zt,splitRealAndImagArrays:()=>vL,stridesOrDilationsArePositive:()=>Os,tupleValuesAreOne:()=>La,upcastType:()=>ar,validateDefaultValueShape:()=>sL,validateInput:()=>Dc,validateUpdateShape:()=>ry,warn:()=>Ca});function eL(e,t){let n=e[0].length;e.forEach((a,s)=>{$(a.length===n,()=>`Error in concat${n}D: rank of tensors[${s}] must be the same as the rank of the rest (${n})`)}),$(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);let r=e[0];e.forEach((a,s)=>{for(let i=0;i<n;i++)$(i===t||a[i]===r[i],()=>`Error in concat${n}D: Shape of tensors[${s}] (${a}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`)})}function tL(e,t){let n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var Or;(function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"})(Or||(Or={}));function nL(e,t,n){let r=new Array;if(n==null&&t==null)return r;if(t==null)for(;r.length<e+n.length;)r.push(-1);else r=t.slice();if(n==null)return r;if(e+n.length!==r.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${r.length}`);for(let a=1;a<n.length;++a){let s=n[a],i=r[r.length-n.length+a],o=r[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+e}] = ${s} but shape[${a+e}] = ${o}`)}else r[i]=s}return r}function rL(e){let t={FIRST_DIM_SIZE:Or.FIRST_DIM_SIZE,VALUE_ROWIDS:Or.VALUE_ROWIDS,ROW_LENGTHS:Or.ROW_LENGTHS,ROW_SPLITS:Or.ROW_SPLITS,ROW_LIMITS:Or.ROW_LIMITS,ROW_STARTS:Or.ROW_STARTS},n=[];for(let r of e)if(r in t)n.push(t[r]);else break;return n}function aL(e){return e.length===0?0:e[0]===Or.FIRST_DIM_SIZE?e.length-1:e.length}function sL(e,t){if(e==null||t==null)return;let n=e.length,r=t.length;if(n>=r)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${r})`);for(let a=0;a<Math.min(n,r-1);++a){let s=e[a],i=t[a+1];if(s>=0&&i>=0&&s!==1&&s!==i)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-e.length}] = ${s} but ragged tensor input.flatValues.shape[${a-e.length}] = ${i}`)}}var Iy=30;function iL(e){return e<=Iy?e:ch(e,Math.floor(Math.sqrt(e)))}function oL(e,t,n){let r=n*(typeof e=="number"?e:e[0]),a=t*(typeof e=="number"?e:e[1]);return[r,a]}function lL(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);let s=t.length;for(let i=0;i<s;++i)a=a.concat([e[i+1]/t[i],t[i]]);a=a.concat(e.slice(s+1))}return a}function uL(e,t,n=!0){let r=[];if(n){r.push(t);for(let a=t+1;a<e;++a)a<=2*t?(r.push(a),r.push(a-(t+1))):r.push(a)}else{let a=[],s=[];for(let i=1;i<e;++i)i>=t*2+1||i%2===1?s.push(i):a.push(i);r.push(...a),r.push(0),r.push(...s)}return r}function pL(e,t,n,r=!0){let a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let s=1;s<e.length;++s)s<=t.length?r?a.push(t[s-1]*e[s]):a.push(e[s]/t[s-1]):a.push(e[s]);return a}function dL(e,t){let n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function hL(e,t,n){let r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Lk=1.7580993408473768,zk=1.0507009873554805,cL=.3275911,mL=.254829592,fL=-.284496736,gL=1.421413741,yL=-1.453152027,bL=1.061405429;function xL(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(e.length*2);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function vL(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function wL(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=0;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function kL(e){let t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let a=2;a<e.length;a+=4)n[Math.floor(a/4)]=e[a],r[Math.floor(a/4)]=e[a+1];return{real:n,imag:r}}function IL(e,t){let n=e[t*2],r=e[t*2+1];return{real:n,imag:r}}function SL(e,t,n,r){e[r*2]=t,e[r*2+1]=n}function NL(e,t){let n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){let s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function TL(e,t,n){let r=(n?2:-2)*Math.PI*(e/t),a=Math.cos(r),s=Math.sin(r);return{real:a,imag:s}}var $m="->",CL=/->/g,Bv=",",Wv="...";function _L(e,t){e=e.replace(/\s/g,"");let n=(e.length-e.replace(CL,"").length)/$m.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${$m}").`);let[r,a]=e.split($m);$(r.indexOf(Wv)===-1,()=>`The ellipsis notation ("${Wv}") is not supported yet.`);let s=r.split(Bv),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let h=0;h<a.length;++h){let c=a[h];if(!s.some(m=>m.indexOf(c)!==-1))throw new Error(`Output subscripts contain the label ${c} not present in the input subscripts.`);o.indexOf(c)===-1&&o.push(c)}for(let h=0;h<r.length;++h){let c=r[h];o.indexOf(c)===-1&&c!==Bv&&o.push(c)}let u=new Array(s.length);for(let h=0;h<i;++h){if(new Set(s[h].split("")).size!==s[h].length)throw new Error(`Found duplicate axes in input component ${s[h]}. Support for duplicate axes in input is not implemented yet.`);u[h]=[];for(let c=0;c<s[h].length;++c)u[h].push(o.indexOf(s[h][c]))}let p=o.length,l=a.length,d=[];for(let h=l;h<p;++h)d.push(h);return{allDims:o,summedDims:d,idDims:u}}function EL(e,t){let n=new Array(e);n.fill(-1);for(let a=0;a<t.length;++a)n[t[a]]=a;let r=[];for(let a=0;a<e;++a)n[a]===-1&&r.push(a);return n=n.filter(a=>a!==-1),{permutationIndices:n,expandDims:r}}function $L(e,t,n){let r=new Array(e);for(let a=0;a<n.length;++a){let s=n[a].shape;for(let i=0;i<t[a].length;++i)r[t[a][i]]===void 0?r[t[a][i]]=s[i]:$(r[t[a][i]]===s[i],()=>`Expected dimension ${r[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(s)}, but got dimension ${s[i]}`)}}function AL(e,t){let n=e,r=[],a=0;e.length===0&&n.push(-1),a=e.length+1;for(let i=0;i<a;++i)r.push([]);let s=[];for(let i=0;i<n.length;++i){let o=n[i],u=RL(t,o);for(let p of u)s.indexOf(p)===-1&&(r[i].push(p),s.push(p))}return{path:n,steps:r}}function FL(e){return e.every((t,n)=>t===n)}function RL(e,t){let n=[];for(let r=0;r<e.length;++r)(e[r].length===0||e[r].indexOf(t)!==-1||t===-1)&&n.push(r);return n}function DL(e,t,n=0){let r=[];if(typeof t=="number")$(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{let a=t.reduce((i,o)=>(o===-1&&(i+=1),i),0);$(a<=1,()=>"There should be only one negative value in split array.");let s=t.indexOf(-1);if(s!==-1){let i=t.reduce((o,u)=>u>0?o+u:o);t[s]=e.shape[n]-i}$(e.shape[n]===t.reduce((i,o)=>i+o),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function ML(e){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${e}`}function OL(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function LL(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function zL(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function PL(e,t){return`size ${e} must be non-negative, not ${t}`}function BL(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function WL(e,t){let n=dt(e),r=dt(t);return`Input to reshape is a SparseTensor with ${n}
  dense values, but the requested shape requires a multiple of ${r}. inputShape=${e} outputShape= ${t}`}function VL(e,t){let n=dt(e),r=dt(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${r}. inputShape=${e} outputShape=${t}`}function UL(){return"segment ids must be >= 0"}function GL(){return"segment ids are not increasing"}function HL(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function jL(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var Pk={};Ee(Pk,{collectGatherOpShapeInfo:()=>XL,computeOutShape:()=>KL,segOpComputeOptimalWindowSize:()=>qL});function qL(e,t){let n=!1,r;for(e<=Iy?(r=e,n=!0):r=ch(e,Math.floor(Math.sqrt(e)));!n;)r>t||r===e?n=!0:r=ch(e,r+1);return r}function KL(e,t,n){let r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function XL(e,t,n,r){let a=t.shape.length,s=e.shape.length;if(r!==0&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (
    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let d=0;d<r;++d)if(e.shape[d]!==t.shape[d])throw new Error(`x.shape[${d}]: ${e.shape[d]} should be equal to indices.shape[${d}]: ${t.shape[d]}.`);let i=e.shape[n],o=[],u=1,p=1,l=1;for(let d=0;d<r;++d)o.push(e.shape[d]),u*=e.shape[d];for(let d=r;d<n;d++)o.push(e.shape[d]),p*=e.shape[d];for(let d=r;d<a;d++)o.push(t.shape[d]);for(let d=n+1;d<s;d++)o.push(e.shape[d]),l*=e.shape[d];return{batchSize:u,sliceSize:l,outerSize:p,dimSize:i,outputShape:o}}function ZL(e){try{return e.map(t=>yh(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function JL(e){return e.map(t=>Vp(t))}var Xr={};Ee(Xr,{nonMaxSuppressionV3Impl:()=>ik,nonMaxSuppressionV4Impl:()=>ok,nonMaxSuppressionV5Impl:()=>lk,whereImpl:()=>X1});f3();var Bk={kernelName:il,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,yo(se(n,"float32"),-1))}}},YL={kernelName:Xs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=rt(se(n,"float32")),a=rn(he(we(1),r));return ht(fe(e,a))}}}},QL={kernelName:Zs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=rn(he(rt(se(n,"float32")),1));return fe(e,r)}}}},ez={kernelName:Ka,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=e,i=Ft(n.shape,a);return i.length>0&&(s=ge(s,i)),P(s,n.shape)},b:()=>{let s=e,i=Ft(r.shape,a);return i.length>0&&(s=ge(s,i)),P(s,r.shape)}}}},tz={kernelName:Js,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach((r,a)=>{n[a]=()=>e.clone()}),n}},nz={kernelName:ul,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>He(n)}}},rz={kernelName:pl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>He(n)}}},az={kernelName:Ys,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,rn(he(we(1),rt(se(n,"float32")))))}}},sz={kernelName:Qs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=rn(J(we(1),rt(se(n,"float32"))));return fe(e,r)}}}},iz={kernelName:ni,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=J(rt(n),rt(r)),i=z(e,fe(r,s)),o=Ft(n.shape,a);return o.length>0&&(i=ge(i,o)),P(i,n.shape)},b:()=>{let s=J(rt(n),rt(r)),i=ht(z(e,fe(n,s))),o=Ft(r.shape,a);return o.length>0&&(i=ge(i,o)),P(i,r.shape)}}}},oz={kernelName:ei,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,J(rt(se(n,"float32")),1))}}},lz={kernelName:ti,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,he(we(1),rt(se(n,"float32"))))}}};function uz(e,t,n,r,a,s){let i=_(e,"dy","avgPool3dGrad"),o=_(t,"input","avgPool3dGrad"),u=i,p=o,l=!1;o.rank===4&&(l=!0,u=P(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),p=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),$(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),$(p.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),wn("avgPool3dGrad",a,s);let d={dy:u,input:p},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},c=O.runKernel(vp,d,h);return l?P(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var pz=L({avgPool3dGrad_:uz}),dz={kernelName:dl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>pz(e,r,a,s,i,o)}}};function hz(e,t,n,r,a){let s=_(e,"dy","avgPoolGrad"),i=_(t,"input","avgPoolGrad");$(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,p=!1;i.rank===3&&(p=!0,o=P(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=P(s,[1,s.shape[0],s.shape[1],s.shape[2]])),$(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),$(o.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);let l={dy:u,input:o},d={filterSize:n,strides:r,pad:a},h=O.runKernel(xp,l,d);return p?P(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var cz=L({avgPoolGrad_:hz}),mz={kernelName:ri,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>cz(e,r,a,s,i)}}},fz={kernelName:ai,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[r,a]=t,{transposeA:s,transposeB:i}=n;return!s&&!i?{a:()=>Oe(e,a,!1,!0),b:()=>Oe(r,e,!0,!1)}:!s&&i?{a:()=>Oe(e,a,!1,!1),b:()=>Oe(e,r,!0,!1)}:s&&!i?{a:()=>Oe(a,e,!1,!0),b:()=>Oe(r,e,!1,!1)}:{a:()=>Oe(a,e,!0,!0),b:()=>Oe(e,r,!0,!0)}}},gz={kernelName:hl,gradFunc:(e,t,n)=>{let{blockShape:r,crops:a}=n;return{x:()=>Qp(e,r,a)}}},yz={kernelName:C0,gradFunc:(e,t,n)=>{let r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let u=a.length-1;u>=0;u--)if(a[u]===s[u])i[u]=1;else if(a[u]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);let o=[];for(let u=0;u<i.length;u++)i[u]>1&&o.push(u);return{x:()=>ge(e,o,!0)}}},bz={kernelName:si,gradFunc:e=>({x:()=>e.clone()})},xz={kernelName:ii,gradFunc:e=>({x:()=>He(e)})},vz={kernelName:Xa,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>qt(fr(fa(r,a),Qa(r,s)),e,He(e))}}},wz={kernelName:kp,inputsToSave:["x"],gradFunc:Bk.gradFunc},kz={kernelName:fl,saveAllInputs:!0,gradFunc:(e,t,n)=>{let r=t.map(o=>o.shape),{axis:a}=n,s=yr(a,t[0].shape)[0],i=r.map(o=>o[s]);return En(e,i,s).map(o=>()=>o)}},Iz={kernelName:oi,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return $(La(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Tg(r.shape,e,a,i,o,u),filter:()=>py(r,e,a.shape,i,o,u)}}},Sz={kernelName:li,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>fn(e,a,s,i,o,1,u),filter:()=>py(e,r,a.shape,s,i,o,u)}}};function Nz(e,t,n,r,a){let s=e;e.rank===4&&(s=P(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;i.rank===4&&(i=P(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),$(s.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),$(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),$(n.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),$(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),$(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);let o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return O.runKernel(gl,o,u)}var Tz=L({conv3DBackpropFilter_:Nz}),Cz={kernelName:ui,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s}=n;$(La(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);let[i,o]=t;return{x:()=>l1(i.shape,e,o,a,s),filter:()=>Tz(i,e,o.shape,a,s)}}},_z={kernelName:pi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(ht(Cc(se(n,"float32"))),e)}}},Ez={kernelName:di,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(_c(se(n,"float32")),e)}}},$z={kernelName:hi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{let o=f1([a],r.rank),u=fc(e,a,s,!i);return o!=null&&(u=ze(u,o)),u}}}},Az={kernelName:ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=r==null?[1,1]:r;$(La(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);let[u,p]=t;return $(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),$(p.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${p.rank}.`),$(u.shape[3]===p.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`),$(qr(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),wn("depthwiseConv2d",s,i),{x:()=>rk(u.shape,e,p,a,s,o,i),filter:()=>nk(u,e,p.shape,a,s,o,i)}}},Fz={kernelName:mi,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>O.runKernel(Po,s,n),filter:()=>O.runKernel(Bo,i,n)}}},Rz={kernelName:gi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,r={dy:e,y:n};return{x:()=>O.runKernel(wl,r)}}},Dz={kernelName:yi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(gn(ht(rt(n))),2/Math.sqrt(Math.PI));return{x:()=>z(e,r)}}},Mz={kernelName:bi,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,n)}}},Oz={kernelName:Il,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>P(e,n.shape)}}},Lz={kernelName:xi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,gn(n))}}},zz={kernelName:vi,gradFunc:e=>({x:()=>He(e)})},Pz={kernelName:wi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=fe(e,se(r,"float32")),i=Ft(n.shape,a);return i.length>0?P(ge(s,i),n.shape):s},b:()=>{let s=z(e,se(n,"float32")),i=Ft(r.shape,a);i.length>0&&(s=P(ge(s,i),r.shape));let o=rt(r);return ht(fe(s,se(o,"float32")))}}}},Bz={kernelName:ki,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:r}=n,[a,s,i,o]=t,u=o==null?we(1):o,p=Ft(s.shape,a.shape),l=[];if(s.rank===1){for(let f=0;f<a.shape.length-1;++f)l.push(a.shape[f]);l.push(1)}let d=he(a,s),h=z(e,u),c=Nc(J(i,we(r))),m=z(z(z(c,c),c),we(-.5));return{x:()=>s.rank===1?P(z(z(e,Wn(P(c,[1,1,1,s.shape[0]]),l)),u),a.shape):P(z(z(e,c),u),a.shape),mean:()=>{let f=z(z(c,we(-1)),h);return s.rank===1&&(f=ge(f,p)),P(f,s.shape)},variance:()=>{let f=z(z(m,d),h);return s.rank===1&&(f=ge(f,p)),P(f,s.shape)},scale:()=>{let f=z(d,c),g=z(e,f);return s.rank===1&&(g=ge(g,p)),P(g,s.shape)},offset:()=>{let f=e;return s.rank===1&&(f=ge(f,p)),P(f,s.shape)}}}},Wz={kernelName:Nl,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[r,a]=t,{axis:s}=n,i=yr(s,r.shape)[0];return{x:()=>{let o=r.shape,u=a.size,p=o.slice(0,i),l=p.length,d=o.slice(s,o.length).slice(1),h=d.length,c=Vv(0,l),m=Vv(l+1,l+1+h),f=Uv([p,[u],d]),g=P(e,f),y=P(a,[u]),b=Uv([[l],c,m]),x=ze(g,b),w=Oc(x,y,r.shape[i]),I=Mg(b);return w=ze(w,I),w},indices:()=>a}}};function Vv(e,t){let n=[];for(let r=e;r<t;++r)n.push(r);return n}function Uv(e){let t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}var Vz={kernelName:Ii,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>He(n),b:()=>He(r)}}},Uz={kernelName:Si,gradFunc:e=>({x:()=>se(e,"float32")})},Gz={kernelName:Ni,gradFunc:e=>({x:()=>He(e)})},Hz={kernelName:Ti,gradFunc:e=>({x:()=>He(e)})},jz={kernelName:Ci,gradFunc:e=>({x:()=>He(e)})},qz={kernelName:_i,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{alpha:a}=n,s=kn(r,0);return{x:()=>qt(s,e,z(e,a))}}},Kz={kernelName:$i,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,J(n,1))}}},Xz={kernelName:Ei,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,se(n,"float32"))}}},Zz={kernelName:E0,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n;return{logits:()=>{let s=gn(r);return he(e,z(ge(e,a,!0),s))}}}};function Jz(e,t,n,r=5,a=1,s=1,i=.5){let o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return O.runKernel(Dl,o,u)}var Yz=L({localResponseNormalizationBackprop_:Jz}),Qz={kernelName:Ai,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>Yz(r,a,e,s,i,o,u)}}};function Wk(e,t,n,r){return t.rank<n.rank&&(t=P(t,zs(t.shape,r))),e.rank<n.rank&&(e=P(e,zs(e.shape,r))),{x:()=>z(e,se(Gn(n,t),e.dtype))}}var Gv={kernelName:Fi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{reductionIndices:a}=r,s=t[0],i=t[1],o=yr(a,s.shape),u=Wk(e,i,s,o);return{x:()=>u.x()}}},eP={kernelName:Ri,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,se(fa(n,r),"float32")),b:()=>z(e,se(Uo(n,r),"float32"))}}};function tP(e,t,n,r,a,s,i){let o=_(e,"dy","maxPool3dGrad"),u=_(t,"input","maxPool3dGrad"),p=_(n,"output","maxPool3dGrad"),l=o,d=u,h=p,c=!1;u.rank===4&&(c=!0,l=P(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=P(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=P(p,[1,p.shape[0],p.shape[1],p.shape[2],p.shape[3]])),$(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),wn("maxPool3dGrad",s,i);let m={dy:l,input:d,output:h},f={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=O.runKernel(Cp,m,f);return c?P(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var nP=L({maxPool3dGrad_:tP}),rP={kernelName:Ml,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>nP(e,r,a,s,i,o,u)}}};function aP(e,t,n,r,a,s,i){let o=_(e,"dy","maxPoolGrad"),u=_(t,"input","maxPoolGrad"),p=_(n,"output","maxPoolGrad");$(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),$(o.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),$(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),wn("maxPoolGrad",s,i);let l={dy:o,input:u,output:p},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return O.runKernel(Tp,l,d)}var sP=L({maxPoolGrad_:aP}),iP={kernelName:Di,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>sP(e,r,a,s,i,o)}}},oP={kernelName:Mi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=yr(a,r.shape),i=m1(r.shape,s)[1],o=dt(i);return{x:()=>{let u=r.shape.slice();s.forEach(l=>{u[l]=1});let p=P(e,u);return fe(z(p,Vn(r.shape,"float32")),o)}}}},lP={kernelName:Oi,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let r=n,{axis:a}=r,[s,i]=t,o=yr(a,s.shape),u=Wk(e,i,s,o);return{x:()=>u.x()}}},uP={kernelName:Li,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t;return{a:()=>z(e,se(Qa(n,r),"float32")),b:()=>z(e,se(kn(n,r),"float32"))}}},pP={kernelName:zi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ue(e,s,r.shape)}}},dP={kernelName:Pi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=Ft(n.shape,a);return s.length>0?P(ge(e,s),n.shape):e},b:()=>{let s=z(e,ht(du(fe(n,r)))),i=Ft(r.shape,a);return i.length>0?P(ge(s,i),r.shape):s}}}},hP={kernelName:Bi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=z(e,se(r,"float32")),i=Ft(n.shape,a);return i.length>0?P(ge(s,i),n.shape):s},b:()=>{let s=z(e,se(n,"float32")),i=Ft(r.shape,a);return i.length>0?P(ge(s,i),r.shape):s}}}},cP={kernelName:Ll,gradFunc:e=>({x:()=>ht(e)})},mP={kernelName:Wi,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>vt(n.shape,"float32")}}},fP={kernelName:Vl,gradFunc:e=>({x:()=>He(e)})},gP={kernelName:Ul,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:r}=n;return Nt(e,r).map(a=>()=>a)}},Hv={kernelName:Vi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let r=t[0],{paddings:a}=n,s=a.map(i=>i[0]);return{x:()=>Ue(e,s,r.shape)}}},yP={kernelName:Ui,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,r,a]=t,s=n,i=r,o=st(s.shape,i.shape);return{a:()=>{let u=se(i,"float32"),p=z(e,z(u,da(s,he(u,we(1))))),l=Ft(s.shape,o);return l.length>0&&(p=ge(p,l)),P(p,s.shape)},b:()=>{let u=kn(s,0),p=qt(u,Hn(s),He(s)),l=z(e,z(a,p)),d=Ft(i.shape,o);return d.length>0&&(l=ge(l,d)),P(l,i.shape)}}}},bP={kernelName:Gi,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,r]=t,a=kn(n,0);return{x:()=>qt(a,e,z(e,r)),alpha:()=>{let s=qt(a,He(e),z(e,n)),i=Ft(r.shape,e.shape);return i.length>0&&(s=ge(s,i)),P(s,r.shape)}}}};function xP(e,t,n){let r=e.shape.slice();r[n]=1;let a=P(t,r),s=op(e,n,!0,!1),i=op(e,n,!0,!0),o=z(s,i);return z(a,o)}function vP(e,t,n){let r=e.shape.length,a=r-n.length,s=N.getAxesPermutation(n,r),i=e;s!=null&&(i=ze(e,s));let o=i.shape.slice(),u=o.splice(r-n.length,n.length).reduce((d,h)=>d*h,1);o.push(u);let p=i.reshape(o),l=xP(p,t,a);if(l=l.reshape(i.shape),s!=null){let d=N.getUndoAxesPermutation(s);l=ze(l,d)}return l}var wP={kernelName:Hi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{axis:a}=n,s=[];return a==null?s=r.shape.map((i,o)=>o):typeof a=="number"?s=[a]:s=a,{x:()=>vP(r,e,s)}}},kP={kernelName:fi,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=fe(e,se(r,"float32")),i=Ft(n.shape,a);return i.length>0?P(ge(s,i),n.shape):s},b:()=>{let s=z(e,se(n,"float32")),i=Ft(r.shape,a);i.length>0&&(s=P(ge(s,i),r.shape));let o=rt(r);return ht(fe(s,se(o,"float32")))}}}},IP={kernelName:ji,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,ht(rt(n)))}}},SP={kernelName:Zi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,r=z(Qa(n,6),yo(n));return{x:()=>z(e,se(r,"float32"))}}},NP={kernelName:qi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,se(yo(n),"float32"))}}},TP={kernelName:Gl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>P(e,n.shape)}}},CP={kernelName:Xi,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(jl,a,n)}}},_P={kernelName:Ki,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[r]=t,a={dy:e,images:r};return{images:()=>O.runKernel(Hl,a,n)}}},EP={kernelName:Ji,gradFunc:(e,t,n)=>{let{dims:r}=n,a=yr(r,e.shape);return{x:()=>sr(e,a)}}},$P={kernelName:Yi,gradFunc:e=>({x:()=>He(e)})},AP={kernelName:Qi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>ht(fe(e,z(da(n,1.5),2)))}}},FP={kernelName:Zl,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>se(He(n),"float32"),t:()=>z(e,se(n,e.dtype)),e:()=>z(e,se(Jp(n),e.dtype))}}},RP={kernelName:eo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let r=kn(n,we(0)),a=we(Lk),s=we(zk),i=z(e,s),o=z(z(e,a),gn(se(n,"float32")));return qt(r,i,o)}}}},DP={kernelName:ao,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(n,he(we(1),n)))}}},MP={kernelName:ro,gradFunc:e=>({x:()=>He(e)})},OP={kernelName:to,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(qp(se(n,"float32")),e)}}},LP={kernelName:no,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(mc(se(n,"float32")),e)}}},zP={kernelName:Jl,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Mk(r,a,s),p=[];for(let l=0;l<e.rank;l++)p.push([o[l],i[l]-o[l]-u[l]]);return{x:()=>$r(e,p)}}},PP={kernelName:lo,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[r]=t,{dim:a}=n,s=!0,i=z(e,r);return{logits:()=>he(i,z(ge(i,[a],s),r))}}},BP={kernelName:so,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,mr(n))}}},jv={kernelName:Yl,gradFunc:(e,t,n)=>{let{blockShape:r,paddings:a}=n;return{x:()=>jp(e,r,a)}}},qv={kernelName:Ql,gradFunc:(e,t,n)=>{let{axis:r}=n;return{x:()=>at(e,r)}}},WP={kernelName:io,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,z(rn(se(n,"float32")),2))}}},VP={kernelName:Rp,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(e,z(se(n,"float32"),2))}}},UP={kernelName:uo,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=we(2);return{a:()=>z(e,z(a,he(n,r))),b:()=>z(e,z(a,he(r,n)))}}},GP={kernelName:Ja,gradFunc:e=>({x:()=>He(e)})},HP={kernelName:po,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,r]=t,a=st(n.shape,r.shape);return{a:()=>{let s=e,i=Ft(n.shape,a);return i.length>0&&(s=ge(s,i)),P(s,n.shape)},b:()=>{let s=e,i=Ft(r.shape,a);return i.length>0&&(s=ge(s,i)),P(ht(s),r.shape)}}}},jP={kernelName:oo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,a=r.shape.slice(),{axis:s}=n;yr(s,r.shape).forEach(u=>{a[u]=1});let i=P(e,a),o=z(i,Vn(r.shape,"float32"));return{x:()=>o}}},qP={kernelName:ho,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>fe(e,rt(qp(n)))}}},KP={kernelName:co,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>z(he(we(1),rt(n)),e)}}},XP={kernelName:Za,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[r]=t,{reps:a}=n;return{x:()=>{let s=He(r);if(r.rank===1)for(let i=0;i<a[0];++i)s=J(s,Ue(e,[i*r.shape[0]],[r.shape[0]]));else if(r.rank===2)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)s=J(s,Ue(e,[i*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(r.rank===3)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let u=0;u<a[2];++u)s=J(s,Ue(e,[i*r.shape[0],o*r.shape[1],u*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else if(r.rank===4)for(let i=0;i<a[0];++i)for(let o=0;o<a[1];++o)for(let u=0;u<a[2];++u)for(let p=0;p<a[3];++p)s=J(s,Ue(e,[i*r.shape[0],o*r.shape[1],u*r.shape[2],p*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);return s}}}},ZP={kernelName:oa,gradFunc:(e,t,n)=>{let r=n,{perm:a}=r,s=Mg(a);return{x:()=>ze(e,s)}}},JP={kernelName:su,gradFunc:(e,t,n)=>{let r=n,{axis:a}=r;return{value:()=>Lt(e,a)}}},YP={kernelName:Pp,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>QP(e,n)}}};function QP(e,t){let n=Kr(t,He(t)),r=hu(e,n),a=fa(t,we(0,"int32")),s=r.rank-a.rank;for(let o=0;o<s;++o)a=Qt(a,o+1);a=fr(a,Vn(r.shape,"bool"));let i=He(r);return qt(a,r,i)}var eB={kernelName:iu,gradFunc:e=>({x:()=>He(e)})},tB=[Bk,YL,QL,ez,tz,nz,rz,az,sz,iz,oz,lz,dz,mz,fz,gz,yz,bz,xz,vz,wz,kz,Sz,Iz,Cz,_z,Ez,$z,Az,Fz,kP,Rz,Dz,Mz,Oz,Lz,Pz,zz,Bz,Wz,Vz,Uz,Gz,Hz,jz,qz,Kz,Xz,Zz,Qz,Gv,Gv,eP,rP,iP,oP,lP,uP,pP,dP,hP,cP,mP,fP,gP,Hv,Hv,yP,bP,wP,IP,SP,NP,TP,CP,_P,EP,$P,AP,FP,RP,DP,MP,OP,LP,zP,PP,BP,jv,jv,qv,qv,WP,UP,VP,GP,HP,jP,qP,KP,XP,ZP,JP,YP,eB];for(let e of tB)$0(e);Y().prototype.abs=function(){return this.throwIfDisposed(),Et(this)};Y().prototype.acos=function(){return this.throwIfDisposed(),og(this)};Y().prototype.acosh=function(){return this.throwIfDisposed(),lg(this)};Y().prototype.add=function(e){return this.throwIfDisposed(),J(this,e)};Y().prototype.all=function(e,t){return this.throwIfDisposed(),dc(this,e,t)};Y().prototype.any=function(e,t){return this.throwIfDisposed(),ap(this,e,t)};Y().prototype.argMax=function(e){return this.throwIfDisposed(),Ms(this,e)};Y().prototype.argMin=function(e){return this.throwIfDisposed(),ug(this,e)};Y().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),P(this,[])};Y().prototype.asType=function(e){return this.throwIfDisposed(),se(this,e)};Y().prototype.as1D=function(){return this.throwIfDisposed(),P(this,[this.size])};Y().prototype.as2D=function(e,t){return this.throwIfDisposed(),P(this,[e,t])};Y().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),P(this,[e,t,n])};Y().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),P(this,[e,t,n,r])};Y().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),P(this,[e,t,n,r,a])};Y().prototype.asin=function(){return this.throwIfDisposed(),pg(this)};Y().prototype.asinh=function(){return this.throwIfDisposed(),dg(this)};Y().prototype.atan=function(){return this.throwIfDisposed(),hg(this)};Y().prototype.atan2=function(e){return this.throwIfDisposed(),cg(this,e)};Y().prototype.atanh=function(){return this.throwIfDisposed(),mg(this)};Y().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),ma(this,e,t,n,r)};Y().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),jp(this,e,t)};Y().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),mo(this,e,t,n,r,a)};Y().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Ss(this,e)};Y().prototype.cast=function(e){return this.throwIfDisposed(),se(this,e)};Y().prototype.ceil=function(){return this.throwIfDisposed(),wg(this)};Y().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),on(this,e,t)};Y().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ae&&(e=[e]),at([this,...e],t)};Y().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),hc(this,e,t,n,r,a,s)};Y().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),cc(this,e,t,n,r,a)};Y().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),fn(this,e,t,n,r,a,s)};Y().prototype.cos=function(){return this.throwIfDisposed(),qp(this)};Y().prototype.cosh=function(){return this.throwIfDisposed(),mc(this)};Y().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),op(this,e,t,n)};Y().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),fc(this,e,t,n)};Y().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Eg(this,e,t)};Y().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),fo(this,e,t,n,r,a,s)};Y().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),$g(this,e,t,n,r,a)};Y().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ag(this,e)};Y().prototype.div=function(e){return this.throwIfDisposed(),fe(this,e)};Y().prototype.dot=function(e){return this.throwIfDisposed(),Fg(this,e)};Y().prototype.elu=function(){return this.throwIfDisposed(),uu(this)};Y().prototype.equal=function(e){return this.throwIfDisposed(),Gn(this,e)};Y().prototype.erf=function(){return this.throwIfDisposed(),Rg(this)};Y().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Og(this,e,t)};Y().prototype.exp=function(){return this.throwIfDisposed(),gn(this)};Y().prototype.expandDims=function(e){return this.throwIfDisposed(),Qt(this,e)};Y().prototype.expm1=function(){return this.throwIfDisposed(),Lg(this)};Y().prototype.fft=function(){return this.throwIfDisposed(),nd(this)};Y().prototype.flatten=function(){return this.throwIfDisposed(),P(this,[this.size])};Y().prototype.floor=function(){return this.throwIfDisposed(),du(this)};Y().prototype.floorDiv=function(e){return this.throwIfDisposed(),pc(this,e)};Y().prototype.gather=function(e,t,n){return this.throwIfDisposed(),hu(this,e,t,n)};Y().prototype.greaterEqual=function(e){return this.throwIfDisposed(),fa(this,e)};Y().prototype.greater=function(e){return this.throwIfDisposed(),kn(this,e)};Y().prototype.ifft=function(){return this.throwIfDisposed(),qo(this)};Y().prototype.irfft=function(){return this.throwIfDisposed(),$c(this)};Y().prototype.isFinite=function(){return this.throwIfDisposed(),zg(this)};Y().prototype.isInf=function(){return this.throwIfDisposed(),Pg(this)};Y().prototype.isNaN=function(){return this.throwIfDisposed(),Bg(this)};Y().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Xp(this,e)};Y().prototype.lessEqual=function(e){return this.throwIfDisposed(),Qa(this,e)};Y().prototype.less=function(e){return this.throwIfDisposed(),Uo(this,e)};Y().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Wg(this,e,t,n,r)};Y().prototype.logSigmoid=function(){return this.throwIfDisposed(),Vg(this)};Y().prototype.logSoftmax=function(e){return this.throwIfDisposed(),bc(this,e)};Y().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),xc(this,e,t)};Y().prototype.log=function(){return this.throwIfDisposed(),Hn(this)};Y().prototype.log1p=function(){return this.throwIfDisposed(),Zp(this)};Y().prototype.logicalAnd=function(e){return this.throwIfDisposed(),fr(this,e)};Y().prototype.logicalNot=function(){return this.throwIfDisposed(),Jp(this)};Y().prototype.logicalOr=function(e){return this.throwIfDisposed(),vc(this,e)};Y().prototype.logicalXor=function(e){return this.throwIfDisposed(),Ug(this,e)};Y().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Oe(this,e,t,n)};Y().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Ut(this,e,t,n,r)};Y().prototype.max=function(e,t){return this.throwIfDisposed(),rr(this,e,t)};Y().prototype.maximum=function(e){return this.throwIfDisposed(),Kr(this,e)};Y().prototype.mean=function(e,t){return this.throwIfDisposed(),xt(this,e,t)};Y().prototype.min=function(e,t){return this.throwIfDisposed(),Vo(this,e,t)};Y().prototype.minimum=function(e){return this.throwIfDisposed(),za(this,e)};Y().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Hg(this,e,t)};Y().prototype.mod=function(e){return this.throwIfDisposed(),jg(this,e)};Y().prototype.mul=function(e){return this.throwIfDisposed(),z(this,e)};Y().prototype.neg=function(){return this.throwIfDisposed(),ht(this)};Y().prototype.norm=function(e,t,n){return this.throwIfDisposed(),pu(this,e,t,n)};Y().prototype.notEqual=function(e){return this.throwIfDisposed(),Ps(this,e)};Y().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Go(this,e,t,n)};Y().prototype.onesLike=function(){return this.throwIfDisposed(),jn(this)};Y().prototype.pad=function(e,t){return this.throwIfDisposed(),$r(this,e,t)};Y().prototype.pool=function(e,t,n,r,a,s){return this.throwIfDisposed(),qg(this,e,t,n,r,a,s)};Y().prototype.pow=function(e){return this.throwIfDisposed(),da(this,e)};Y().prototype.prelu=function(e){return this.throwIfDisposed(),ed(this,e)};Y().prototype.prod=function(e,t){return this.throwIfDisposed(),Kg(this,e,t)};Y().prototype.reciprocal=function(){return this.throwIfDisposed(),Qg(this)};Y().prototype.relu=function(){return this.throwIfDisposed(),et(this)};Y().prototype.relu6=function(){return this.throwIfDisposed(),Ic(this)};Y().prototype.reshapeAs=function(e){return this.throwIfDisposed(),P(this,e.shape)};Y().prototype.reshape=function(e){return this.throwIfDisposed(),P(this,e)};Y().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),uk(this,e,t,n)};Y().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),pk(this,e,t,n)};Y().prototype.reverse=function(e){return this.throwIfDisposed(),sr(this,e)};Y().prototype.rfft=function(){return this.throwIfDisposed(),rd(this)};Y().prototype.round=function(){return this.throwIfDisposed(),Sc(this)};Y().prototype.rsqrt=function(){return this.throwIfDisposed(),Nc(this)};Y().prototype.selu=function(){return this.throwIfDisposed(),Tc(this)};Y().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),cu(this,e,t,n,r,a,s)};Y().prototype.sigmoid=function(){return this.throwIfDisposed(),mr(this)};Y().prototype.sign=function(){return this.throwIfDisposed(),ey(this)};Y().prototype.sin=function(){return this.throwIfDisposed(),Cc(this)};Y().prototype.sinh=function(){return this.throwIfDisposed(),_c(this)};Y().prototype.slice=function(e,t){return this.throwIfDisposed(),Ue(this,e,t)};Y().prototype.softmax=function(e){return this.throwIfDisposed(),ts(this,e)};Y().prototype.softplus=function(){return this.throwIfDisposed(),go(this)};Y().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Qp(this,e,t)};Y().prototype.split=function(e,t){return this.throwIfDisposed(),En(this,e,t)};Y().prototype.sqrt=function(){return this.throwIfDisposed(),rn(this)};Y().prototype.square=function(){return this.throwIfDisposed(),rt(this)};Y().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Ac(this,e)};Y().prototype.squeeze=function(e){return this.throwIfDisposed(),ns(this,e)};Y().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ae?[this,e]:[this,...e];return Lt(n,t)};Y().prototype.step=function(e){return this.throwIfDisposed(),yo(this,e)};Y().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),ty(this,e,t,n,r,a,s,i,o)};Y().prototype.sub=function(e){return this.throwIfDisposed(),he(this,e)};Y().prototype.sum=function(e,t){return this.throwIfDisposed(),ge(this,e,t)};Y().prototype.tan=function(){return this.throwIfDisposed(),ny(this)};Y().prototype.tanh=function(){return this.throwIfDisposed(),Ls(this)};Y().prototype.tile=function(e){return this.throwIfDisposed(),Wn(this,e)};Y().prototype.toBool=function(){return this.throwIfDisposed(),se(this,"bool")};Y().prototype.toFloat=function(){return this.throwIfDisposed(),se(this,"float32")};Y().prototype.toInt=function(){return this.throwIfDisposed(),se(this,"int32")};Y().prototype.topk=function(e,t){return this.throwIfDisposed(),ay(this,e,t)};Y().prototype.transpose=function(e){return this.throwIfDisposed(),ze(this,e)};Y().prototype.unique=function(e){return this.throwIfDisposed(),sy(this,e)};Y().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Oc(this,e,t)};Y().prototype.unstack=function(e){return this.throwIfDisposed(),Nt(this,e)};Y().prototype.where=function(e,t){return this.throwIfDisposed(),qt(e,this,t)};Y().prototype.zerosLike=function(){return this.throwIfDisposed(),He(this)};var na=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,na.prototype)}},kr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,kr.prototype)}},V=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,V.prototype)}},Le=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Le.prototype)}},Vk=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Vk.prototype)}},Uk=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let n=this.cache.keys().next().value;this.cache.delete(n)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let n=this.cache.keys().next().value;this.cache.delete(n)}this.maxEntries=e}};function Ws(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}else{let n=new Array(t);return n.fill(e),n}}function Lr(e,t){if(!e)throw new Vk(t)}function Kv(e,t){let n=0;for(let r of e)r===t&&n++;return n}function _n(e){return e.length===1?e[0]:e}function mt(e){return Array.isArray(e)?e:[e]}function ra(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function bs(e){return e.length<=1||e.indexOf("_")===-1?e:e.replace(/[_]+(\w|$)/g,(t,n)=>n.toUpperCase())}var lr={};function Sy(e){if(e==null)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function of(e){if(!(e==null||typeof e!="object"))if(Array.isArray(e))e.forEach(t=>of(t));else{let t=Object.keys(e);for(let n of t){let r=e[n];r!=null&&typeof r=="object"&&(!Array.isArray(r)&&r.type==="ndarray"&&typeof r.value=="number"?e[n]=r.value:of(r))}}}function sd(e,t={},n={},r="object",a=!1){if(typeof e=="string"){let s=e,i;if(s in n)i=n[s];else if(s in lr)i=lr[s];else if(i=t[s],i==null)throw new V(`Unknown ${r}: ${e}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{let s=e;if(s.className==null||s.config==null)throw new V(`${r}: Improper config format: ${JSON.stringify(s)}.
'className' and 'config' must set.`);let i=s.className,o,u;if(i in n?[o,u]=n[i]:i in lr?[o,u]=lr.className:i in t&&([o,u]=t[i]),o==null)throw new V(`Unknown ${r}: ${i}. This may be due to one of the following reasons:
1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){let p={};for(let c of Object.keys(lr))p[c]=lr[c];for(let c of Object.keys(n))p[c]=n[c];let l=s.config;l.customObjects=p;let d=Object.assign({},lr);for(let c of Object.keys(n))lr[c]=n[c];of(s.config);let h=u(o,s.config,n,a);return lr=Object.assign({},d),h}else{let p=Object.assign({},lr);for(let d of Object.keys(n))lr[d]=n[d];let l=new o(s.config);return lr=Object.assign({},p),l}}}function nB(e,t){return e<t?-1:e>t?1:0}function Wd(e,t){return-1*nB(e,t)}function Ra(e){if(e==null)return e;let t=[];for(let n of e)t.indexOf(n)===-1&&t.push(n);return t}function rB(e){if(e==null)throw new V(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function bo(e,t,n){if(n!=null&&e.indexOf(n)<0)throw new V(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Ny(e,t,n=0,r=1/0){return Lr(n>=0),Lr(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(a=>typeof a===t)}function jt(e,t){Array.isArray(e)?(v.assert(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((n,r)=>jt(n,`element ${r+1} of ${t}`))):v.assert(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Gk(e)}.`)}function Gk(e){return e===null?"null":Array.isArray(e)?"["+e.map(t=>Gk(t)).join(",")+"]":typeof e=="string"?`"${e}"`:`${e}`}function aB(e,t,n){let r=n!=null?n():v.now(),a;return(...s)=>{let i=n!=null?n():v.now();return i-r<t||(r=i,a=e(...s)),a}}function Hk(e){return e==="relu"?"relu":e==="linear"?"linear":e==="elu"?"elu":null}var sB=0;function jk(){return sB++}var Vd={};function Uc(e=""){return e in Vd||(Vd[e]=0),Vd[e]+=1,e+Vd[e].toString()}var iB=["channelsFirst","channelsLast"],oB=["nearest","bilinear"],lB=["valid","same","causal"],uB=["max","avg"],pB=["sum","mul","concat","ave"],Eo=new Map;function Tt(e){bo(iB,"DataFormat",e)}function dB(e){bo(oB,"InterpolationFormat",e)}function ir(e){bo(lB,"PaddingMode",e)}function qk(e){bo(uB,"PoolMode",e)}var Xu=[],Xv="/";function Ns(e,t){Xu.push(e);try{let n=t();return Xu.pop(),n}catch(n){throw Xu.pop(),n}}function hB(){return Xu.length===0?"":Xu.join(Xv)+Xv}function Kk(e){if(!Zk(e))throw new Error("Not a valid tensor name: '"+e+"'");return hB()+e}function Xk(e){if(!Zk(e))throw new Error("Not a valid tensor name: '"+e+"'");Eo.has(e)||Eo.set(e,0);let t=Eo.get(e);if(Eo.set(e,Eo.get(e)+1),t>0){let n=`${e}_${t}`;return Eo.set(n,1),n}else return e}var cB=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Zk(e){return!!e.match(cB)}function mB(e){return e===parseInt(e.toString(),10)}function Da(e,t,n){t==null&&(t=0),n==null&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function Zo(e){if(e.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r<t&&(t=r)}return t}function Ba(e){if(e.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let r=e[n];r>t&&(t=r)}return t}function Cr(e,t){if(t<e)throw new V(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let r=e;r<t;++r)n.push(r);return n}var Am;function Ot(){return Am==null&&(Am=e1().epsilon()),Am}function _r(){return"channelsLast"}function ha(e,t){return se(e,t)}function id(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),P(e,n)}function fB(e,t){return W(()=>{if(e.shape.length!==2)throw new V(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);let n=id(e,1);return lf(n,[1,t,1])})}function gB(e){let t=[Da(e.shape)];return P(e,t)}function yB(e){if(e.rank<=1)throw new V(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],Da(e.shape,1)];return P(e,t)}function Ts(e,t,n){return W(()=>{switch(e.rank){case 1:return td(e,t,n);case 2:return Ec(e,[t,0],[n,e.shape[1]]);case 3:return mu(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return jo(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Ue(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Ue(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new V(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Fm(e,t,n){return W(()=>{switch(e.rank){case 1:return td(e,t,n);case 2:return Ec(e,[0,t],[e.shape[0],n]);case 3:return mu(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return jo(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ud(e,t,n,r){return W(()=>{switch(e.rank){case 1:return td(e,t,n);case 2:switch(r){case 1:return Ts(e,t,n);case 2:return Fm(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Ts(e,t,n);case 2:return mu(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Fm(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Ts(e,t,n);case 2:return jo(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return jo(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Fm(e,t,n);default:throw new V(`The axis is not within the rank of the tensor ${r}`)}default:throw new V(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Ty(e,t=-1){let n;return t<0&&(n=e[0].rank,n!==0?t=n:t=0),t===e[0].rank&&(t=-1),at(e,t)}function Zv(e,t){switch(e.rank){case 1:return kg([e,t]);case 2:return Ig([e,t],0);case 3:return Sg([e,t],0);case 4:return Ng([e,t],0);default:throw new V(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function lf(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new V(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Wn(e,t)}function Gc(e,t=0,n=1,r,a){return kc(e,t,n,r,a)}function Vr(e,t,n,r){if(e.rank<2||t.rank<2)throw new Le(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){let a=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(a!==s)throw new Le(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(e.rank===2&&t.rank===2)return Ko.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?uf(e.rank,r,_r()):null,activation:n});{let a=e.shape.slice(),s=a.pop();e=P(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),u=i.pop(),p=[...i,o],l=Array.from({length:t.rank},(m,f)=>f===0?t.rank-2:f<=t.rank-2?f-1:f);t=P(ze(t,l),[u,-1]);let d=[...a,...p],h=!1,c=!1;return P(Ko.matMul({a:e,b:t,transposeA:h,transposeB:c,bias:r?uf(e.rank,r,_r()):null,activation:n}),d)}}function Jk(e,t,n){return W(()=>(Array.isArray(t)?t=Qe(t,"int32"):t=se(t,"int32"),hu(e,t,n)))}function od(e){return z(e,e)}function uf(e,t,n){let r=t.shape;if(t.rank!==1&&t.rank!==e)throw new V(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(e===5){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1,1]):P(t,[1,r[3],r[0],r[1],r[2]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,1,r[0]]):P(t,[1].concat(r))}else if(e===4){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1,1]):P(t,[1,r[2],r[0],r[1]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,1,r[0]]):P(t,[1].concat(r))}else if(e===3){if(n==="channelsFirst")return r.length===1?P(t,[1,r[0],1]):P(t,[1,r[1],r[0]]);if(n==="channelsLast")return r.length===1?P(t,[1,1,r[0]]):P(t,[1].concat(r))}else if(e<3)return t;throw new V(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ar(e,t,n){return W(()=>(n==null&&(n=_r()),Tt(n),J(e,uf(e.rank,t,n))))}function bB(e,t=1){if(t!==1)throw new Le(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return uu(e)}function xB(e){return W(()=>fe(e,J(Et(e),1)))}function Yk(e,t,n,r){return W(()=>ly(e,t,n,r))}function vB(e){return W(()=>{let t=J(.5,z(.2,e));return on(t,0,1)})}function ld(e,t,n=!1){return n?e():t()}var wB=["fanIn","fanOut","fanAvg"],kB=["normal","uniform","truncatedNormal"];function IB(e){bo(wB,"FanMode",e)}function SB(e){bo(kB,"Distribution",e)}var br=class extends ne.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Cy=class extends br{apply(e,t){return vt(e,t)}};Cy.className="Zeros";ne.registerClass(Cy);var Hc=class extends br{apply(e,t){return Vn(e,t)}};Hc.className="Ones";ne.registerClass(Hc);var _y=class extends br{constructor(e){if(super(),typeof e!="object")throw new V(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new V(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return W(()=>z(we(this.value),Vn(e,t)))}getConfig(){return{value:this.value}}};_y.className="Constant";ne.registerClass(_y);var Ey=class extends br{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return es(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Ey.className="RandomUniform";ne.registerClass(Ey);var $y=class extends br{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`randomNormal does not support dType ${t}.`);return Gc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};$y.className="RandomNormal";ne.registerClass($y);var Ay=class extends br{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`truncatedNormal does not support dType ${t}.`);return Mc(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Ay.className="TruncatedNormal";ne.registerClass(Ay);var Fy=class extends br{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return W(()=>{if(e.length!==2||e[0]!==e[1])throw new V("Identity matrix initializer can only be used for 2D square matrices.");return z(this.gain,gc(e[0]))})}getConfig(){return{gain:this.gain}}};Fy.className="Identity";ne.registerClass(Fy);function NB(e,t="channelsLast"){let n,r;if(Tt(t),e.length===2)n=e[0],r=e[1];else if([3,4,5].indexOf(e.length)!==-1){if(t==="channelsFirst"){let a=Da(e,2);n=e[1]*a,r=e[0]*a}else if(t==="channelsLast"){let a=Da(e,0,e.length-2);n=e[e.length-2]*a,r=e[e.length-1]*a}}else{let a=Da(e);n=Math.sqrt(a),r=Math.sqrt(a)}return[n,r]}var Fn=class extends br{constructor(e){if(super(),e.scale<0)throw new V(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,IB(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,SB(this.distribution),this.seed=e.seed}apply(e,t){let n=NB(e),r=n[0],a=n[1],s=this.scale;if(this.mode==="fanIn"?s/=Math.max(1,r):this.mode==="fanOut"?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),this.distribution==="normal"){let i=Math.sqrt(s);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new Le(`${this.getClassName()} does not support dType ${t}.`);return Mc(e,0,i,t,this.seed)}else{let i=Math.sqrt(3*s);return es(e,-i,i,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};Fn.className="VarianceScaling";ne.registerClass(Fn);var jc=class extends Fn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};jc.className="GlorotUniform";ne.registerClass(jc);var qc=class extends Fn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};qc.className="GlorotNormal";ne.registerClass(qc);var Kc=class extends Fn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};Kc.className="HeNormal";ne.registerClass(Kc);var Xc=class extends Fn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};Xc.className="HeUniform";ne.registerClass(Xc);var Zc=class extends Fn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};Zc.className="LeCunNormal";ne.registerClass(Zc);var Jc=class extends Fn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Fn.className}};Jc.className="LeCunUniform";ne.registerClass(Jc);var Ry=class extends br{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return W(()=>{if(e.length<2)throw new Le("Shape must be at least 2D.");if(t!=="int32"&&t!=="float32"&&t!==void 0)throw new TypeError(`Unsupported data type ${t}.`);t=t;let n=v.sizeFromShape(e.slice(0,-1)),r=e[e.length-1],a=n*r;a>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${a}) elements: Slowness may result.`);let s=[Math.max(r,n),Math.min(r,n)],i=Gc(s,0,1,t,this.seed),o=hy.qr(i,!1),u=o[0],p=o[1].flatten().stridedSlice([0],[Math.min(r,n)*Math.min(r,n)],[Math.min(r,n)+1]);return u=z(u,p.sign()),n<r&&(u=u.transpose()),z(we(this.gain),u.reshape(e))})}getConfig(){return{gain:this.gain,seed:this.seed}}};Ry.className="Orthogonal";ne.registerClass(Ry);var Jv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Yv(e,t={}){return sd(e,ne.SerializationMap.getMap().classNameMap,t,"initializer")}function wt(e){return Sy(e)}function gt(e){if(typeof e=="string"){let t=e in Jv?Jv[e]:e;if(t==="GlorotNormal")return new qc;if(t==="GlorotUniform")return new jc;if(t==="HeNormal")return new Kc;if(t==="HeUniform")return new Xc;if(t==="LeCunNormal")return new Zc;if(t==="LeCunUniform")return new Jc;{let n={};return n.className=t,n.config={},Yv(n)}}else return e instanceof br?e:Yv(e)}function pf(e){return Array.isArray(e)&&Array.isArray(e[0])}function wh(e){return e.length===0?[]:Array.isArray(e[0])?e:[e]}function Ce(e){let t;if(Array.isArray(e)){if(e.length!==1)throw new V(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Ze(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(e.length===1)return e=e,e[0];throw new V(`Expected exactly 1 Shape; got ${e.length}`)}else return e}function kh(e){let t=0;for(let n of e)n.shape.length===0?t+=1:t+=n.shape.reduce((r,a)=>r*a);return t}var Qv="Variable",Qk=class{constructor(e,t="float32",n=Qv,r=!0,a=null){this.dtype=t==null?"float32":t,this.shape=e.shape,this.id=jk(),n=n==null?Qv:n,this.originalName=Kk(n),this.name=Xk(this.originalName),this.trainable_=r,this.constraint=a,this.val=iy(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),TB(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function TB(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function df(e){return e.map(t=>t.read())}function Dy(e){e.forEach(t=>{t[0].write(t[1])})}var $t=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},Ir=class{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=jk(),s!=null&&(this.originalName=Kk(s),this.name=Xk(this.originalName)),this.rank=t.length}},CB=0,Yc=class{constructor(e,t){this.callArgs=t,this.id=CB++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let n of e.inboundLayers)n!=null&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},_B=0,We=class extends ne.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=_B++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let n=this.getClassName();t=ra(n)+"_"+Uc(n)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let n;if(e.batchInputShape!=null)n=e.batchInputShape;else if(e.inputShape!=null){let a=null;e.batchSize!=null&&(a=e.batchSize),n=[a].concat(e.inputShape)}this.batchInputShape=n;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new kr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new V(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return _n(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return _n(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new na(`Layer ${this.name} is not connected, no input to return.`);return _n(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new na(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new na(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return _n(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=mt(e),this.inputSpec==null||this.inputSpec.length===0)return;let t=mt(this.inputSpec);if(e.length!==t.length)throw new V(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let r=e[n],a=t[n];if(a==null)continue;let s=r.rank;if(a.ndim!=null&&s!==a.ndim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(a.maxNDim!=null&&s>a.maxNDim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(a.minNDim!=null&&s<a.minNDim)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(a.dtype!=null&&r.dtype!==a.dtype)throw new V(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){let i=r.shape;for(let o in a.axes){let u=Number(o),p=a.axes[o],l=u>=0?i[u]:i[i.length+u];if(p!=null&&[p,null].indexOf(l)===-1)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${p} but got shape ${i}.`)}}if(a.shape!=null)for(let i=0;i<a.shape.length;++i){let o=a.shape[i],u=r.shape[i];if(o!=null&&u!=null&&o!==u)throw new V(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=mt(e),r=!0;for(let s of n)if(!(s instanceof Ir)){r=!1;break}let a=!0;for(let s of n)if(s instanceof Ir){a=!1;break}if(r===a)throw new V("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ns(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);let s=[];for(let i of mt(e))s.push(i.shape);this.build(_n(s)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let s=this.call(e,t),i=mt(s),o=[];for(let u of i)n.indexOf(u)!==-1&&(u=u.clone()),o.push(u);if(s=_n(o),this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}else{let s=EB(e),i=this.computeOutputShape(s),o,u=$B(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?s[0]:s),i!=null&&i.length>0&&Array.isArray(i[0])?o=i.map((p,l)=>new Ir(u,p,this,mt(e),t,this.name,l)):o=new Ir(u,i,this,mt(e),t,this.name),this.addInboundNode(e,o,null,null,s,i,t),this._refCount++,this.activityRegularizer!=null)throw new Le("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return o}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{n!=null&&e[r]!=null&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new na(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);e.indexOf(n)===-1&&e.push(n)}if(e.length===1){let t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new na(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new kr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return kh(this.weights)}build(e){this.built=!0}getWeights(e=!1){return df(e?this.trainableWeights:this.weights)}setWeights(e){W(()=>{let t=this.weights;if(t.length!==e.length)throw new V(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;let n=[],r=df(t);for(let a=0;a<r.length;++a){let s=r[a],i=t[a],o=e[a];if(!v.arraysEqual(s.shape,o.shape))throw new V(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Dy(n)})}addWeight(e,t,n,r,a,s,i,o){if(this._addedWeightNames.indexOf(e)!==-1)throw new V(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),n==null&&(n="float32"),this.fastWeightInitDuringBuild&&(r=o!=null?o():gt("zeros"));let u=r.apply(t,n),p=new Qk(u,n,e,s,i);return u.dispose(),a!=null&&this.addLoss(()=>a.apply(p.read())),s==null&&(s=!0),s?this._trainableWeights.push(p):this._nonTrainableWeights.push(p),p}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=mt(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(n=>{if(n!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,n,r,a,s,i=null){let o=mt(e);t=mt(t),n=mt(n),r=mt(r),a=wh(a),s=wh(s);let u=[],p=[],l=[];for(let d of o)u.push(d.sourceLayer),p.push(d.nodeIndex),l.push(d.tensorIndex);new Yc({outboundLayer:this,inboundLayers:u,nodeIndices:p,tensorIndices:l,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let d=0;d<t.length;d++)t[d].sourceLayer=this,t[d].nodeIndex=this.inboundNodes.length-1,t[d].tensorIndex=d}getConfig(){let e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function EB(e){e=mt(e);let t=[];for(let n of e)t.push(n.shape);return _n(t)}function $B(e){return"float32"}function eI(e,t,n){if((t==null||n!=null&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),t.inboundNodes.length===0)return[e];{let r=t.inboundNodes[n];if(r.inboundLayers.length===0)return r.inputTensors;{let a=[];for(let s=0;s<r.inboundLayers.length;s++){let i=r.inputTensors[s],o=r.inboundLayers[s],u=r.nodeIndices[s],p=eI(i,o,u);for(let l of p)a.indexOf(l)===-1&&a.push(l)}return a}}}var gu=class extends We{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:Uc("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new V("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new V("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new V("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let r=new Ir(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Yc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new V(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};gu.className="InputLayer";ne.registerClass(gu);function tI(e){if(e.batchShape==null&&e.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(e.batchShape!=null&&e.shape!=null)throw new V("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;e.shape!=null&&t==null&&(t=[null].concat(e.shape));let n=e.dtype;return n==null&&(n="float32"),new gu({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function AB(e,t){if(e.dtype==null||e.dtype===t.dtype)return t;try{return se(t,e.dtype)}catch{throw new V(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}var ks=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ks)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(this.id2Value[e.id]==null)this.id2Value[e.id]=AB(e,t),this.name2Id[e.name]=e.id,n!=null&&(this.id2Mask[e.id]=n);else throw new V(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ir){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{let t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ir){if(this.id2Value[e.id]==null)throw new V(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{let t=this.name2Id[e];if(t==null)throw new V(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&_e(this.id2Mask)}},Ih=new Uk,Sh=new Uk;function FB(e){Ih!=null&&Ih.setMaxEntries(e),Sh!=null&&Sh.setMaxEntries(e)}function Bu(e,t,n,r){let a=n==null?!1:n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(m=>m.name),u=[],p=t.names();for(let m of o)p.indexOf(m)!==-1?u.push(t.getValue(m)):u.push(null);r!=null&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);let l=o.join(",")+"|"+t.names().sort().join(","),d=Ih.get(l),h;if(d==null){let m=RB(i,t);d=m.sorted,h=m.recipientCounts,Ih.put(l,d),Sh.put(l,h)}h={},a||Object.assign(h,Sh.get(l));let c=new ks(t);for(let m=0;m<d.length;++m){if(r!=null){let A=xh().numTensors;A>r.maxNumTensors&&(r.maxNumTensors=A),A<r.minNumTensors&&(r.minNumTensors=A)}let f=d[m],g=f.sourceLayer;if(g instanceof gu)continue;let y=[],b=[],x=[],w=!1;for(let A of f.inputs){let R=c.getValue(A),F=c.getMask(A);y.push(R),b.push(F),F!=null&&(w=!0),a||(h[A.name]--,h[A.name]===0&&!t.hasKey(A)&&o.indexOf(A.name)===-1&&!R.isDisposed&&A.sourceLayer.stateful!==!0&&x.push(R))}w&&(n=n||{},n.mask=b[0]);let I=mt(g.apply(y,n)),T=null;g.supportsMasking&&(T=g.computeMask(y,b));let C=MB(f),E=Array.isArray(C)?C:[C];for(let A=0;A<E.length;++A){c.hasKey(E[A])||c.add(E[A],I[A],Array.isArray(T)?T[0]:T);let R=o.indexOf(E[A].name);R!==-1&&(u[R]=I[A])}a||_e(x)}return c.disposeMasks(),s?u:u[0]}function RB(e,t){v.assert(e!=null&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(e.length===1){let a=ew(e[0],t);n=a.sorted,r=a.recipientMap}else{let a=new Set;for(let s of e){let{sorted:i,recipientMap:o}=ew(s,t);for(let u of i)a.has(u.name)||(n.push(u),a.add(u.name));for(let u in o)r[u]==null&&(r[u]=new Set),o[u].forEach(p=>r[u].add(p))}}return{sorted:n,recipientCounts:DB(r)}}function DB(e){let t={};for(let n in e)t[n]=e[n].size;return t}function ew(e,t){let n=new Set,r=[],a={};for(let o of t.names())n.add(o);let s=[],i=[];for(s.push(e);s.length>0;){let o=s[s.length-1];if(n.has(o.name)){s.pop();continue}let u=i[i.length-1]===s.length-1;if(o.inputs.length===0||u)s.pop(),r.push(o),n.add(o.name),u&&i.pop();else{i.push(s.length-1);for(let p of o.inputs)a[p.name]==null&&(a[p.name]=new Set),a[p.name].add(o.name),!n.has(p.name)&&s.push(p)}}return{sorted:r,recipientMap:a}}function MB(e){let t;if(e.sourceLayer.inboundNodes.length===1)t=e.sourceLayer.output;else{let n=null;for(let r=0;r<e.sourceLayer.inboundNodes.length;++r)for(let a of e.sourceLayer.inboundNodes[r].outputTensors)if(a.id===e.id){n=r;break}t=e.sourceLayer.getOutputAt(n)}return t}var OB=H();OB.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,FB);var nI={};Ee(nI,{maxNorm:()=>LB,minMaxNorm:()=>BB,nonNeg:()=>PB,unitNorm:()=>zB});function My(e,t){return W(()=>rn(ge(z(e,e),t,!0)))}var ud=class extends ne.Serializable{getConfig(){return{}}},Oy=class extends ud{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=My(e,this.axis),n=on(t,0,this.maxValue);return z(e,fe(n,J(Ot(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Oy.className="MaxNorm";ne.registerClass(Oy);var Ly=class extends ud{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>fe(e,J(Ot(),My(e,this.axis))))}getConfig(){return{axis:this.axis}}};Ly.className="UnitNorm";ne.registerClass(Ly);var zy=class extends ud{apply(e){return et(e)}};zy.className="NonNeg";ne.registerClass(zy);var Py=class extends ud{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return W(()=>{let t=My(e,this.axis),n=J(z(this.rate,on(t,this.minValue,this.maxValue)),z(1-this.rate,t));return z(e,fe(n,J(Ot(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Py.className="MinMaxNorm";ne.registerClass(Py);var tw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Pt(e){return Sy(e)}function nw(e,t={}){return sd(e,ne.SerializationMap.getMap().classNameMap,t,"constraint")}function Bt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in tw?tw[e]:e,config:{}};return nw(t)}else return e instanceof ud?e:nw(e)}function LB(e){return new Oy(e)}function zB(e){return new Ly(e)}function PB(){return new zy}function BB(e){return new Py(e)}var rI={};Ee(rI,{constant:()=>UB,glorotNormal:()=>ZB,glorotUniform:()=>XB,heNormal:()=>JB,heUniform:()=>YB,identity:()=>qB,leCunNormal:()=>QB,leCunUniform:()=>eW,ones:()=>VB,orthogonal:()=>tW,randomNormal:()=>HB,randomUniform:()=>GB,truncatedNormal:()=>jB,varianceScaling:()=>KB,zeros:()=>WB});function WB(){return new Cy}function VB(){return new Hc}function UB(e){return new _y(e)}function GB(e){return new Ey(e)}function HB(e){return new $y(e)}function jB(e){return new Ay(e)}function qB(e){return new Fy(e)}function KB(e){return new Fn(e)}function XB(e){return new jc(e)}function ZB(e){return new qc(e)}function JB(e){return new Kc(e)}function YB(e){return new Xc(e)}function QB(e){return new Zc(e)}function eW(e){return new Jc(e)}function tW(e){return new Ry(e)}var aI={};Ee(aI,{Layer:()=>We,RNN:()=>Zr,RNNCell:()=>md,activation:()=>E4,add:()=>z4,alphaDropout:()=>wV,average:()=>P4,averagePooling1d:()=>Zb,averagePooling2d:()=>Jb,averagePooling3d:()=>Yb,avgPool1d:()=>K4,avgPool2d:()=>Z4,avgPool3d:()=>Y4,avgPooling1d:()=>X4,avgPooling2d:()=>J4,avgPooling3d:()=>Q4,batchNormalization:()=>H4,bidirectional:()=>cV,categoryEncoding:()=>TV,centerCrop:()=>SV,concatenate:()=>B4,conv1d:()=>v4,conv2d:()=>w4,conv2dTranspose:()=>k4,conv3d:()=>I4,conv3dTranspose:()=>S4,convLstm2d:()=>uV,convLstm2dCell:()=>pV,cropping2D:()=>T4,dense:()=>$4,depthwiseConv2d:()=>_4,dot:()=>G4,dropout:()=>A4,elu:()=>m4,embedding:()=>L4,flatten:()=>R4,gaussianDropout:()=>vV,gaussianNoise:()=>xV,globalAveragePooling1d:()=>eV,globalAveragePooling2d:()=>tV,globalMaxPool1d:()=>fV,globalMaxPool2d:()=>gV,globalMaxPooling1d:()=>JI,globalMaxPooling2d:()=>YI,gru:()=>rV,gruCell:()=>aV,input:()=>kI,inputLayer:()=>c4,layerNormalization:()=>j4,leakyReLU:()=>g4,lstm:()=>sV,lstmCell:()=>iV,masking:()=>kV,maxPool1d:()=>yV,maxPool2d:()=>bV,maxPooling1d:()=>QI,maxPooling2d:()=>eS,maxPooling3d:()=>nV,maximum:()=>W4,minimum:()=>V4,multiply:()=>U4,permute:()=>O4,prelu:()=>y4,randomWidth:()=>CV,reLU:()=>f4,repeatVector:()=>D4,rescaling:()=>IV,reshape:()=>M4,resizing:()=>NV,rnn:()=>dV,separableConv2d:()=>N4,simpleRNN:()=>oV,simpleRNNCell:()=>lV,softmax:()=>b4,spatialDropout1d:()=>F4,stackedRNNCells:()=>hV,thresholdedReLU:()=>x4,timeDistributed:()=>mV,upSampling2d:()=>C4,zeroPadding2d:()=>q4});async function Sa(e){if(e==null)return;let t=[],n=[],r=[];for(let a in e){let s=e[a];if(typeof s!="number"){let i=s;t.push(i.data()),n.push(a),r.push(i)}}if(t.length>0){let a=await Promise.all(t);for(let s=0;s<a.length;++s)e[n[s]]=a[s][0];_e(r)}}function sI(e){if(e!=null)for(let t in e){let n=e[t];typeof n!="number"&&n.dispose()}}var rw;(function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"})(rw||(rw={}));var nW=125,Jo=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},iI=class{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},rW=class extends Jo{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});let n=t.size==null?0:t.size;this.seen+=n;for(let r in t){let a=t[r];if(typeof a=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+a*n;else{let s;r in this.totals?s=this.totals[r]:this.totals[r]=0;let i=W(()=>J(this.totals[r],z(a,n)));this.totals[r]=i,s!=null&&s.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(let n of this.params.metrics)this.totals[n]!=null&&(typeof this.totals[n]=="number"?t[n]=this.totals[n]/this.seen:W(()=>{let r=z(fe(1,this.seen),this.totals[n]);t[n]=r,this.totals[n].dispose(),Mt(t[n])}))}},oI=class extends Jo{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(let n in t)this.history[n]==null&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let s=this.history[a];for(let i=0;i<s.length;++i)if(typeof s[i]!="number"){let o=s[i];e.push(o.data()),t.push(a),n.push(i)}}let r=await Promise.all(e);for(let a=0;a<r.length;++a)this.history[t[a]][n[a]].dispose(),this.history[t[a]][n[a]]=r[a][0]}},lI=class extends Jo{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||ky,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=nW),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");v.isNumber(this.yieldEvery)&&(this.maybeWait=aB(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let r=[];this.yield!=null&&(await Sa(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await Sa(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];this.epochEnd!=null&&(await Sa(t),n.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){this.batchBegin!=null&&(await Sa(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];this.batchEnd!=null&&(await Sa(t),n.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?n.push(this.nextFrameFunc()):v.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){this.trainBegin!=null&&(await Sa(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await Sa(e),await this.trainEnd(e))}};function uI(e,t){return e==null&&(e={}),e instanceof Jo?[e]:Array.isArray(e)&&e[0]instanceof Jo?e:mt(e).map(n=>new lI(n,t))}var dr=class{constructor(){}static registerCallbackConstructor(e,t){v.assert(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),dr.checkForDuplicate(t),dr.constructors[e]==null&&(dr.constructors[e]=[]),dr.constructors[e].push(t)}static checkForDuplicate(e){for(let t in dr.constructors)dr.constructors[+t].forEach(n=>{if(n===e)throw new V("Duplicate callback constructor.")})}static clear(){dr.constructors={}}static createCallbacks(e){let t=[];for(let n in dr.constructors){let r=+n;e>=r&&t.push(...dr.constructors[r])}return t.map(n=>new n)}};dr.constructors={};function pI(e,t,n,r,a,s,i,o,u){let p=new oI,l=[new rW,...dr.createCallbacks(t)];e!=null&&l.push(...e),l.push(p);let d=new iI(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:p}}function Nr(e,t={},n=!1){return sd(e,ne.SerializationMap.getMap().classNameMap,t,"layer",n)}function Nh(e,t){return W(()=>{e.dtype!=="float32"&&(e=se(e,"float32"));let n=ge(od(e),t,!0),r=Un(n.shape,Ot()),a=rn(Kr(n,r));return fe(e,a)})}function xo(e,t){return W(()=>xt(od(he(t,e)),-1))}function Qc(e,t){return W(()=>xt(Et(he(t,e)),-1))}function yu(e,t){return W(()=>{let n=he(e,t),r=on(Et(e),Ot(),Number.MAX_VALUE),a=Et(fe(n,r));return z(100,xt(a,-1))})}function aW(e,t){return W(()=>{let n=on(t,Ot(),Number.MAX_VALUE),r=Hn(J(1,n)),a=on(e,Ot(),Number.MAX_VALUE),s=Hn(J(1,a));return xt(od(he(r,s)),-1)})}function sW(e,t){return W(()=>{let n=Kr(0,he(1,z(e,t)));return xt(od(n),-1)})}function iW(e,t){return W(()=>{let n=Kr(0,he(1,z(e,t)));return xt(n,-1)})}function oW(e,t){return W(()=>{let n=ge(z(e,t),-1),r=rr(z(he(1,e),t),-1);return Kr(0,J(1,he(r,n)))})}function lW(e,t){return W(()=>{let n=Math.log(2),r=he(t,e),a=he(J(r,go(z(-2,r))),n);return xt(a,-1)})}function lp(e,t,n=!1){return W(()=>{if(n)t=ts(t);else{let r=ge(t,t.shape.length-1,!0);t=fe(t,r)}return t=on(t,Ot(),1-Ot()),ht(ge(z(se(e,"float32"),Hn(t)),t.shape.length-1))})}function Th(e,t,n=!1){return W(()=>{let r=se(du(gB(e)),"int32");t=on(t,Ot(),1-Ot());let a=t.shape,s=P(Go(r,a[a.length-1]),a);return lp(s,t,n)})}function uW(e,t){if(!v.arraysEqual(e.shape,t.shape))throw new V(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return W(()=>{let n=et(t),r=ht(Et(t));return J(he(n,z(t,e)),Zp(gn(r)))})}function em(e,t){return W(()=>{let n;return n=on(t,Ot(),1-Ot()),n=Hn(fe(n,he(1,n))),xt(uW(e,n),-1)})}function pW(e,t){return W(()=>{let n=on(e,Ot(),1),r=on(t,Ot(),1);return ge(z(e,Hn(fe(n,r))),-1)})}function dW(e,t){return W(()=>{let n=Hn(J(Ot(),t));return xt(he(t,z(e,n)),-1)})}function By(e,t){return W(()=>{let n=Nh(e,-1),r=Nh(t,-1),a=z(n,r);return ht(ge(a,-1))})}var Ch={meanSquaredError:xo,meanAbsoluteError:Qc,meanAbsolutePercentageError:yu,meanSquaredLogarithmicError:aW,squaredHinge:sW,hinge:iW,categoricalHinge:oW,logcosh:lW,categoricalCrossentropy:lp,sparseCategoricalCrossentropy:Th,binaryCrossentropy:em,kullbackLeiblerDivergence:pW,poisson:dW,cosineProximity:By};function Rm(e){if(typeof e=="string"){if(e in Ch)return Ch[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new V(t)}else return e}function Wy(e,t){return W(()=>{let n=z(.5,jn(t)),r=ha(kn(t,n),e.dtype);return xt(Gn(e,r),-1)})}function Vy(e,t){return W(()=>ha(Gn(Ms(e,-1),Ms(t,-1)),"float32"))}function dI(e,t){return W(()=>se(ge(fr(Gn(e,1),Gn(t,1))),"float32"))}function hW(e,t){return W(()=>se(ge(fr(Gn(e,1),Gn(t,0))),"float32"))}function cW(e,t){return W(()=>se(ge(fr(Gn(e,0),Gn(t,1))),"float32"))}function hI(e,t){return W(()=>{let n=dI(e,t),r=cW(e,t),a=J(n,r);return se(qt(kn(a,0),fe(n,a),0),"float32")})}function mW(e,t){return W(()=>{let n=dI(e,t),r=hW(e,t),a=J(n,r);return se(qt(kn(a,0),fe(n,a),0),"float32")})}function cI(e,t){return em(e,t)}function mI(e,t){return e.rank===t.rank&&(e=ns(e,[e.rank-1])),t=Ms(t,-1),t.dtype!==e.dtype&&(t=se(t,e.dtype)),se(Gn(e,t),"float32")}var fW=xo,gW=xo,yW=Qc,bW=Qc,xW=yu,vW=yu,Uy=lp,wW=By,fI=Th,_h={binaryAccuracy:Wy,categoricalAccuracy:Vy,precision:hI,categoricalCrossentropy:Uy,sparseCategoricalCrossentropy:fI,mse:fW,MSE:gW,mae:yW,MAE:bW,mape:xW,MAPE:vW,cosine:wW};function kW(e){if(typeof e=="string"&&e in _h)return _h[e];if(typeof e!="string"&&e!=null)return e;throw new V(`Unknown metric ${e}`)}function Gd(e){if(Lr(e!==null,`Unknown LossOrMetricFn ${e}`),typeof e=="string")return e;{let t;for(let n of Object.keys(Ch))if(Ch[n]===e){t=n;break}if(t!==void 0)return t;for(let n of Object.keys(_h))if(_h[n]===e){t=n;break}return t!==void 0?t:e.name}}function IW(e){let t={Adagrad:()=>fs.adagrad(.01),Adadelta:()=>fs.adadelta(1,.95,Ot()),Adam:()=>fs.adam(.001,.9,.999,Ot()),Adamax:()=>fs.adamax(.002,.9,.999,Ot(),0),RMSProp:()=>fs.rmsprop(.001,.9,0,Ot()),SGD:()=>fs.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new V(`Unknown Optimizer ${e}`)}function aw(e,t,n=!1){if(e==null||typeof e!="object"||Object.getPrototypeOf(e)!==Object.prototype||!hf(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let r=JSON.stringify(e);r.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${r.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function hf(e){if(e===null)return!0;if(typeof e=="object")if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if(typeof n!="string"||!hf(e[n]))return!1;return!0}else if(Array.isArray(e)){for(let t of e)if(!hf(t))return!1;return!0}else return!1;else{let t=typeof e;return t==="string"||t==="number"||t==="boolean"}}function SW(e,t,n,r=console.log){let a=TW(e),s=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map(l=>Math.floor(t*l)));let i;if(!a){s.push("Receives inputs"),i=[];for(let l in e.nodesByDepth)i.push(...e.nodesByDepth[l])}r("_".repeat(t)),Eh(s,n,r),r("=".repeat(t));let o=e.layers;for(let l=0;l<o.length;++l)a?CW(o[l],n,r):_W(o[l],n,i,r),r((l===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let u=NW(e),p=kh(e.nonTrainableWeights);r(`Total params: ${u+p}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${p}`),r("_".repeat(t))}function NW(e){let t;return e.collectedTrainableWeights!=null?t=kh(e.collectedTrainableWeights):t=kh(e.trainableWeights),t}function TW(e){let t=!0,n=[],r=[];for(let a in e.nodesByDepth)n.push(e.nodesByDepth[a]);for(let a of n){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}r.push(...a)}if(t)for(let a of e.layers){let s=!1;for(let i of a.inboundNodes)if(r.indexOf(i)!==-1)if(s){t=!1;break}else s=!0;if(!t)break}return t}function Eh(e,t,n=console.log){let r="";for(let a=0;a<e.length;++a)a>0&&(r=r.slice(0,r.length-1)+" "),r+=e[a],r=r.slice(0,t[a]),r+=" ".repeat(t[a]-r.length);n(r)}function CW(e,t,n){let r,a;try{a=e.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{a="multiple"}try{r=JSON.stringify(e.outputShape)}catch{r="multiple"}let s=e.name,i=e.getClassName(),o=[`${s} (${i})`,a,r,e.countParams().toString()];Eh(o,t,n)}function _W(e,t,n,r){let a,s;try{s=e.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{s="multiple"}try{a=JSON.stringify(e.outputShape)}catch{a="multiple"}let i=[];for(let d of e.inboundNodes)if(!(n!=null&&n.length>0&&n.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){let c=d.inboundLayers[h].name,m=d.nodeIndices[h],f=d.tensorIndices[h];i.push(`${c}[${m}][${f}]`)}let o=e.name,u=e.getClassName(),p=i.length===0?"":i[0],l=[`${o} (${u})`,s,a,e.countParams().toString(),p];Eh(l,t,r);for(let d=1;d<i.length;++d)Eh(["","","","",i[d]],t,r)}function gI(e,t,n){return(e==="inboundNodes"||e==="outputLayers"||e==="inputLayers")&&t===0&&typeof n=="string"}function up(e,t){if(e===null)return null;if(typeof e=="string")return bs(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];gI(t,a,s)?n.push(s):n.push(up(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r];if(r==="name"&&typeof a=="string")n[r]=a;else{let s=bs(r);n[s]=up(a,s)}}return n}}function cf(e,t){if(e==null)return null;if(typeof e=="string")return ra(e);if(typeof e=="number"||typeof e=="boolean")return e;if(e instanceof Array){let n=[],r=e.length;for(let a=0;a<r;++a){let s=e[a];gI(t,a,s)?n.push(s):n.push(cf(s,t))}return n}else{let n={};for(let r of Object.keys(e)){let a=e[r],s=ra(r);(r==="name"||r==="className")&&typeof a=="string"?n[s]=a:n[s]=cf(a,r)}return n}}var Gy="4.7.0",Dr=class extends We{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){let y=this.getClassName().toLowerCase();this.name=Uc(y)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ra(this.inputs).length!==this.inputs.length)throw new V(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(y=>y.name)}`);Ra(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(y=>y.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let y of this.outputs){let b=y.sourceLayer,x=y.nodeIndex,w=y.tensorIndex;this.outputLayers.push(b),this.outputLayersNodeIndices.push(x),this.outputLayersTensorIndices.push(w)}for(let y of this.inputs){let b=y.sourceLayer,x=y.nodeIndex,w=y.tensorIndex;Lr(x===0,"input layer has >1 nodes"),Lr(w===0,"input layer has >1 tensors"),this.inputLayers.push(b),this.inputLayersNodeIndices.push(x),this.inputLayersTensorIndices.push(w)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let y=0;y<this.inputLayers.length;y++){let b=this.inputLayers[y];if(!(b instanceof gu))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${y} (0-based) originates from layer type ${b.getClassName()}.`);this.inputNames.push(b.name),this.feedInputShapes.push(b.batchInputShape),this.feedInputNames.push(b.name)}for(let y of this.outputLayers)this.outputNames.push(y.name);this.internalInputShapes=this.inputs.map(y=>y.shape),this.internalOutputShapes=this.outputs.map(y=>y.shape);let t={},n={},r={},a={},s={},i=[],o=(y,b,x,w,I,T)=>{(w==null||I==null||T==null)&&(w=y.sourceLayer,I=y.nodeIndex,T=y.tensorIndex);let C=w.inboundNodes[I];if(x.indexOf(C)!==-1)throw new kr(`The tensor ${y.name} at layer "${w.name}" is part of a cycle.`);if(b.indexOf(C)!==-1)return;this.containerNodes.add(Dr.nodeKey(w,I)),w.id in s||(s[w.id]=Object.keys(s).length),x.indexOf(C)===-1&&x.push(C);let E=C.inboundLayers.length;for(let A=0;A<E;A++){let R=C.inputTensors[A],F=C.inboundLayers[A],S=C.nodeIndices[A],M=C.tensorIndices[A];o(R,b,x,F,S,M)}for(b.push(C);x.indexOf(C)>=0;)x.splice(x.indexOf(C),1);i.push(C)},u=[],p=[];for(let y of this.outputs)o(y,u,p);let l=i.slice().reverse();for(let y of l){n[y.id]=y,y.id in t||(t[y.id]=0);let b=t[y.id],x=r[y.outboundLayer.id]==null?0:r[y.outboundLayer.id];b=Math.max(b,x),r[y.outboundLayer.id]=b,a[y.outboundLayer.id]=y.outboundLayer,t[y.id]=b;for(let w=0;w<y.inboundLayers.length;w++){let I=y.inboundLayers[w],T=y.nodeIndices[w],C=I.inboundNodes[T],E=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(b+1,E),n[C.id]=C}}let d={};for(let y in t){let b=t[y];b in d||(d[b]=[]),d[b].push(n[y])}let h={};for(let y in r){let b=r[y];b in h||(h[b]=[]),h[b].push(a[y])}let c=Object.keys(h).map(y=>parseInt(y,10)).sort(Wd);this.layers=[];for(let y of c){let b=h[y];b.sort((x,w)=>{let I=s[x.id],T=s[w.id];return I<T?-1:I>T?1:0});for(let x of b)x instanceof Dr&&this.internalContainerRefs.push(x),this.layers.push(x)}this.layersByDepth=h,c=Object.keys(d).map(y=>parseInt(y,10)).sort(Wd);let m=this.inputs.slice(),f=[];for(let y of c)for(let b of d[y]){let x=b.outboundLayer;if(x!=null){for(let w of b.inputTensors)if(m.indexOf(w)===-1)throw new kr(`Graph disconnected: cannot obtain value for tensor ${w} at layer "${x.name}". The following previous layers were accessed without issue: ${f}`);for(let w of b.outputTensors)m.push(w);f.push(x.name)}}this.nodesByDepth=d;let g=this.layers.map(y=>y.name);for(let y of g){let b=g.filter(x=>x===y).length;if(b!==1)throw new kr(`The name "${y}" is used ${b} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Yc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(y=>null),outputMasks:this.outputs.map(y=>null),inputShapes:this.inputs.map(y=>y.shape),outputShapes:this.outputs.map(y=>y.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(n=>n.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new V("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.layers)t.push(...n.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},r=0;for(let s of this.layers)for(let i of s.weights){if(n[i.originalName]!=null)throw new V(`Duplicate weight name: ${i.originalName}`);n[i.originalName]=i,r++}let a=[];for(let s in e){let i=s;if(n[s]==null){let o=s.split("/");i=o.slice(0,-2).concat([o[o.length-1]]).join("/")}if(n[i]!=null)a.push([n[i],e[s]]);else if(t)throw new V(`Provided weight data has no target variable: ${s}`);delete n[i]}if(t){let s=[];for(let i in n)s.push(i);if(s.length>0)throw new V(`${s.length} of ${r} weights are not set: ${s}`)}Dy(a)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Gy}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=cf(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return W(()=>{e=mt(e);let n=new ks;for(let r=0;r<this.inputs.length;++r)n.add(this.inputs[r],e[r]);return Bu(this.outputs,n,t)})}computeMask(e,t){return W(()=>{e=mt(e);let n;return t==null?n=Ws(null,e.length):n=mt(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){let t=wh(e);if(t.length!==this.inputLayers.length)throw new V(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let i=0;i<t.length;i++){let o=this.inputLayers[i],u=t[i],p=o.name+"_0_0";n[p]=u}let r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(Wd);if(r.length>1)for(let i of r){let o=this.nodesByDepth[i];for(let u of o){let p=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(p.id)!==-1)continue;let l=[];for(let m=0;m<u.inboundLayers.length;m++){let f=u.inboundLayers[m],g=u.nodeIndices[m],y=u.tensorIndices[m],b=`${f.name}_${g}_${y}`,x=n[b];l.push(x)}let d=p.computeOutputShape(_n(l)),h=wh(d),c=p.inboundNodes.indexOf(u);for(let m=0;m<h.length;m++){let f=`${p.name}_${c}_${m}`;n[f]=h[m]}}}let a=[],s=[];for(let i=0;i<this.outputLayers.length;i++){let o=this.outputLayers[i],u=this.outputLayersNodeIndices[i],p=this.outputLayersTensorIndices[i],l=`${o.name}_${u}_${p}`;s.push(l)}for(let i=0;i<s.length;i++){let o=s[i];Lr(o in n),a.push(n[o])}return _n(a)}runInternalGraph(e,t){t==null&&(t=Ws(null,e.length));let n={};for(let o=0;o<this.inputs.length;++o){let u=this.inputs[o],p=e[o],l=t[o];n[u.id]=[p,l]}let r=Object.keys(this.nodesByDepth).map(o=>parseInt(o,10)).sort(Wd);for(let o of r){let u=this.nodesByDepth[o];for(let p of u){let l=p.outboundLayer,d=p.inputTensors,h=p.outputTensors,c=new Array;for(let m of d)m.id in n&&c.push(n[m.id]);if(c.length===d.length){let m={},f,g,y,b;if(p.callArgs!=null&&(m=p.callArgs),c.length===1){let[x,w]=c[0];m.mask==null&&(m.mask=w),y=mt(l.call(x,m)),b=mt(l.computeMask(x,w)),f=[x],g=[w]}else f=c.map(x=>x[0]),g=c.map(x=>x[1]),m.mask==null&&(m.mask=g),y=mt(l.call(f,m)),b=mt(l.computeMask(f,g));if(l.activityRegularizer)throw new Le("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let x=0;x<h.length;++x){let w=h[x],I=y[x],T=b[x];n[w.id]=[I,T]}}}}let a=[],s=[],i=[];for(let o of this.outputs){Lr(o.id in n,`Could not compute output ${o.name} : ${o.id}`);let[u,p]=n[o.id];i.push(u.shape),a.push(u),s.push(p)}return[a,s,i]}buildNodeConversionMap(e){let t={},n;for(let r of this.layers){n=r instanceof Dr?1:0;for(let a=0;a<r.inboundNodes.length;a++){let s=Dr.nodeKey(r,a);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(t!=null)return this.findLayer(t);if(e==null)throw new V("Provide either a layer name or layer index");if(typeof e=="number")return this.findLayer(e);for(let n of this.layers)if(n.name===e)return n;throw new V(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new V(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return W(()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let r=Dr.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let s of this.layers){let i=s.getClassName(),o=s.getConfig(),u=[];for(let l=0;l<s.inboundNodes.length;l++){let d=s.inboundNodes[l],h=Dr.nodeKey(s,l),c={};if(this.containerNodes.has(h)){if(d.callArgs)try{JSON.stringify(d.callArgs),c=d.callArgs}catch{console.warn(`Layer ${s.name} was passed non-serializable keyword arguments: ${d.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),c={}}if(d.inboundLayers.length>0){let m=[];for(let f=0;f<d.inboundLayers.length;f++){let g=d.inboundLayers[f],y=d.nodeIndices[f],b=d.tensorIndices[f],x=Dr.nodeKey(g,y),w=t[x];w==null&&(w=0),m.push([g.name,w,b,c])}u.push(m)}}}let p={};p.name=s.name,p.className=i,p.config=o,p.inboundNodes=u,n.push(p)}e.layers=n;let r=[];for(let s=0;s<this.inputLayers.length;s++){let i=this.inputLayers[s],o=this.inputLayersNodeIndices[s],u=Dr.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let p=t[u];p==null&&(p=0);let l=this.inputLayersTensorIndices[s];r.push([i.name,p,l])}e.inputLayers=r;let a=[];for(let s=0;s<this.outputLayers.length;s++){let i=this.outputLayers[s],o=this.outputLayersNodeIndices[s],u=Dr.nodeKey(i,o);if(!this.containerNodes.has(u))continue;let p=t[u];p==null&&(p=0);let l=this.outputLayersTensorIndices[s];a.push([i.name,p,l])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){let a={},s={};function i(f,g){f.name in s?s[f.name].push(g):s[f.name]=[g]}function o(f,g){let y=[],b;for(let x of g){let w=x[0],I=x[1],T=x[2];if(b=x[3]==null?{}:x[3],!(w in a)){i(f,g);return}let C=a[w];if(C.inboundNodes.length<=I){i(f,g);return}let E=C.inboundNodes[I];y.push(E.outputTensors[T])}y.length>0&&f.apply(_n(y),b)}function u(f){let g=f.name,y=Nr(f,t.customObjects!=null?t.customObjects:{});y.setFastWeightInitDuringBuild(r),a[g]=y,f.inboundNodes.forEach(b=>{if(!(b instanceof Array))throw new V(`Corrupted configuration, expected array for nodeData: ${b}`);i(y,b)})}let p=t.name,l=t.layers;for(let f of l)u(f);for(;!rB(s);)for(let f of l){let g=a[f.name];if(g.name in s){let y=s[g.name];delete s[g.name];for(let b of y)o(g,b)}}let d=[],h=[],c=t.inputLayers;for(let f of c){let g=f[0],y=f[1],b=f[2];Lr(g in a);let x=a[g].inboundNodes[y].outputTensors;d.push(x[b])}let m=t.outputLayers;for(let f of m){let g=f[0],y=f[1],b=f[2];Lr(g in a);let x=a[g].inboundNodes[y].outputTensors;h.push(x[b])}return new e({inputs:d,outputs:h,name:p})}get stateful(){if(this._stateful)throw new V("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){W(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}};function EW(e,t,n){let r=t.length;if(e==null||Array.isArray(e)&&e.length===0)return t.map(a=>null);if(r===1)return Array.isArray(e)&&e.length===1?e:typeof e=="object"&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}else if(typeof e=="object"&&Object.keys(e).length>0&&typeof e[Object.keys(e)[0]]=="object"){let a=[];return t.forEach(s=>{s in e?a.push(e[s]):a.push(null)}),a}else throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function yI(e,t){return EW(e,t,"classWeight")}async function bI(e,t,n,r){if(t!=null||r!=null)throw new Error("Support sampleWeight is not implemented yet");if(n!=null){let a=W(()=>{if(e.shape.length===1)return Br(e);if(e.shape.length===2){if(e.shape[1]>1)return Ms(e,1);if(e.shape[1]===1)return P(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),s=Array.from(await a.data());_e(a);let i=[];return s.forEach(o=>{if(n[o]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${o} exists in the data but not in classWeight`);i.push(n[o])}),Qe(i,"float32")}else return null}function $W(e,t){return z(e,t)}var AW=32;function xI(e,t){let n,r,a=t;n=a.xs,r=a.ys,v.assert(n!=null&&r!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);let s=sw("input",e.inputNames,n),i=sw("output",e.outputNames,r),o=s[0].shape[0];v.assert(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),v.assert(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let u=0;u<s.length;u++)v.assert(s[u].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[u]} has ${s[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let u=0;u<i.length;u++)v.assert(i[u].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[u]} has ${i[u].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function sw(e,t,n){if(n instanceof Ae)return[n];if(Array.isArray(n))return v.assert(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{let r=[];for(let a of t){if(n[a]==null)throw new V(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function FW(e){if(e.length===3)throw new Le("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function RW(e,t,n){let r=n.batchesPerEpoch!=null;if(v.assert(e.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v.assert(n!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v.assert(n.epochs!=null&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),v.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),v.assert(n.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let a=n.validationData!=null,s,i;if(a)if(iw(n.validationData))v.assert(n.validationBatches==null||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{let g=FW(n.validationData);s=g.xs,i=g.ys}let o=e.makeTrainFunction(),u=e.getDedupedMetricsNames(),p;a?p=u.slice().concat(u.map(g=>"val_"+g)):p=u.slice();let l=uI(n.callbacks,n.yieldEvery),d=n.verbose==null?1:n.verbose,{callbackList:h,history:c}=pI(l,d,n.epochs,null,null,DW(t,n),null,a,p);h.setModel(e),e.history=c,await h.onTrainBegin(),e.stopTraining_=!1;let m=n.initialEpoch==null?0:n.initialEpoch,f=await t.iterator();for(;m<n.epochs;){let g={};await h.onEpochBegin(m);let y=0,b=0;for(r||(f=await t.iterator());!r||y<n.batchesPerEpoch;){let x=await f.next();if(r&&x.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${y} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(x.value!=null){let{xs:w,ys:I}=xI(e,x.value),T={};T.batch=b,T.size=w[0].shape[0],await h.onBatchBegin(b,T);let C=[];if(n.classWeight!=null){let R=yI(n.classWeight,e.outputNames);for(let F=0;F<R.length;++F)C.push(await bI(I[F],null,R[F]))}let E=w.concat(I).concat(C),A=o(E);_e(E);for(let R=0;R<u.length;++R){let F=u[R],S=A[R];T[F]=S,Mt(S)}await h.onBatchEnd(b,T),sI(T),b++,y++}if(r?y>=n.batchesPerEpoch:x.done){if(a){let w;iw(n.validationData)?w=mt(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):w=mt(e.evaluate(s,i,{batchSize:n.validationBatchSize==null?AW:n.validationBatchSize,verbose:0}));for(let I=0;I<e.metricsNames.length;++I)g[`val_${e.metricsNames[I]}`]=w[I]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(m,g),m++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function DW(e,t){let n=null;return t.batchesPerEpoch!=null?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function iw(e){return typeof e.iterator=="function"}function MW(e){return typeof e.next=="function"}async function OW(e,t,n){n=n||{};let r=n.batches!=null,a=e.testFunction,s=[];if(n.verbose>0)throw new Le("Verbose mode is not implemented yet.");v.assert(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);let i=MW(t)?t:await t.iterator(),o=0,u=0;for(;!r||u<n.batches;){let p=await i.next();if(s=W(()=>{if(p.value){let{xs:l,ys:d}=xI(e,p.value),h=l.concat(d),c=W(()=>a(h));if(_e(h),u===0)for(let f=0;f<c.length;++f)s.push(we(0));let m=h[0].shape[0];for(let f=0;f<c.length;++f){let g=c[f],y=s[f];s[f]=W(()=>J(s[f],z(m,g))),u>0&&_e(y)}_e(c),o+=m,++u}return s}),p.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let p=0;p<s.length;++p){let l=s[p];s[p]=fe(s[p],o),_e(l)}return _n(s)}function Dm(e){v.assert(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Du(e,t,n){return e==null?[null]:Array.isArray(e)?e.map(r=>Ts(r,t,n-t)):Ts(e,t,n-t)}function mf(e,t){return W(()=>e==null?null:Array.isArray(e)?e.map(n=>mf(n,t)):Jk(e,t.dtype==="int32"?t:se(t,"int32")))}function Mm(e,t){let n=[],r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function vI(e){let t=[];e instanceof Ae&&(e=[e]);for(let n=0;n<e.length;++n){let r=e[n];if(r.rank===1)t.push(id(r,1));else{if(r.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function vr(e,t){if(e==null)return;let n=[];if(t instanceof Ae)n.push(t.id);else if(Array.isArray(t))t.forEach(a=>n.push(a.id));else if(t!=null)for(let a in t){let s=t[a];n.push(s.id)}let r=[];if(e instanceof Ae)n.indexOf(e.id)===-1&&r.push(e);else if(Array.isArray(e))e.forEach(a=>{n.indexOf(a.id)===-1&&r.push(a)});else if(e!=null)for(let a in e){let s=e[a];n.indexOf(s.id)===-1&&r.push(s)}r.forEach(a=>{a.isDisposed||a.dispose()})}function LW(e){return e instanceof Ae}function ff(e){return Array.isArray(e)}function ow(e){return!LW(e)&&!ff(e)}function lw(e,t,n,r=!0,a=""){if(t==null||t.length===0){if(e!=null){let i=!1;if(ff(e)&&e.length>0)i=!0;else if(ow(e)){for(let o in e)if(e.hasOwnProperty(o)){i=!0;break}}else i=!0;if(i)throw new V(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(e==null)return t.map(i=>null);let s;if(ow(e)){e=e,s=[];for(let i of t){if(e[i]==null)throw new V(`No data provided for "${i}". Need data for each key in: ${t}`);s.push(e[i])}}else if(ff(e)){if(e=e,e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new V(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=vI(s),n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s). but got array with shape ${o.shape}`);for(let u=0;u<n[i].length;++u){if(u===0&&!r)continue;let p=o.shape[u],l=n[i][u];if(l!=null&&l>=0&&p!==l)throw new V(`${a} expected a batch of elements where each example has shape [${n[i].slice(1,n[i].length)}] (i.e.,tensor shape [*,${n[i].slice(1,n[i].length)}]) but the ${a} received an input with ${o.shape[0]} examples, each with shape [${o.shape.slice(1,o.shape.length)}] (tensor shape [${o.shape}])`)}}return s}function zW(e,t,n){let r=Ra(e.map(s=>s.shape[0]));r.sort();let a=Ra(t.map(s=>s.shape[0]));if(a.sort(),r.length>1)throw new V(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(s=>s.shape))}`);if(a.length>1)throw new V(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(s=>s.shape))}`);if(r.length>0&&a.length>0&&!v.arraysEqual(r,a))throw new V(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}function PW(e,t,n){let r=[xo,em,lp];for(let a=0;a<e.length;++a){let s=e[a],i=t[a],o=n[a];if(i!=null){if(i===lp&&s.shape[s.shape.length-1]===1)throw new V(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(r.indexOf(i)!==-1){let u=s.shape.slice(1),p=o.slice(1);for(let l=0;l<u.length;++l){let d=u[l],h=p[l];if(h!=null&&d!==h)throw new V(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function uw(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new V(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new V(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(n!=null)for(let i=0;i<t.length;++i){if(n[i]==null)continue;let o=s[i];if(o.shape.length!==n[i].length)throw new V(`Error when checking ${a}: expected ${t[i]} to have ${n[i].length} dimension(s), but got array with shape ${JSON.stringify(o.shape)}`);for(let u=0;u<n[i].length;++u){if(u===0&&!r)continue;let p=o.shape[u],l=n[i][u];if(l!=null&&l!==p)throw new V(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(n[i])} but got array with shape ${JSON.stringify(o.shape)}.`)}}}function BW(e,t){if(e==null||Array.isArray(e)&&e.length===0)return t.map(r=>[]);let n;if(typeof e=="string"||typeof e=="function")n=[e];else if(Array.isArray(e)||typeof e=="object")n=e;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);if(Array.isArray(n))return t.map(r=>n);{let r=[];for(let a of t){let s=n.hasOwnProperty(a)?n[a]:[];Array.isArray(s)||(s=[s]),r.push(s)}return r}}var WW="layers-model",la=class extends Dr{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new V("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");SW(this,e,t,n)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=IW(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof ya))throw new V("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(let s in e.loss)if(this.outputNames.indexOf(s)===-1)throw new V(`Unknown entry in loss dictionary: "${s}". Only expected the following keys: ${this.outputNames}`);for(let s of this.outputNames)e.loss[s]==null&&console.warn(`Output "${s}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${s} during training`),t.push(Rm(e.loss[s]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new V(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(s=>Rm(s))}else{let s=Rm(e.loss);this.outputs.forEach(i=>{t.push(s)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let s=0;s<this.outputs.length;++s){let i=this.internalOutputShapes[s],o=this.outputNames[s];this.feedOutputNames.push(o),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[s])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ns("loss",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=this.lossFunctions[s];this.outputs.length>1&&(this.metricsTensors.push([i,s]),this.metricsNames.push(this.outputNames[s]+"_loss"))}});let r=BW(e.metrics,this.outputNames),a=(s,i,o)=>{this.outputNames.length>1&&(i=this.outputNames[s]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([o,s])};Ns("metric",()=>{for(let s=0;s<this.outputs.length;++s){if(n.indexOf(s)!==-1)continue;let i=r[s];(o=>{let u="",p,l,d;for(let h of o){if(typeof h=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(h)!==-1){let m=this.internalOutputShapes[s];m[m.length-1]===1||this.lossFunctions[s]===em?["accuracy","acc"].indexOf(h)!==-1?l=Wy:["crossentropy","ce"].indexOf(h)!==-1&&(l=cI):this.lossFunctions[s]===Th?["accuracy","acc"].indexOf(h)!==-1?l=mI:["crossentropy","ce"].indexOf(h)!==-1&&(l=fI):["accuracy","acc"].indexOf(h)!==-1?l=Vy:["crossentropy","ce"].indexOf(h)!==-1&&(l=Uy);let f;["accuracy","acc"].indexOf(h)!==-1?f="acc":["crossentropy","ce"].indexOf(h)!==-1&&(f="ce"),d=l,p=u+f}else d=kW(h),p=u+Gd(h);let c;Ns(p,()=>{c=d}),a(s,p,c)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let r=n.batchSize==null?32:n.batchSize;Dm(r);let a=!0,s=this.standardizeUserDataXY(e,t,a,r);try{let i=s[0].concat(s[1]);this.makeTestFunction();let o=this.testFunction,u=this.testLoop(o,i,r,n.verbose,n.steps);return _n(u)}finally{vr(s[0],e),vr(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),OW(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(n!=null){if(a=null,t!=null)throw new V(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?a=e[0].shape[0]:a=e.shape[0];else throw new V(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return a}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new V("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new ks;if(e instanceof Ae&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new V(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o])}else for(let o of this.inputs){let u=e[o.name];if(u==null)throw new V(`No value is provided for the model's input ${o.name}`);s.add(o,u)}let i=Bu(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=Ws(null,e.length),n=e.length;for(let r of this.layers){let a=Array.isArray(r.output)?r.output:[r.output],s=a.map(i=>i.name);for(let i=0;i<e.length;++i){let o=s.indexOf(e[i]);if(o!==-1&&(t[i]=a[o],n--),n===0)break}if(n===0)break}if(n>0){let r=[];throw t.forEach((a,s)=>{a==null&&r.push(e[s])}),new V(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,n=!1){return W(()=>{let r=this.checkNumSamples(e);if(n)throw new Le("Verbose predictLoop() is not implemented yet.");let a=Mm(r,t),s=this.outputs.map(i=>[]);for(let i=0;i<a.length;++i)W(()=>{let o=a[i][0],u=a[i][1],p=Du(e,o,u),l=[];if(Array.isArray(p))for(let h=0;h<p.length;++h)l.push({key:this.inputs[h],value:p[h]});else l.push({key:this.inputs[0],value:p});let d=new ks(l);return Bu(this.outputs,d)}).forEach((o,u)=>s[u].push(o));return _n(s.map(i=>at(i,0)))})}predict(e,t={}){let n=vI(e);uw(n,this.inputNames,this.feedInputShapes,!1);try{let r=t.batchSize==null?32:t.batchSize;return Dm(r),this.predictLoop(n,r)}finally{vr(n,e)}}predictOnBatch(e){uw(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(this.optimizer_==null)throw new kr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let a=[];for(let s=0;s<this.feedOutputShapes.length;++s){let i=this.feedOutputShapes[s];this.feedLossFns[s]===Th?a.push(i.slice(0,i.length-1).concat([1])):a.push(i)}if(e=lw(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=lw(t,this.feedOutputNames,a,!1,"target"),zW(e,t),PW(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new V(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,a,s);if(n!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){let p=yI(r,this.outputNames);u=[];for(let l=0;l<p.length;++l)u.push(await bI(o[l],null,p[l]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return W(()=>{let s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Le("Verbose mode is not implemented yet.");if(a!=null)throw new Le("steps mode in testLoop() is not implemented yet");{let o=Mm(s,n),u=Qe(Cr(0,s));for(let p=0;p<o.length;++p){let l=o[p][0],d=o[p][1],h=Ts(u,l,d-l),c=mf(t,h),m=e(c);if(p===0)for(let f=0;f<m.length;++f)i.push(we(0));for(let f=0;f<m.length;++f){let g=m[f];i[f]=J(i[f],z(d-l,g))}}for(let p=0;p<i.length;++p)i[p]=fe(i[p],s)}return i})}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let r=e[n],a=r;if(Kv(e,r)>1){let s=Kv(e.slice(0,n),r);a+=`_${s}`}t.push(a)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),s=[],i=()=>{let p=[];for(let c=0;c<this.inputs.length;++c)p.push({key:this.inputs[c],value:n[c]});let l=new ks(p),d=Bu(this.outputs,l,{training:!0}),h;for(let c=0;c<this.lossFunctions.length;++c){let m=this.lossFunctions[c],f=m(r[c],d[c]);a[c]!=null&&(f=$W(f,a[c]));let g=xt(f);t.push(g),c===0?h=f:h=J(h,f)}for(let c=0;c<this.metricsTensors.length;++c){let m;if(this.outputs.length>1&&c<this.outputs.length)m=t[c];else{let f=this.metricsTensors[c][0],g=this.metricsTensors[c][1];m=xt(f(r[g],d[g]))}Mt(m),s.push(m)}return h=xt(h),this.calculateLosses().forEach(c=>{h=J(h,c)}),h},o=this.collectedTrainableWeights.map(p=>p.read()),u=!0;return[this.optimizer_.minimize(i,u,o)].concat(s)}}makeTestFunction(){this.testFunction=e=>W(()=>{let t=[],n,r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let u=0;u<this.inputs.length;++u)s.push({key:this.inputs[u],value:r[u]});let i=new ks(s),o=Bu(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){let p=this.lossFunctions[u],l=xt(p(a[u],o[u]));u===0?n=l:n=J(n,l),t.push(n)}for(let u=0;u<this.metricsTensors.length;++u){let p=this.metricsTensors[u][0],l=this.metricsTensors[u][1],d=xt(p(a[l],o[l]));t.push(d)}return t})}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,a,s,i,o,u,p,l,d;try{let h=n.batchSize==null?32:n.batchSize;Dm(h);let c=!1,m=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,c,h);r=m[0],a=m[1],d=m[2];let f=!1,g;if(n.validationData!=null&&n.validationData.length>0){if(f=!0,n.validationData.length===2)o=n.validationData[0],u=n.validationData[1];else throw n.validationData.length===3?new Le("validationData including sample weights is not supported yet."):new V(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);let C=!0,E=await this.standardizeUserData(o,u,null,null,C,h);p=E[0],l=E[1],g=p.concat(l)}else if(n.validationSplit!=null&&n.validationSplit>0&&n.validationSplit<1){f=!0;let C=Math.floor(r[0].shape[0]*(1-n.validationSplit)),E=r[0].shape[0];p=Du(r,C,E),s=r,r=Du(r,0,C),l=Du(a,C,E),i=a,a=Du(a,0,C),g=p.concat(l)}else n.validationSteps!=null&&(f=!0);let y=r.concat(a).concat(d);this.checkTrainableWeightsConsistency();let b=this.makeTrainFunction(),x=this.getDedupedMetricsNames(),w,I;f?(this.makeTestFunction(),w=this.testFunction,I=x.slice().concat(x.map(C=>"val_"+C))):(w=null,g=[],I=x.slice());let T=uI(n.callbacks,n.yieldEvery);return await this.fitLoop(b,y,x,h,n.epochs,n.verbose,T,w,g,n.shuffle,I,n.initialEpoch,null,null)}finally{this.isTraining=!1,vr(r,e),vr(a,t),vr(s,e),vr(i,t),vr(p,o),vr(l,u),d!=null&&_e(d)}}async fitLoop(e,t,n,r,a,s,i,o,u,p,l,d,h,c){r==null&&(r=32),a==null&&(a=1),p==null&&(p=!0),d==null&&(d=0);let m=!1;if(o!=null&&u!=null&&(m=!0),c!=null&&(m=!0,h==null))throw new V("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let f=this.checkNumSamples(t,r,h,"steps_per_epoch"),g;f!=null&&(g=Cr(0,f)),s==null&&(s=1);let{callbackList:y,history:b}=pI(i,s,a,d,f,h,r,m,l);y.setModel(this),this.history=b,await y.onTrainBegin(),this.stopTraining_=!1;for(let x=d;x<a;++x){await y.onEpochBegin(x);let w={};if(h!=null)throw new Le("stepsPerEpoch mode is not implemented yet.");{if(p==="batch")throw new Le("batch shuffling is not implemneted yet");p&&v.shuffle(g);let I=Qe(g),T=Mm(f,r);for(let C=0;C<T.length;++C){let E={};if(await y.onBatchBegin(C,E),W(()=>{let A=T[C][0],R=T[C][1],F=Ts(I,A,R-A);E.batch=C,E.size=R-A;let S=mf(t,F),M=e(S);for(let B=0;B<n.length;++B){let U=n[B],G=M[B];E[U]=G,Mt(G)}if(C===T.length-1&&m){let B=this.testLoop(o,u,r);for(let U=0;U<n.length;++U){let G=n[U],K=B[U];Mt(K),w["val_"+G]=K}}}),await y.onBatchEnd(C,E),sI(E),this.stopTraining_)break}I.dispose()}if(await y.onEpochEnd(x,w),this.stopTraining_)break}return await y.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return RW(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(let o of s){let u=await o.data();i.push(u[0])}return _e(s),vr(n[0],e),vr(n[1],t),_n(i)}getNamedWeights(e){let t=[],n=e!=null&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let s=0;s<r.length;++s)n&&!r[s].trainable||t.push({name:r[s].originalName,tensor:a[s]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){let t=xh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-xh().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=ra(this.loss);else if(Array.isArray(this.loss)){for(let t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>ra(t))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let r of t)if(typeof n[r]=="string")e[r]=ra(n[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[ra(Gd(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>ra(Gd(e)));{let e={};for(let t in this.metrics)e[t]=ra(Gd(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");let t=up(e.optimizer_config),n=Nr(t),r;if(typeof e.loss=="string")r=bs(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(s=>bs(s));else if(e.loss!=null){r={};for(let s in e.loss)r[s]=bs(e.loss[s])}let a;if(Array.isArray(e.metrics))a=e.metrics.map(s=>bs(s));else if(e.metrics!=null){a={};for(let s in e.metrics)a[s]=bs(e.metrics[s])}this.compile({loss:r,metrics:a,optimizer:n})}async save(e,t){if(typeof e=="string"){let i=nn.getSaveHandlers(e);if(i.length===0)throw new V(`Cannot find any save handlers for URL '${e}'`);if(i.length>1)throw new V(`Found more than one (${i.length}) save handlers for URL '${e}'`);e=i[0]}if(e.save==null)throw new V("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await nn.encodeWeights(this.getNamedWeights(t)),r=!1,a=null,s={modelTopology:this.toJSON(a,r),format:WW,generatedBy:`TensorFlow.js tfjs-layers v${Gy}`,convertedBy:null};if(t!=null&&t.includeOptimizer&&this.optimizer!=null){s.trainingConfig=this.getTrainingConfig();let i="optimizer",{data:o,specs:u}=await nn.encodeWeights(await this.optimizer.getWeights(),i);n.specs.push(...u),n.data=nn.concatenateArrayBuffers([n.data,o])}return this.userDefinedMetadata!=null&&(aw(this.userDefinedMetadata,this.name,!0),s.userDefinedMetadata=this.userDefinedMetadata),s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){aw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};la.className="Model";ne.registerClass(la);var wI=class extends la{};wI.className="Functional";ne.registerClass(wI);async function VW(e,t){"modelTopology"in e||(e={modelTopology:e}),e=e;let n=e.modelTopology;n.model_config!=null&&(n=n.model_config);let r=up(n),a=Nr(r,t);if(e.weightsManifest!=null){let s=await nn.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map(o=>o.originalName)),i={};for(let o of a.weights)i[o.originalName]=s[o.originalName];a.loadWeights(i),_e(s)}return a}async function UW(e,t){if(t==null&&(t={}),typeof e=="string"){let n=nn.getLoadHandlers(e,t);if(n.length===0)n.push(nn.browserHTTPRequest(e,t));else if(n.length>1)throw new V(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return GW(e,void 0,t)}async function GW(e,t,n){if(n==null&&(n={}),e.load==null)throw new V("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let r=await e.load(),a=r.modelTopology;a.model_config!=null&&(a=a.model_config);let s=n.strict==null?!0:n.strict,i=r.weightData!=null&&r.weightSpecs!=null&&s,o=Nr(up(a),t,i),u=r.trainingConfig;if(u!=null&&o.loadTrainingConfig(u),r.userDefinedMetadata!=null&&o.setUserDefinedMetadata(r.userDefinedMetadata),r.weightData!=null){if(r.weightSpecs==null)throw new V("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:p,optimizerWeights:l}=HW(r.weightData,r.weightSpecs);o.loadWeights(p,s),o.optimizer!=null&&l.length>0&&await o.optimizer.setWeights(l),_e(p),_e(l.map(d=>d.tensor))}return o}function HW(e,t){let n=nn.decodeWeights(e,t),r={},a=[];return t.forEach(s=>{s.group==="optimizer"?a.push({name:s.name,tensor:n[s.name]}):r[s.name]=n[s.name]}),{modelWeights:r,optimizerWeights:a}}var Yo=class extends la{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:Uc("sequential_"),e.layers!=null)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(t=>t<0))throw new V(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t=e instanceof Yo||e instanceof la,n;if(t){if(n=e,n.outputs.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(n.inputs.length!==1)throw new V("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new V("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let r=tI({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(e.inboundNodes.length!==1)throw new V(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new V("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=eI(this.outputs[0])}this.inboundNodes=[],new Yc({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ws(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{let r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(Ze(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new la({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new kr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new kr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new kr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new kr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new V("Legacy serialization format not supported yet.");a=t}else v.assert(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof Yo))throw new Le(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let o of a){let u=Nr(o,void 0,r);r&&u.setFastWeightInitDuringBuild(!0),i.add(u)}return i}set stopTraining(e){if(this.model==null)throw new V("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new V("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};Yo.className="Sequential";ne.registerClass(Yo);function jW(e){return new la(e)}function qW(e){return new Yo(e)}function kI(e){return tI(e)}function KW(e,t){dr.registerCallbackConstructor(e,t)}var Dn=class extends ne.Serializable{getConfig(){return{}}},II=class extends Dn{apply(e,t=1){return bB(e,t)}};II.className="elu";ne.registerClass(II);var SI=class extends Dn{apply(e){return Tc(e)}};SI.className="selu";ne.registerClass(SI);var NI=class extends Dn{apply(e){return et(e)}};NI.className="relu";ne.registerClass(NI);var TI=class extends Dn{apply(e){return W(()=>za(6,et(e)))}};TI.className="relu6";ne.registerClass(TI);var CI=class extends Dn{apply(e){return e}};CI.className="linear";ne.registerClass(CI);var _I=class extends Dn{apply(e){return mr(e)}};_I.className="sigmoid";ne.registerClass(_I);var EI=class extends Dn{apply(e){return vB(e)}};EI.className="hardSigmoid";ne.registerClass(EI);var $I=class extends Dn{apply(e){return go(e)}};$I.className="softplus";ne.registerClass($I);var AI=class extends Dn{apply(e){return xB(e)}};AI.className="softsign";ne.registerClass(AI);var FI=class extends Dn{apply(e){return Ls(e)}};FI.className="tanh";ne.registerClass(FI);var Hy=class extends Dn{apply(e,t=-1){return ts(e,t)}};Hy.className="softmax";ne.registerClass(Hy);var RI=class extends Dn{apply(e,t=-1){return bc(e,t)}};RI.className="logSoftmax";ne.registerClass(RI);var DI=class extends Dn{apply(e,t=1){return W(()=>z(mr(z(e,t)),e))}};DI.className="swish";ne.registerClass(DI);var MI=class extends Dn{apply(e){return W(()=>z(e,Ls(go(e))))}};MI.className="mish";ne.registerClass(MI);function Wa(e){return e.getClassName()}function Om(e,t={}){return sd(e,ne.SerializationMap.getMap().classNameMap,t,"activation")}function Va(e){if(e==null){let t={};return t.className="linear",t.config={},Om(t)}if(typeof e=="string"){let t={};return t.className=e,t.config={},Om(t)}else return e instanceof Dn?e:Om(e)}function jy(e){if(e!=null&&typeof e!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}var OI=class extends ne.Serializable{},pd=class extends OI{constructor(e){super(),jy(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return W(()=>{let t=vt([1]);return this.hasL1&&(t=J(t,ge(z(this.l1,Et(e))))),this.hasL2&&(t=J(t,ge(z(this.l2,od(e))))),P(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};pd.className="L1L2";ne.registerClass(pd);function XW(e){return jy(e),new pd({l1:e!=null?e.l1:null,l2:0})}function ZW(e){return jy(e),new pd({l2:e!=null?e.l2:null,l1:0})}var pw={l1l2:"L1L2"};function ot(e){return Sy(e)}function dw(e,t={}){return sd(e,ne.SerializationMap.getMap().classNameMap,t,"regularizer")}function yt(e){if(e==null)return null;if(typeof e=="string"){let t={className:e in pw?pw[e]:e,config:{}};return dw(t)}else return e instanceof OI?e:dw(e)}var qy=class extends We{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ce(e);let n=et(e);return this.maxValue!=null&&(n=on(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};qy.className="ReLU";ne.registerClass(qy);var Ky=class extends We{constructor(e){super(e==null?{}:e),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ce(e);return Xp(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Ky.className="LeakyReLU";ne.registerClass(Ky);var Xy=class extends We{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=gt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=yt(e.alphaRegularizer),this.alphaConstraint=Bt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new V(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=Ze(e);let t=e.slice(1);if(this.sharedAxes!=null)for(let r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)n[r]=e[r];this.inputSpec=[new $t({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ce(e),ed(e,this.alpha.read())}getConfig(){let e={alphaInitializer:wt(this.alphaInitializer),alphaRegularizer:ot(this.alphaRegularizer),alphaConstraint:Pt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Xy.className="PReLU";ne.registerClass(Xy);var Zy=class extends We{constructor(e){if(super(e==null?{}:e),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new Le(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=Ce(e);return uu(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Zy.className="ELU";ne.registerClass(Zy);var Jy=class extends We{constructor(e){super(e==null?{}:e),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){let n=Ce(e);return z(n,se(kn(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Jy.className="ThresholdedReLU";ne.registerClass(Jy);var Yy=class extends We{constructor(e){super(e==null?{}:e),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new Hy().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){let n=Ce(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Yy.className="Softmax";ne.registerClass(Yy);function Lo(e,t,n){if(typeof e=="number")return Ws(e,t);if(e.length!==t)throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){let a=e[r];if(!mB(a))throw new V(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Tr(e,t,n,r,a=1){if(e==null)return e;let s=t+(t-1)*(a-1),i;return n==="same"?i=e:i=e-s+1,Math.floor((i+r-1)/r)}function zr(e,t,n,r){if(e==null)return null;if(r==="valid")e=e*t+Ba([n-t,0]);else if(r==="same")e=e*t;else throw new V(`Unsupport padding mode: ${r}.`);return e}function Qy(e,t){return W(()=>(Tt(t),t==="channelsFirst"?ze(e,[0,2,3,1]):e))}function LI(e,t){return W(()=>(Tt(t),t==="channelsFirst"?ze(e,[0,2,3,4,1]):e))}function JW(e,t,n,r=1,a="valid",s,i=1){return W(()=>{if(s==null&&(s=_r()),Tt(s),e.shape.length!==3)throw new V(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(t.shape.length!==3)throw new V(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(n!=null&&n.shape.length!==1)throw new V(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if(s==="channelsFirst"&&(e=ze(e,[0,2,1])),a==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=hc(e,t,r,a==="same"?"same":"valid","NWC",i);return n!=null&&(o=Ar(o,n)),o})}function hw(e,t,n,r=[1,1],a="valid",s,i,o=null){return W(()=>{if(s==null&&(s=_r()),Tt(s),e.rank!==3&&e.rank!==4)throw new V(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(t.rank!==3&&t.rank!==4)throw new V(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=Qy(e,s);if(a==="causal")throw new Le("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Ko.conv2d({x:u,filter:t,strides:r,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),s==="channelsFirst"&&(u=ze(u,[0,3,1,2])),u})}function YW(e,t,n,r=[1,1,1],a="valid",s,i){return W(()=>{if(s==null&&(s=_r()),Tt(s),e.rank!==4&&e.rank!==5)throw new V(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(t.rank!==4&&t.rank!==5)throw new V(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=LI(e,s);if(a==="causal")throw new Le("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Cg(o,t,r,a==="same"?"same":"valid","NDHWC",i),n!=null&&(o=Ar(o,n)),s==="channelsFirst"&&(o=ze(o,[0,4,1,2,3])),o})}var eb=class extends We{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",eb.verifyArgs(t),this.rank=e,jt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Le(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Lo(t.kernelSize,e,"kernelSize"),this.strides=Lo(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,ir(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Tt(this.dataFormat),this.activation=Va(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=gt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Bt(t.biasConstraint),this.biasRegularizer=yt(t.biasRegularizer),this.activityRegularizer=yt(t.activityRegularizer),this.dilationRate=Lo(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new V(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new V(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new V(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Lr("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!Ny(e.kernelSize,"number",1,3))throw new V(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Wa(this.activation),useBias:this.useBias,biasInitializer:wt(this.biasInitializer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),biasConstraint:Pt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},dd=class extends eb{constructor(e,t){super(e,t),this.kernel=null,dd.verifyArgs(t),this.filters=t.filters,jt(this.filters,"filters"),this.kernelInitializer=gt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Bt(t.kernelConstraint),this.kernelRegularizer=yt(t.kernelRegularizer)}build(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return W(()=>{e=Ce(e);let n,r=this.bias==null?null:this.bias.read(),a=Hk(this.activation.getClassName());if(a!=null&&this.rank===2)n=hw(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(this.rank===1)n=JW(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)n=hw(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)n=YW(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Le("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(n=this.activation.apply(n))}return n})}computeOutputShape(e){e=Ze(e);let t=[],n=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let a=0;a<n.length;++a){let s=Tr(n[a],this.kernelSize[a],this.padding,this.strides[a],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[a]);t.push(s)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){let e={filters:this.filters,kernelInitializer:wt(this.kernelInitializer),kernelRegularizer:ot(this.kernelRegularizer),kernelConstraint:Pt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new V(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},hd=class extends dd{constructor(e){super(2,e),hd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Ny(e.kernelSize,"number",1,2))throw new V(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};hd.className="Conv2D";ne.registerClass(hd);var cd=class extends dd{constructor(e){super(3,e),cd.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new V(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};cd.className="Conv3D";ne.registerClass(cd);var tb=class extends hd{constructor(e){if(super(e),this.inputSpec=[new $t({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==4)throw new V("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new $t({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Ce(e);if(n.shape.length!==4)throw new V(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,a=r[0],s,i;this.dataFormat==="channelsFirst"?(s=2,i=3):(s=1,i=2);let o=r[s],u=r[i],p=this.kernelSize[0],l=this.kernelSize[1],d=this.strides[0],h=this.strides[1],c=zr(o,d,p,this.padding),m=zr(u,h,l,this.padding),f=[a,c,m,this.filters];this.dataFormat!=="channelsLast"&&(n=ze(n,[0,2,3,1]));let g=cc(n,this.kernel.read(),f,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(g=ze(g,[0,3,1,2])),this.bias!=null&&(g=Ar(g,this.bias.read(),this.dataFormat)),this.activation!=null&&(g=this.activation.apply(g)),g})}computeOutputShape(e){e=Ze(e);let t=e.slice(),n,r,a;this.dataFormat==="channelsFirst"?(n=1,r=2,a=3):(n=3,r=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=zr(t[r],o,s,this.padding),t[a]=zr(t[a],u,i,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};tb.className="Conv2DTranspose";ne.registerClass(tb);var nb=class extends cd{constructor(e){if(super(e),this.inputSpec=[new $t({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new V(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=Ze(e),e.length!==5)throw new V("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new V("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new $t({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{let n=Ce(e);if(n.shape.length!==5)throw new V(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${n.shape.length}`);let r=n.shape,a=r[0],s,i,o;this.dataFormat==="channelsFirst"?(o=2,s=3,i=4):(o=1,s=2,i=3);let u=r[o],p=r[s],l=r[i],d=this.kernelSize[0],h=this.kernelSize[1],c=this.kernelSize[2],m=this.strides[0],f=this.strides[1],g=this.strides[2],y=zr(u,m,d,this.padding),b=zr(p,f,h,this.padding),x=zr(l,g,c,this.padding),w=[a,y,b,x,this.filters];this.dataFormat!=="channelsLast"&&(n=ze(n,[0,2,3,4,1]));let I=_g(n,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(I=ze(I,[0,4,1,2,3])),this.bias!==null&&(I=Ar(I,this.bias.read(),this.dataFormat)),this.activation!==null&&(I=this.activation.apply(I)),I})}computeOutputShape(e){e=Ze(e);let t=e.slice(),n,r,a,s;this.dataFormat==="channelsFirst"?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);let i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],p=this.strides[0],l=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=zr(t[r],p,i,this.padding),t[a]=zr(t[a],l,o,this.padding),t[s]=zr(t[s],d,u,this.padding),t}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};nb.className="Conv3DTranspose";ne.registerClass(nb);var zI=class extends dd{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new V("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new V("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new V(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=yt(t.depthwiseRegularizer),this.depthwiseConstraint=Bt(t.depthwiseConstraint),this.pointwiseInitializer=gt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=yt(t.pointwiseRegularizer),this.pointwiseConstraint=Bt(t.pointwiseConstraint)}build(e){if(e=Ze(e),e.length<this.rank+2)throw new V(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let i=0;i<this.rank;++i)a.push(1);a.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new $t({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return W(()=>{e=Ce(e);let n;if(this.rank===1)throw new Le("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=ze(e,[0,2,3,1])),n=cu(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(n=Ar(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),this.dataFormat==="channelsFirst"&&(n=ze(n,[0,3,1,2])),n})}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=wt(this.depthwiseInitializer),e.pointwiseInitializer=wt(this.pointwiseInitializer),e.depthwiseRegularizer=ot(this.depthwiseRegularizer),e.pointwiseRegularizer=ot(this.pointwiseRegularizer),e.depthwiseConstraint=Pt(this.depthwiseConstraint),e.pointwiseConstraint=Pt(this.pointwiseConstraint),e}};zI.className="SeparableConv";var rb=class extends zI{constructor(e){super(2,e)}};rb.className="SeparableConv2D";ne.registerClass(rb);var tm=class extends dd{constructor(e){super(1,e),tm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!Ny(e.kernelSize,"number",1,1))throw new V(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};tm.className="Conv1D";ne.registerClass(tm);var ab=class extends We{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return W(()=>{if(e=Ce(e),this.dataFormat==="channelsLast"){let n=Ud(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ud(n,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{let n=Ud(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ud(n,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};ab.className="Cropping2D";ne.registerClass(ab);var sb=class extends We{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,dB(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){let t=e[2]==null?null:this.size[0]*e[2],n=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,n]}else{let t=e[1]==null?null:this.size[0]*e[1],n=e[2]==null?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return W(()=>{let n=Ce(e),r=n.shape;if(this.dataFormat==="channelsFirst"){n=ze(n,[0,2,3,1]);let a=this.size[0]*r[2],s=this.size[1]*r[3],i=this.interpolation==="nearest"?Qn.resizeNearestNeighbor(n,[a,s]):Qn.resizeBilinear(n,[a,s]);return ze(i,[0,3,1,2])}else{let a=this.size[0]*r[1],s=this.size[1]*r[2];return this.interpolation==="nearest"?Qn.resizeNearestNeighbor(n,[a,s]):Qn.resizeBilinear(n,[a,s])}})}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};sb.className="UpSampling2D";ne.registerClass(sb);function QW(e,t,n=[1,1],r="valid",a,s){return W(()=>{a==null&&(a=_r()),Tt(a);let i=Qy(e,a);if(e.rank!==4)throw new V(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(t.rank!==4)throw new V(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=fo(i,t,n,r==="same"?"same":"valid","NHWC",s),a==="channelsFirst"&&(i=ze(i,[0,3,1,2])),i})}var ib=class extends eb{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=gt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Bt(e.depthwiseConstraint),this.depthwiseRegularizer=yt(e.depthwiseRegularizer)}build(e){if(e=Ze(e),e.length<4)throw new V(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new V(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{e=Ce(e);let n=QW(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(n=Ar(n,this.bias.read(),this.dataFormat)),this.activation!=null&&(n=this.activation.apply(n)),n})}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Tr(t,this.kernelSize[0],this.padding,this.strides[0]),s=Tr(n,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=wt(this.depthwiseInitializer),e.depthwiseRegularizer=ot(this.depthwiseRegularizer),e.depthwiseConstraint=Pt(this.depthwiseRegularizer),e}};ib.className="DepthwiseConv2D";ne.registerClass(ib);function PI(e,t,n,r){if(Array.isArray(e)){if(t!=null||n!=null)throw new V("When inputs is an array, neither initialState or constants should be provided");r!=null&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(s){return s==null||Array.isArray(s)?s:[s]}return t=a(t),n=a(n),{inputs:e,initialState:t,constants:n}}function BI(e,t,n,r=!1,a,s,i=!1,o=!1){return W(()=>{let u=t.shape.length;if(u<3)throw new V(`Input should be at least 3D, but is ${u}D.`);let p=[1,0].concat(Cr(2,u));if(t=ze(t,p),s!=null)throw new Le("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=se(se(a,"bool"),"float32"),a.rank===u-1&&(a=Qt(a,-1)),a=ze(a,p)),r&&(t=sr(t,0),a!=null&&(a=sr(a,0)));let l=[],d,h=n,c=t.shape[0],m=Nt(t),f;a!=null&&(f=Nt(a));for(let y=0;y<c;++y){let b=m[y],x=W(()=>e(b,h));if(a==null)d=x[0],h=x[1];else{let w=W(()=>{let I=f[y],T=he(jn(I),I),C=J(z(x[0],I),z(h[0],T)),E=h.map((A,R)=>J(z(x[1][R],I),z(A,T)));return{output:C,newStates:E}});d=w.output,h=w.newStates}o&&l.push(d)}let g;return o&&(g=Lt(l,1)),[d,g,h]})}var Zr=class extends We{constructor(e){super(e);let t;if(e.cell==null)throw new V("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new am({cells:e.cell}):t=e.cell,t.stateSize==null)throw new V("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new $t({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Cr(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){pf(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n=t[0],r;if(this.returnSequences?r=[e[0],e[1],n]:r=[e[0],n],this.returnState){let a=[];for(let s of t)a.push([e[0],s]);return[r].concat(a)}else return r}computeMask(e,t){return W(()=>{Array.isArray(t)&&(t=t[0]);let n=this.returnSequences?t:null;if(this.returnState){let r=this.states.map(a=>null);return[n].concat(r)}else return n})}get states(){if(this.states_==null){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new Le("Constants support is not implemented in RNN yet.");pf(e)&&(e=e[0]),e=e;let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new $t({shape:[t,null,...n]});let r=[e[0]].concat(e.slice(2));this.cell.build(r);let a;if(Array.isArray(this.cell.stateSize)?a=this.cell.stateSize:a=[this.cell.stateSize],this.stateSpec!=null){if(!v.arraysEqual(this.stateSpec.map(s=>s.shape[s.shape.length-1]),a))throw new V(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(s=>new $t({shape:[null,s]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(n==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>vt([n,r])):this.states_=[vt([n,this.cell.stateSize])];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>vt([n,r])):this.states_[0]=vt([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let r=0;r<this.states_.length;++r){let a=e[r],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[n,s];if(!v.arraysEqual(a.shape,i))throw new V(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${a.shape}`);this.states_[r]=a}}this.states_=this.states_.map(r=>Mt(r.clone()))})}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let a=PI(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(n!=null){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let o of n)this.stateSpec.push(new $t({shape:o.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Ir){let o=[e].concat(s),u=this.inputSpec.concat(i),p=this.inputSpec;this.inputSpec=u;let l=super.apply(o,t);return this.inputSpec=p,l}else return super.apply(e,t)}call(e,t){return W(()=>{let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;e=Ce(e),a==null&&(this.stateful?a=this.states_:a=this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new V(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:r},o=BI((h,c)=>{let m=this.cell.call([h].concat(c),i);return[m[0],m.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],p=o[1],l=o[2];this.stateful&&this.resetStates(l,r);let d=this.returnSequences?p:u;return this.returnState?[d].concat(l):d})}getInitialState(e){return W(()=>{let t=vt(e.shape);return t=ge(t,[1,2]),t=id(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(n=>n>1?lf(t,[1,n]):t):this.cell.stateSize>1?[lf(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===Zr.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let r=t.cell,a=Nr(r,n);return new e(Object.assign(t,{cell:a}))}};Zr.className="RNN";ne.registerClass(Zr);var md=class extends We{},nm=class extends md{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=Va(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=Zo([1,Ba([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zo([1,Ba([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ua({ones:()=>jn(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ua({ones:()=>jn(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let a,s=this.dropoutMask,i=this.recurrentDropoutMask;s!=null?a=Vr(z(e,s),this.kernel.read()):a=Vr(e,this.kernel.read()),this.bias!=null&&(a=Ar(a,this.bias.read())),i!=null&&(n=z(n,i));let o=J(a,Vr(n,this.recurrentKernel.read()));return this.activation!=null&&(o=this.activation.apply(o)),[o,o]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),useBias:this.useBias,kernelInitializer:wt(this.kernelInitializer),recurrentInitializer:wt(this.recurrentInitializer),biasInitializer:wt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};nm.className="SimpleRNNCell";ne.registerClass(nm);var ob=class extends Zr{constructor(e){e.cell=new nm(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}};ob.className="SimpleRNN";ne.registerClass(ob);var rm=class extends md{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new V("GRUCell does not support reset_after parameter set to true.");this.units=e.units,jt(this.units,"units"),this.activation=Va(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Va(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=Zo([1,Ba([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zo([1,Ba([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Ze(e);let t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return W(()=>{if(e=e,e.length!==2)throw new V(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training==null?!1:t.training,r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ua({ones:()=>jn(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ua({ones:()=>jn(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let a=this.dropoutMask,s=this.recurrentDropoutMask,i,o,u;0<this.dropout&&this.dropout<1&&(e=z(e,a[0]));let p=Vr(e,this.kernel.read());this.useBias&&(p=Ar(p,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=z(r,s[0]));let l=this.recurrentKernel.read(),[d,h]=En(l,[2*this.units,this.units],l.rank-1),c=Vr(r,d),[m,f,g]=En(p,3,p.rank-1),[y,b]=En(c,2,c.rank-1);i=this.recurrentActivation.apply(J(m,y)),o=this.recurrentActivation.apply(J(f,b));let x=Vr(z(o,r),h);u=this.activation.apply(J(g,x));let w=J(z(i,r),z(J(1,ht(i)),u));return[w,w]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),recurrentActivation:Wa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:wt(this.kernelInitializer),recurrentInitializer:wt(this.recurrentInitializer),biasInitializer:wt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};rm.className="GRUCell";ne.registerClass(rm);var lb=class extends Zr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new rm(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};lb.className="GRU";ne.registerClass(lb);var fd=class extends md{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=Va(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Va(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=gt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=yt(e.kernelRegularizer),this.recurrentRegularizer=yt(e.recurrentRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.kernelConstraint=Bt(e.kernelConstraint),this.recurrentConstraint=Bt(e.recurrentConstraint),this.biasConstraint=Bt(e.biasConstraint),this.dropout=Zo([1,Ba([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Zo([1,Ba([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=Ze(e);let n=e[e.length-1];this.kernel=this.addWeight("kernel",[n,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){let a=this.biasInitializer,s=this.units;r=new(t=class extends br{apply(i,o){let u=a.apply([s]),p=new Hc().apply([s]),l=a.apply([s*2]);return Zv(Zv(u,p),l)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return W(()=>{let n=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new V(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1],a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ua({ones:()=>jn(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ua({ones:()=>jn(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s=this.dropoutMask,i=this.recurrentDropoutMask,o,u,p,l;0<this.dropout&&this.dropout<1&&(e=z(e,s[0]));let d=Vr(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=z(r,i[0])),d=J(d,Vr(r,this.recurrentKernel.read())),this.useBias&&(d=Ar(d,this.bias.read()));let[h,c,m,f]=En(d,4,d.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(c),p=J(z(u,a),z(o,this.activation.apply(m))),l=this.recurrentActivation.apply(f);let g=z(l,this.activation.apply(p));return[g,g,p]})}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Wa(this.activation),recurrentActivation:Wa(this.recurrentActivation),useBias:this.useBias,kernelInitializer:wt(this.kernelInitializer),recurrentInitializer:wt(this.recurrentInitializer),biasInitializer:wt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:ot(this.kernelRegularizer),recurrentRegularizer:ot(this.recurrentRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),recurrentConstraint:Pt(this.recurrentConstraint),biasConstraint:Pt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};fd.className="LSTMCell";ne.registerClass(fd);var ub=class extends Zr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new fd(e),super(e)}call(e,t){return W(()=>{this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}};ub.className="LSTM";ne.registerClass(ub);var am=class extends md{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return W(()=>{e=e;let n=e.slice(1),r=[];for(let i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(n.splice(0,i.stateSize.length)):r.push(n.splice(0,1));r.reverse();let a=[],s;for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=r[i],i===0?s=[e[0]].concat(n):s=[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(let i of a.slice().reverse())n.push(...i);return[s[0]].concat(n)})}build(e){pf(e)&&(e=e[0]),e=e;let t;this.cells.forEach((n,r)=>{Ns(`RNNCell_${r}`,()=>{n.build(e),Array.isArray(n.stateSize)?t=n.stateSize[0]:t=n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){let e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),n={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),n)}static fromConfig(e,t,n={}){let r=[];for(let a of t.cells)r.push(Nr(a,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let n of this.cells)t.push(...n.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return df(e)}setWeights(e){let t=[];for(let n of this.cells){let r=n.weights.length,a=e.splice(r);for(let s=0;s<n.weights.length;++s)t.push([n.weights[s],a[s]])}Dy(t)}};am.className="StackedRNNCells";ne.registerClass(am);function Ua(e){let{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>s!=null?s(t(),n):Yk(t(),n),o=()=>ld(i,t,r);return!a||a<=1?Mt(o().clone()):Array(a).fill(void 0).map(o).map(u=>Mt(u.clone()))}var e4=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]]);return n},WI=class extends Zr{constructor(e){if(e.unroll)throw new Le("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Le("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new $t({ndim:5})]}call(e,t){return W(()=>{if(this.cell.dropoutMask!=null&&(_e(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(_e(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new V("ConvRNN2D cell does not support constants");let n=t==null?null:t.mask,r=t==null?null:t.training,a=t==null?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return W(()=>{let{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=vt(a);return Array.isArray(t)?Array(t.length).fill(s):[s]})}resetStates(e,t=!1){W(()=>{if(!this.stateful)throw new na("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(n[0]==null)throw new V("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>vt(a)):this.states_=[vt(a)];else if(e==null)_e(this.states_),this.keptStates!=null&&(_e(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>vt(a)):this.states_[0]=vt(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new V(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):_e(this.states_);for(let s=0;s<this.states_.length;++s){let i=e[s],o=a;if(!v.arraysEqual(i.shape,o))throw new V(`State ${s} is incompatible with layer ${this.name}: expected shape=${o}, received shape=${i.shape}`);this.states_[s]=i}}this.states_=this.states_.map(s=>Mt(s.clone()))})}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o=t==="channelsFirst",u=e[o?3:2],p=e[o?4:3],l=Tr(u,r[0],a,s[0],i[0]),d=Tr(p,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,l,d]:[l,d,n]]}};WI.className="ConvRNN2D";var sm=class extends fd{constructor(e){let{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,jt(this.filters,"filters"),this.kernelSize=Lo(n,2,"kernelSize"),this.kernelSize.forEach(o=>jt(o,"kernelSize")),this.strides=Lo(r||1,2,"strides"),this.strides.forEach(o=>jt(o,"strides")),this.padding=a||"valid",ir(this.padding),this.dataFormat=s||"channelsLast",Tt(this.dataFormat),this.dilationRate=Lo(i||1,2,"dilationRate"),this.dilationRate.forEach(o=>jt(o,"dilationRate"))}build(e){var t;e=Ze(e);let n=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[n]==null)throw new V(`The channel dimension of the input should be defined. Found ${e[n]}`);let r=e[n],a=4,s=this.kernelSize.concat([r,this.filters*a]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let i=this.kernelSize.concat([this.filters,this.filters*a]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let o;if(this.unitForgetBias){let u=this.biasInitializer,p=this.filters;o=new(t=class extends br{apply(l,d){let h=u.apply([p]),c=Vn([p]),m=u.apply([p*2]);return Ty([h,c,m])}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*a],null,o,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return W(()=>{if(e.length!==3)throw new V(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,r=e[0],a=e[1],s=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Ua({ones:()=>jn(r),rate:this.dropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let o=this.dropoutMask,u=(X,ee,Z)=>!ee||!ee[Z]?X:z(ee[Z],X),p=u(r,o,0),l=u(r,o,1),d=u(r,o,2),h=u(r,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Ua({ones:()=>jn(a),rate:this.recurrentDropout,training:n,count:i,dropoutFunc:this.dropoutFunc}));let c=this.recurrentDropoutMask,m=u(a,c,0),f=u(a,c,1),g=u(a,c,2),y=u(a,c,3),b=3,[x,w,I,T]=En(this.kernel.read(),i,b),[C,E,A,R]=this.useBias?En(this.bias.read(),i):[null,null,null,null];p=this.inputConv(p,x,C,this.padding),l=this.inputConv(l,w,E,this.padding),d=this.inputConv(d,I,A,this.padding),h=this.inputConv(h,T,R,this.padding);let[F,S,M,B]=En(this.recurrentKernel.read(),i,b);m=this.recurrentConv(m,F),f=this.recurrentConv(f,S),g=this.recurrentConv(g,M),y=this.recurrentConv(y,B);let U=this.recurrentActivation.apply(J(p,m)),G=this.recurrentActivation.apply(J(l,f)),K=J(z(G,s),z(U,this.activation.apply(J(d,g)))),j=z(this.recurrentActivation.apply(J(h,y)),this.activation.apply(K));return[j,j,K]})}getConfig(){let e=super.getConfig(),t=e4(e,["units"]),n={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),n)}inputConv(e,t,n,r){let a=fn(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return n?Ar(a,n,this.dataFormat):a}recurrentConv(e,t){return fn(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}};sm.className="ConvLSTM2DCell";ne.registerClass(sm);var pb=class extends WI{constructor(e){let t=new sm(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};pb.className="ConvLSTM2D";ne.registerClass(pb);var im=class extends We{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;let t=e.shape,n=[];for(let r=0;r<this.noiseShape.length;++r)n.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return n}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);if(0<this.rate&&this.rate<1){let r=t.training==null?!1:t.training,a=this.getNoiseShape(n);return ld(()=>Yk(n,this.rate,a,this.seed),()=>n,r)}return e})}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};im.className="Dropout";ne.registerClass(im);var db=class extends im{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};db.className="SpatialDropout1D";ne.registerClass(db);var hb=class extends We{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,jt(this.units,"units"),this.activation=Va(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=gt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=gt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Bt(e.kernelConstraint),this.biasConstraint=Bt(e.biasConstraint),this.kernelRegularizer=yt(e.kernelRegularizer),this.biasRegularizer=yt(e.biasRegularizer),this.activityRegularizer=yt(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=Ze(e);let t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=Ze(e);let t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e),r=Hk(this.activation.getClassName()),a;return r!=null?a=Vr(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Vr(n,this.kernel.read()),this.bias!=null&&(a=Ar(a,this.bias.read())),this.activation!=null&&(a=this.activation.apply(a))),a})}getConfig(){let e={units:this.units,activation:Wa(this.activation),useBias:this.useBias,kernelInitializer:wt(this.kernelInitializer),biasInitializer:wt(this.biasInitializer),kernelRegularizer:ot(this.kernelRegularizer),biasRegularizer:ot(this.biasRegularizer),activityRegularizer:ot(this.activityRegularizer),kernelConstraint:Pt(this.kernelConstraint),biasConstraint:Pt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};hb.className="Dense";ne.registerClass(hb);var cb=class extends We{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Ze(e);for(let t of e.slice(1))if(t==null)throw new V(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Da(e,1)]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);if(this.dataFormat==="channelsFirst"&&n.rank>1){let r=[0];for(let a=2;a<n.rank;++a)r.push(a);r.push(1),n=ze(n,r)}return yB(n)})}getConfig(){let e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};cb.className="Flatten";ne.registerClass(cb);var mb=class extends We{constructor(e){super(e),this.supportsMasking=!0,this.activation=Va(e.activation)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);return this.activation.apply(n)})}getConfig(){let e={activation:Wa(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};mb.className="Activation";ne.registerClass(mb);var fb=class extends We{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return W(()=>(e=Ce(e),fB(e,this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};fb.className="RepeatVector";ne.registerClass(fb);var gb=class extends We{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",r=t.slice(),a=1,s=null;for(let o=0;o<r.length;++o){let u=r[o];if(this.isUnknown(u))if(s===null)s=o;else throw new V("Can only specifiy one unknown dimension.");else a*=u}let i=Da(e);if(s!==null){if(a===0||i%a!==0)throw new V(n);r[s]=i/a}else if(i!==a)throw new V(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return P(n,a)})}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};gb.className="Reshape";ne.registerClass(gb);var yb=class extends We{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=Cr(1,e.dims.length+1);if(!v.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new $t({ndim:this.dims.length+1})]}computeOutputShape(e){e=Ze(e);let t=e.slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return ze(Ce(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};yb.className="Permute";ne.registerClass(yb);var bb=class extends We{constructor(e){super(e==null?{}:e),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=Ce(e),r=-1;return ap(Ps(n,this.maskValue),r)}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e),r=-1,a=!0,s=ap(Ps(n,this.maskValue),r,a);return z(n,se(s,n.dtype))})}};bb.className="Masking";ne.registerClass(bb);var xb=class extends We{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(mt(e.inputLength))}this.inputDim=e.inputDim,jt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,jt(this.outputDim,"outputDim"),this.embeddingsInitializer=gt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=yt(e.embeddingsRegularizer),this.activityRegularizer=yt(e.activityRegularizer),this.embeddingsConstraint=Bt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return W(()=>this.maskZero?(e=Ce(e),Ps(e,He(e))):null)}computeOutputShape(e){if(e=Ze(e),this.inputLength==null)return[...e,this.outputDim];let t=mt(this.inputLength);if(t.length!==e.length-1)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){let a=t[r],s=e[r+1];if(a!=null&&s!=null&&a!==s)throw new V(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);a==null&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);n.dtype!=="int32"&&(n=ha(n,"int32"));let r=Jk(this.embeddings.read(),P(n,[n.size]));return P(r,Ze(this.computeOutputShape(n.shape)))})}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:wt(this.embeddingsInitializer),embeddingsRegularizer:ot(this.embeddingsRegularizer),activityRegularizer:ot(this.activityRegularizer),embeddingsConstraint:Pt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};xb.className="Embedding";ne.registerClass(xb);var vo=class extends We{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Le}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;let n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){let a=e[e.length-t.length+r],s=t[r];if(a==null||s==null||a<0||s<0)n.push(null);else if(a===1)n.push(s);else if(s===1)n.push(a);else{if(a!==s)throw new V("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Ze(e)]),e=e,e.length<2)throw new V(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let a of e)a!=null&&a[0]!==null&&t.push(a[0]);if(t=Ra(t),t.length>1)throw new V(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=e[0]==null?null:e[0].slice(1);for(let a=1;a<e.length;++a){let s=e[a]==null?null:e[a].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}let r=e.map(a=>a.length);e.indexOf(null)===-1&&Ra(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return W(()=>{if(e=e,this.reshapeRequired){let n=[],r=e.map(a=>a.rank);if(r.indexOf(null)===-1){let a=Ba(r);for(let s of e){let i=s.rank;for(let o=0;o<a-i;++o)s=id(s,1);n.push(s)}return this.mergeFunction(n)}else{let a=!1;for(let o of e){let u=o.rank;if(u==null){let p=o.shape,l=p[0],d=p.slice(1).concat([l]),h=P(o,[l].concat(Da(p.slice(1))));h=ze(h,[1,0]),h=P(h,d),n.push(h),a=!0}else if(u>1){let p=Cr(1,u).concat([0]);n.push(ze(o,p)),a=!0}else n.push(o)}let s=this.mergeFunction(n),i=s.rank;if(a){if(i==null){let o=s.shape,u=o.length,p=o[u-1],l=[p].concat(o.slice(0,o.length-1));s=P(ze(P(s,[-1,p]),[1,0]),l)}else if(i>1){let o=[i-1].concat(Cr(0,i-1));s=ze(s,o)}}return s}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){let a=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let r of e)r!=null&&r[0]!==null&&n.push(r[0]);return n=Ra(n),n.length===1?t=n.concat(t):t=[null].concat(t),t}computeMask(e,t){return W(()=>{if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an Array");if(!Array.isArray(e))throw new V("`inputs` should be an Array");if(t.length!==e.length)throw new V(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:Qt(r,0));let n=t[0];for(let r=1;r<t.length-1;++r)n=fr(n,t[r]);return n})}},vb=class extends vo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return t})}};vb.className="Add";ne.registerClass(vb);var wb=class extends vo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=z(t,e[n]);return t})}};wb.className="Multiply";ne.registerClass(wb);var kb=class extends vo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=J(t,e[n]);return z(1/e.length,t)})}};kb.className="Average";ne.registerClass(kb);var Ib=class extends vo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Kr(t,e[n]);return t})}};Ib.className="Maximum";ne.registerClass(Ib);var Sb=class extends vo{constructor(e){super(e)}mergeFunction(e){return W(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=za(t,e[n]);return t})}};Sb.className="Minimum";ne.registerClass(Sb);var Nb=class extends vo{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new V("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(let r of e)if(r!=null){t=!1;break}if(t)return;let n=[];for(let r=0;r<e.length;++r){let a=e[r].slice();a.splice(this.axis,1);let s=!1;for(let i of n)if(v.arraysEqual(i,a)){s=!0;break}s||n.push(a)}if(n.length>1)throw new V("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return W(()=>Ty(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new V("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(let a of t.slice(1)){if(n[r]==null||a[r]==null){n[r]=null;break}n[r]+=a[r]}return n}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new V("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new V("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new V(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return W(()=>{let n=!0;if(t.forEach(s=>{if(s!=null){n=!1;return}}),n)return null;let r=[];for(let s=0;s<e.length;++s)t[s]==null?r.push(se(jn(e[s]),"bool")):t[s].rank<e[s].rank?r.push(Qt(t[s],-1)):r.push(t[s]);let a=at(r,this.axis);return dc(a,-1,!1)})}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};Nb.className="Concatenate";ne.registerClass(Nb);function Mu(e,t){for(;e<0;)e+=t;return e}function t4(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Le("batchDot is not implemented for tensors of 4D or higher rank yet");if(v.assert(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),v.assert(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof n=="number"&&(n=[n,n]),e.dtype==="complex64"||t.dtype==="complex64")throw new Le("batchDot is not implemented for complex64-type Tensors yet.");let r=e.shape.length,a=t.shape.length;n==null&&(n=[r-1,a-2]);let s=n;return W(()=>{let i;if(r>a){i=r-a;let u=[];for(let p=0;p<i;++p)u.push(1);t=P(t,t.shape.concat(u))}else if(a>r){i=a-r;let u=[];for(let p=0;p<i;++p)u.push(1);e=P(e,e.shape.concat(u))}else i=0;let o;if(e.shape.length===2&&t.shape.length===2)s[0]===s[1]?o=ge(z(e,t),s[0]):o=ge(z(ze(e,[1,0]),t),s[1]);else{let u=s[0]!==e.shape.length-1,p=s[1]===t.shape.length-1;o=Oe(e,t,u,p)}if(i>0){let u;r>a?u=r+a-3:u=r-1;let p=[];for(let l=u;l<u+i;++l)p.push(l);o=ns(o,p)}return o.shape.length===1&&(o=Qt(o,1)),o})}var Tb=class extends vo{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new V(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new V(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],n=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((a,s)=>Mu(a,e[s].shape.length)):r=[Mu(this.axes,t.shape.length),Mu(this.axes,n.shape.length)],this.normalize&&(t=Nh(t,r[0]),n=Nh(n,r[1])),t4(t,n,r)}interpretAxes(e,t){let n;return Array.isArray(this.axes)?n=this.axes:n=[Mu(this.axes,e.length),Mu(this.axes,t.length)],n}computeOutputShape(e){v.assert(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Le("Dot layer does not support tensors of 4D or higher rank yet.");let r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);let a=t.concat(n);return a.length===1&&a.push(1),a}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Tb.className="Dot";ne.registerClass(Tb);var Cb=class extends We{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);return ld(()=>J(Gc(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}};Cb.className="GaussianNoise";ne.registerClass(Cb);var _b=class extends We{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{this.invokeCallHook(e,t);let n=Ce(e);return this.rate>0&&this.rate<1?ld(()=>{let r=Math.sqrt(this.rate/(1-this.rate));return z(n,Gc(n.shape,1,r))},()=>n,t.training||!1):n})}};_b.className="GaussianDropout";ne.registerClass(_b);var Eb=class extends We{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ce(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return W(()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return ld(()=>{let r=Ce(e),a=1.6732632423543772,s=1.0507009873554805,i=-a*s,o=fa(es(n),this.rate);o=ha(o,"float32");let u=((1-this.rate)*(1+this.rate*i**2))**-.5,p=-u*i*this.rate,l=J(z(r,o),z(J(o,-1),i));return J(z(l,u),p)},()=>Ce(e),t.training||!1)}return e})}};Eb.className="AlphaDropout";ne.registerClass(Eb);function pp(e,t,n,r,a,s=.001){let i;if(e.rank===2)i=yg(e,t,n,r,a,s);else if(e.rank===3)i=bg(e,t,n,r,a,s);else if(e.rank===4)i=xg(e,t,n,r,a,s);else throw new Le(`batchNormalization is not implemented for array of rank ${e.rank} yet`);return i}function n4(e,t,n,r,a=.001){return W(()=>{let s=Yp(e,r),i=s.mean,o=s.variance;return[pp(e,i,o,n,t,a),i,o]})}function r4(e,t,n,r,a=.001){return W(()=>{let s=Yp(e,r),i=s.mean,o=s.variance,u=[];for(let c of Cr(0,e.rank))r.indexOf(c)!==-1?u.push(1):u.push(e.shape[c]);let p=P(i,u),l=P(o,u),d=t==null?null:P(t,u),h=n==null?null:P(n,u);return[pp(e,p,l,h,d,a),i,o]})}function a4(e,t,n,r,a=.001){return v.arraysEqual(r.slice().sort(),Cr(0,e.rank-1))?n4(e,t,n,r,a):r4(e,t,n,r,a)}var $b=class extends We{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.movingMeanInitializer=gt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=gt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Bt(e.betaConstraint),this.gammaConstraint=Bt(e.gammaConstraint),this.betaRegularizer=yt(e.betaRegularizer),this.gammaRegularizer=yt(e.gammaRegularizer)}build(e){e=Ze(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(n==null)throw new V(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new $t({ndim:e.length,axes:{[t]:n}})];let r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return W(()=>{let n=t.training==null?!1:t.training,r=Ce(e),a=r.shape,s=a.length,i=Cr(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let u=Ws(1,s);u[o]=a[o];let p=i.slice();p.sort();let l=!v.arraysEqual(p,Cr(0,s).slice(0,s-1)),d=()=>{if(l){let g=P(this.movingMean.read(),u),y=P(this.movingVariance.read(),u),b=this.center?P(this.beta.read(),u):null,x=this.scale?P(this.gamma.read(),u):null;return pp(r,g,y,b,x,this.epsilon)}else return pp(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!n)return d();let[h,c,m]=a4(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(g,y,b)=>{W(()=>{let x=1-b,w=g.read(),I=z(he(w,y),x);g.write(he(w,I))})};return f(this.movingMean,c,this.momentum),f(this.movingVariance,m,this.momentum),h})}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:wt(this.betaInitializer),gammaInitializer:wt(this.gammaInitializer),movingMeanInitializer:wt(this.movingMeanInitializer),movingVarianceInitializer:wt(this.movingVarianceInitializer),betaRegularizer:ot(this.betaRegularizer),gammaRegularizer:ot(this.gammaRegularizer),betaConstraint:Pt(this.betaConstraint),gammaConstraint:Pt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};$b.className="BatchNormalization";ne.registerClass($b);var Ab=class extends We{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(let t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=gt(e.betaInitializer||"zeros"),this.gammaInitializer=gt(e.gammaInitializer||"ones"),this.betaRegularizer=yt(e.betaRegularizer),this.gammaRegularizer=yt(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=Ze(e);let t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let a=0;a<this.axis.length;++a)this.axis[a]<0&&(this.axis[a]+=t);for(let a of this.axis)if(a<0||a>=t)throw new Error(`Invalid axis: ${a}`);if(this.axis.length!==Ra(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map(a=>e[a]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){let n=Ce(e),r=n.shape,a=r.length;return W(()=>{let{mean:s,variance:i}=Yp(n,this.axis,!0),o=Ws(1,a);for(let c of this.axis)o[c]=r[c];let u=c=>c!=null&&c.shape.length!==a?P(c,o):c,p=this.scale?u(this.gamma.read()):null,l=this.center?u(this.beta.read()):null,d=[],h=[];for(let c=0;c<a;++c)this.axis.indexOf(c)!==-1?(d.push(r[c]),h.push(1)):(d.push(1),h.push(r[c]));return s=Wn(s,d),i=Wn(i,d),p!=null&&(p=Wn(p,h)),l!=null&&(l=Wn(l,h)),pp(n,s,i,l,p,this.epsilon)})}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:wt(this.betaInitializer),gammaInitializer:wt(this.gammaInitializer),betaRegularizer:ot(this.betaRegularizer),gammaRegularizer:ot(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};Ab.className="LayerNormalization";ne.registerClass(Ab);function s4(e,t,n){return W(()=>{if(e.rank!==4)throw new V(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new V("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(n==null&&(n=_r()),n!=="channelsLast"&&n!=="channelsFirst")throw new V(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let r;return n==="channelsFirst"?r=[[0,0],[0,0],t[0],t[1]]:r=[[0,0],t[0],t[1],[0,0]],$r(e,r)})}var Fb=class extends We{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?_r():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new V(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new V(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new V(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new $t({ndim:4})]}computeOutputShape(e){e=Ze(e);let t,n;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?n=e[3]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],e[1],t,n]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?n=e[2]+this.padding[1][0]+this.padding[1][1]:n=null,[e[0],t,n,e[3]])}call(e,t){return W(()=>s4(Ce(e),this.padding,this.dataFormat))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};Fb.className="ZeroPadding2D";ne.registerClass(Fb);function om(e,t,n,r,a,s){return W(()=>{Tt(a),qk(s),ir(r),n==null&&(n=[1,1]),r==null&&(r="valid"),a==null&&(a=_r()),s==null&&(s="max"),e=Qy(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=Ut(e,t,n,o):i=ma(e,t,n,o),a==="channelsFirst"&&(i=ze(i,[0,3,1,2])),i})}function VI(e,t,n,r,a,s){return W(()=>{Tt(a),qk(s),ir(r),n==null&&(n=[1,1,1]),r==null&&(r="valid"),a==null&&(a=_r()),s==null&&(s="max"),e=LI(e,a);let i,o=r==="same"?"same":"valid";return s==="max"?i=Gg(e,t,n,o):i=gg(e,t,n,o),a==="channelsFirst"&&(i=ze(i,[0,4,1,2,3])),i})}var UI=class extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new V(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(jt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new V(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ir(this.padding),this.inputSpec=[new $t({ndim:3})]}computeOutputShape(e){e=Ze(e);let t=Tr(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return W(()=>{this.invokeCallHook(e,t),e=id(Ce(e),2);let n=this.poolingFunction(Ce(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ns(n,[2])})}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Rb=class extends UI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ir(r),om(e,t,n,r,a,"max")}};Rb.className="MaxPooling1D";ne.registerClass(Rb);var Db=class extends UI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ir(r),om(e,t,n,r,a,"avg")}};Db.className="AveragePooling1D";ne.registerClass(Db);var GI=class extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new V(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),ir(this.padding),this.inputSpec=[new $t({ndim:4})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Tr(t,this.poolSize[0],this.padding,this.strides[0]),n=Tr(n,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Mb=class extends GI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ir(r),om(e,t,n,r,a,"max")}};Mb.className="MaxPooling2D";ne.registerClass(Mb);var Ob=class extends GI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ir(r),om(e,t,n,r,a,"avg")}};Ob.className="AveragePooling2D";ne.registerClass(Ob);var HI=class extends We{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new V(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),ir(this.padding),this.inputSpec=[new $t({ndim:5})]}computeOutputShape(e){e=Ze(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],n=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Tr(t,this.poolSize[0],this.padding,this.strides[0]),n=Tr(n,this.poolSize[1],this.padding,this.strides[1]),r=Tr(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return W(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Lb=class extends HI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ir(r),VI(e,t,n,r,a,"max")}};Lb.className="MaxPooling3D";ne.registerClass(Lb);var zb=class extends HI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Tt(a),ir(r),VI(e,t,n,r,a,"avg")}};zb.className="AveragePooling3D";ne.registerClass(zb);var jI=class extends We{constructor(e){super(e),this.inputSpec=[new $t({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Le}},Pb=class extends jI{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Ce(e);return xt(n,1)})}};Pb.className="GlobalAveragePooling1D";ne.registerClass(Pb);var Bb=class extends jI{constructor(e){super(e||{})}call(e,t){return W(()=>{let n=Ce(e);return rr(n,1)})}};Bb.className="GlobalMaxPooling1D";ne.registerClass(Bb);var qI=class extends We{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Tt(this.dataFormat),this.inputSpec=[new $t({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Le}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Wb=class extends qI{call(e,t){return W(()=>{let n=Ce(e);return this.dataFormat==="channelsLast"?xt(n,[1,2]):xt(n,[2,3])})}};Wb.className="GlobalAveragePooling2D";ne.registerClass(Wb);var Vb=class extends qI{call(e,t){return W(()=>{let n=Ce(e);return this.dataFormat==="channelsLast"?rr(n,[1,2]):rr(n,[2,3])})}};Vb.className="GlobalMaxPooling2D";ne.registerClass(Vb);var KI=class extends We{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let r=t.layer,a=Nr(r,n);delete t.layer;let s={layer:a};return Object.assign(s,t),new e(s)}},Ub=class extends KI{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=Ze(e),e.length<3)throw new V(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=Ze(e);let t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return W(()=>(e=Ce(e),BI((n,r)=>[Ce(this.layer.call(n,t)),[]],e,[],!1,null,null,!1,!0)[1]))}};Ub.className="TimeDistributed";ne.registerClass(Ub);function i4(e){bo(pB,"BidirectionalMergeMode",e)}var o4="concat",Gb=class extends KI{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Nr(n),t.goBackwards=t.goBackwards!==!0;let r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Nr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?o4:e.mergeMode,i4(this.mergeMode),e.weights)throw new Le("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let n,r,a;return this.returnState&&(a=t.slice(1)),n=t[0],n=n,this.mergeMode==="concat"?(n[n.length-1]*=2,r=[n]):this.mergeMode==null?r=[n,n.slice()]:r=[n],this.returnState?this.mergeMode==null?r.concat(a).concat(a.slice()):[n].concat(a).concat(a.slice()):_n(r)}apply(e,t){let n=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});let a=PI(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(n==null||n.length===0)&&r==null)return super.apply(e,t);let s=[],i=[];if(n!=null){let u=n.length;if(u%2>0)throw new V("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let p=n.map(l=>new $t({shape:l.shape}));this.forwardLayer.stateSpec=p.slice(0,u/2),this.backwardLayer.stateSpec=p.slice(u/2),i.push(...p)}if(r!=null)throw new Le("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof Ir;for(let u of s)if(u instanceof Ir!==o)throw new V("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let u=[e].concat(s),p=this.inputSpec.concat(i),l=this.inputSpec;this.inputSpec=p;let d=super.apply(u,t);return this.inputSpec=l,d}else return super.apply(e,t)}call(e,t){return W(()=>{let n=t.initialState,r,a;if(n==null)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let o=n.slice(0,n.length/2),u=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:o})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let s;this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=sr(a,1));let i;return this.mergeMode==="concat"?i=Ty([r,a]):this.mergeMode==="sum"?i=J(r,a):this.mergeMode==="ave"?i=z(.5,J(r,a)):this.mergeMode==="mul"?i=z(r,a):this.mergeMode==null&&(i=[r,a]),this.returnState?this.mergeMode==null?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ns(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),Ns(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let n;if(this.returnSequences?this.mergeMode==null?n=[t,t]:n=t:this.mergeMode==null?n=[null,null]:n=null,this.returnState){let r=this.forwardLayer.states.map(a=>null);return Array.isArray(n)?n.concat(r).concat(r):[n].concat(r).concat(r)}else return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=Nr(t.layer);if(delete t.layer,t.numConstants!=null)throw new Le("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let r=t;return r.layer=n,new e(r)}};Gb.className="Bidirectional";ne.registerClass(Gb);var Hb=class extends We{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>(e=Ce(e),e.dtype!=="float32"&&(e=ha(e,"float32")),J(z(e,this.scale),this.offset)))}};Hb.className="Rescaling";ne.registerClass(Hb);var{resizeBilinear:l4,cropAndResize:u4}=Qn,jb=class extends We{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,r,a,s,i,o){return W(()=>{let u,p=!1,l=t/s,d=n/i,h=(r+t)/s,c=(a+n)/i,m=[l,d,h,c],f=[];e.rank===3?(p=!0,u=Lt([e])):u=e;for(let x=0;x<u.shape[0];x++)f.push(m);let g=mn(f,[f.length,4]),y=Bs(0,f.length,1,"int32"),b=u4(u,g,y,[r,a],"nearest");return ha(p?Ce(Nt(b)):b,o)})}upsize(e,t,n,r){return W(()=>{let a=l4(e,[t,n]);return ha(a,r)})}call(e,t){return W(()=>{let n=Ce(e),r=n.dtype,a=n.shape,s=a[a.length-3],i=a[a.length-2],o=0;s!==this.height&&(o=Math.floor((s-this.height)/2));let u=0;return i!==this.width&&(u=Math.floor((i-this.width)/2),u===0&&(u=1)),o>=0&&u>=0?this.centerCrop(n,o,u,this.height,this.width,s,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ze(e);let t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};jb.className="CenterCrop";ne.registerClass(jb);function p4(e,t,n,r){let a=Ce(e);if(a.dtype!=="int32"&&(a=ha(a,"int32")),t==="int")return a;let s=a.shape;if(a.rank===0&&(a=Qt(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Qt(a,-1)),a.rank>2)throw new V(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${a.rank}.`);let i=["multiHot","oneHot"].includes(t),o=a,u;if(typeof r<"u"&&t==="count"?u=vh(o,r,n,i):u=vh(o,[],n,i),t!=="tfIdf")return u;if(r)return z(u,r);throw new V("When outputMode is 'tfIdf', weights must be provided.")}var qb=class extends We{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=Ze(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return W(()=>{e=Ce(e),e.dtype!=="int32"&&(e=ha(e,"int32"));let n;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new V(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);n=Ce(t.countWeights)}let r=rr(e),a=Vo(e),s=kn(this.numTokens,r).bufferSync().get(0),i=fa(a,0).bufferSync().get(0);if(!(s&&i))throw new V(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return p4(e,this.outputMode,this.numTokens,n)})}};qb.className="CategoryEncoding";ne.registerClass(qb);var d4=["bilinear","nearest"],cw=new Set(d4),Kb=class extends We{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(cw.has(e.interpolation))this.interpolation=e.interpolation;else throw new V(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!e.cropToAspectRatio}computeOutputShape(e){e=Ze(e);let t=e[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return W(()=>{let n=[this.height,this.width];if(this.interpolation==="bilinear")return Qn.resizeBilinear(e,n,!this.cropToAspectRatio);if(this.interpolation==="nearest")return Qn.resizeNearestNeighbor(e,n,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...cw]} are supported`)})}};Kb.className="Resizing";ne.registerClass(Kb);var XI=class{constructor(e){this.seed=e}next(){if(this.seed!==void 0)return this.seed++}};XI.className="RandomSeed";var ZI=class extends We{constructor(e){super(e),this.randomGenerator=new XI(e.seed)}getConfig(){let e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}};ZI.className="BaseRandomLayer";var h4=["bilinear","nearest"],mw=new Set(h4),Xb=class extends ZI{constructor(e){super(e);let{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new V(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new V(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new V(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(n)if(mw.has(n))this.interpolation=n;else throw new V(`Invalid interpolation parameter: ${n} is not implemented`)}getConfig(){let e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=Ze(e);let t=e[2];return[this.imgHeight,-1,t]}call(e,t){return W(()=>{let n=Ce(e);this.imgHeight=n.shape[n.shape.length-3];let r=n.shape[n.shape.length-2];this.widthFactor=es([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let a=this.widthFactor.dataSync()[0]*r;a=Math.round(a);let s=[this.imgHeight,a];switch(this.interpolation){case"bilinear":return Qn.resizeBilinear(e,s);case"nearest":return Qn.resizeNearestNeighbor(e,s);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...mw]} are supported`)}})}};Xb.className="RandomWidth";ne.registerClass(Xb);function c4(e){return new gu(e)}function m4(e){return new Zy(e)}function f4(e){return new qy(e)}function g4(e){return new Ky(e)}function y4(e){return new Xy(e)}function b4(e){return new Yy(e)}function x4(e){return new Jy(e)}function v4(e){return new tm(e)}function w4(e){return new hd(e)}function k4(e){return new tb(e)}function I4(e){return new cd(e)}function S4(e){return new nb(e)}function N4(e){return new rb(e)}function T4(e){return new ab(e)}function C4(e){return new sb(e)}function _4(e){return new ib(e)}function E4(e){return new mb(e)}function $4(e){return new hb(e)}function A4(e){return new im(e)}function F4(e){return new db(e)}function R4(e){return new cb(e)}function D4(e){return new fb(e)}function M4(e){return new gb(e)}function O4(e){return new yb(e)}function L4(e){return new xb(e)}function z4(e){return new vb(e)}function P4(e){return new kb(e)}function B4(e){return new Nb(e)}function W4(e){return new Ib(e)}function V4(e){return new Sb(e)}function U4(e){return new wb(e)}function G4(e){return new Tb(e)}function H4(e){return new $b(e)}function j4(e){return new Ab(e)}function q4(e){return new Fb(e)}function Zb(e){return new Db(e)}function K4(e){return Zb(e)}function X4(e){return Zb(e)}function Jb(e){return new Ob(e)}function Z4(e){return Jb(e)}function J4(e){return Jb(e)}function Yb(e){return new zb(e)}function Y4(e){return Yb(e)}function Q4(e){return Yb(e)}function eV(e){return new Pb(e)}function tV(e){return new Wb(e)}function JI(e){return new Bb(e)}function YI(e){return new Vb(e)}function QI(e){return new Rb(e)}function eS(e){return new Mb(e)}function nV(e){return new Lb(e)}function rV(e){return new lb(e)}function aV(e){return new rm(e)}function sV(e){return new ub(e)}function iV(e){return new fd(e)}function oV(e){return new ob(e)}function lV(e){return new nm(e)}function uV(e){return new pb(e)}function pV(e){return new sm(e)}function dV(e){return new Zr(e)}function hV(e){return new am(e)}function cV(e){return new Gb(e)}function mV(e){return new Ub(e)}var fV=JI,gV=YI,yV=QI,bV=eS;function xV(e){return new Cb(e)}function vV(e){return new _b(e)}function wV(e){return new Eb(e)}function kV(e){return new bb(e)}function IV(e){return new Hb(e)}function SV(e){return new jb(e)}function NV(e){return new Kb(e)}function TV(e){return new qb(e)}function CV(e){return new Xb(e)}var tS={};Ee(tS,{MAPE:()=>zV,MSE:()=>WV,binaryAccuracy:()=>_V,binaryCrossentropy:()=>EV,categoricalAccuracy:()=>AV,categoricalCrossentropy:()=>FV,cosineProximity:()=>MV,mape:()=>PV,meanAbsoluteError:()=>OV,meanAbsolutePercentageError:()=>LV,meanSquaredError:()=>BV,mse:()=>VV,precision:()=>RV,recall:()=>DV,sparseCategoricalAccuracy:()=>$V});function _V(e,t){return Wy(e,t)}function EV(e,t){return cI(e,t)}function $V(e,t){return mI(e,t)}function AV(e,t){return Vy(e,t)}function FV(e,t){return Uy(e,t)}function RV(e,t){return hI(e,t)}function DV(e,t){return mW(e,t)}function MV(e,t){return By(e,t)}function OV(e,t){return Qc(e,t)}function LV(e,t){return yu(e,t)}function zV(e,t){return yu(e,t)}function PV(e,t){return yu(e,t)}function BV(e,t){return xo(e,t)}function WV(e,t){return xo(e,t)}function VV(e,t){return xo(e,t)}var nS={};Ee(nS,{modelFromJSON:()=>VW});var rS={};Ee(rS,{l1:()=>GV,l1l2:()=>UV,l2:()=>HV});function UV(e){return new pd(e)}function GV(e){return XW(e)}function HV(e){return ZW(e)}var aS=class extends Jo{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof la))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function Hd(e,t){return e<t}function fw(e,t){return e>t}var sS=class extends aS{constructor(e){if(super(),e==null&&(e={}),e.restoreBestWeights)throw new Le("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,["auto","min","max"].indexOf(this.mode)===-1&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),this.mode==="min"?this.monitorFunc=Hd:this.mode==="max"?this.monitorFunc=fw:this.monitor.indexOf("acc")!==-1?this.monitorFunc=fw:this.monitorFunc=Hd,this.monitorFunc===Hd&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,this.baseline!=null?this.best=this.baseline:this.best=this.monitorFunc===Hd?1/0:-1/0}async onEpochEnd(e,t){await Sa(t);let n=this.getMonitorValue(t);n!=null&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){e==null&&(e={});let t=e[this.monitor];return t==null&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function jV(e){return new sS(e)}var qV={earlyStopping:jV},KV=H();KV.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});var pr;(function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"})(pr||(pr={}));var gw;(function(e){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))})(gw||(gw={}));var Qb={};function XV(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Qb[e]=n}function iS(e){return Qb[e]}function ZV(e){delete Qb[e]}function k(e,t,n,r,a){let s=t.inputParams[e];if(s&&s.inputIndexStart!==void 0){let o=s.inputIndexStart,u=s.inputIndexEnd===0?void 0:s.inputIndexEnd===void 0?o+1:s.inputIndexEnd,p=o<0?t.inputNames.length+o:o;if(s.type==="tensor")return en(t.inputNames[p],n,r,a);if(s.type==="tensors"){let h=t.inputs.slice(o,u);return t.inputNames.slice(o,u).filter((c,m)=>{var f;return((f=h[m])===null||f===void 0?void 0:f.op)!=="NoOp"}).map(c=>en(c,n,r,a))}let l=en(t.inputNames[p],n,r,a),d=l.dataSync();return s.type==="number"?d[0]:v.toNestedArray(l.shape,d)}let i=t.attrParams[e];return i&&i.value}function en(e,t,n,r){let[a,s]=Pn(e,n);if(r!=null){let o=r.getHashTableHandleByName(a);if(o!=null)return o}let i=n.currentContextIds.find(o=>!!t[$h(a,o)]);return i!==void 0?t[$h(a,i)][s]:void 0}function yw(e,t,n){return t[$h(e,n.currentContextId)]}function aa(e,t){let[n,r,a]=Pn(e,t);return[$h(n,t&&t.currentContextId),r,a]}function $h(e,t){return t?`${e}-${t}`:e}function Pn(e,t){if(e==="")return["",0,void 0];let n=t!=null&&t.parseNodeNameCache!=null;if(n){let s=t.parseNodeNameCache.get(e);if(s!=null)return s}let r=e.split(":"),a;if(r.length===1)a=[e,0,void 0];else{let s=r[0],i=r.length===3?r[1]:void 0,o=Number(r[r.length-1]);a=[s,o,i]}return n&&t.parseNodeNameCache.set(e,a),a}function ah(e,t,n){let r=k("pad",e,t,n);if(r==="explicit"){r=k("explicitPaddings",e,t,n);let a=[[0,0],[0,0],[0,0],[0,0]];for(let s=0;s<4;s++)a[s][0]=r[s*2],a[s][1]=r[s*2+1];return a}return r}function sa(e){return e.kept?e:Br(e)}var oS={};Ee(oS,{json:()=>JV});var JV=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],lS={};Ee(lS,{json:()=>YV});var YV=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],uS={};Ee(uS,{json:()=>QV});var QV=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],pS={};Ee(pS,{json:()=>eU});var eU=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],dS={};Ee(dS,{json:()=>tU});var tU=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],hS={};Ee(hS,{json:()=>nU});var nU=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],cS={};Ee(cS,{json:()=>rU});var rU=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],mS={};Ee(mS,{json:()=>aU});var aU=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],fS={};Ee(fS,{json:()=>sU});var sU=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],gS={};Ee(gS,{json:()=>iU});var iU=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],yS={};Ee(yS,{json:()=>oU});var oU=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],bS={};Ee(bS,{json:()=>lU});var lU=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],xS={};Ee(xS,{json:()=>uU});var uU=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],vS={};Ee(vS,{json:()=>pU});var pU=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],wS={};Ee(wS,{json:()=>dU});var dU=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],kS={};Ee(kS,{json:()=>hU});var hU=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],IS={};Ee(IS,{json:()=>cU});var cU=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],SS={};Ee(SS,{json:()=>mU});var mU=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],NS={};Ee(NS,{json:()=>fU});var fU=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],bw=class{static get Instance(){return this._instance||(this._instance=new this)}constructor(){let e=[oS,lS,uS,pS,dS,hS,cS,mS,fS,gS,yS,bS,xS,vS,wS,kS,IS,SS,NS],t=[].concat(...e.map(n=>n.json));this.opMappers=t.reduce((n,r)=>(n[r.tfOpName]=r,n),{})}transformGraph(e,t={}){let n=e.node,r=[],a=[],s=[],i=n.reduce((m,f)=>(m[f.name]=this.mapNode(f),f.op.startsWith("Placeholder")?r.push(m[f.name]):f.op==="Const"?a.push(m[f.name]):(f.input==null||f.input.length===0)&&s.push(m[f.name]),m),{}),o=[],u=[],p={},l={};t!=null&&(p=this.mapSignatureEntries(t.inputs),l=this.mapSignatureEntries(t.outputs));let d=Object.keys(i);d.forEach(m=>{let f=i[m];f.inputNames.forEach((g,y)=>{let[b,,x]=aa(g),w=i[b];if(w.outputs!=null){let I=w.outputs.indexOf(x);if(I!==-1){let T=`${b}:${I}`;f.inputNames[y]=T}}f.inputs.push(w),w.children.push(f)})}),Object.keys(l).length===0?d.forEach(m=>{let f=i[m];f.children.length===0&&u.push(f)}):Object.keys(l).forEach(m=>{let[f]=aa(m),g=i[f];g!=null&&(g.signatureKey=l[m],u.push(g))}),Object.keys(p).length>0?Object.keys(p).forEach(m=>{let[f]=aa(m),g=i[f];g&&(g.signatureKey=p[m],o.push(g))}):o=r;let h={};e.library!=null&&e.library.function!=null&&(h=e.library.function.reduce((m,f)=>(m[f.signature.name]=this.mapFunction(f),m),{}));let c={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){let t=iS(e.op)||this.opMappers[e.op]||{};e.attr==null&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(r=>r.startsWith("^")?r.slice(1):r),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return t.inputs!=null&&(n.inputParams=t.inputs.reduce((r,a)=>(r[a.name]={type:a.type,inputIndexStart:a.start,inputIndexEnd:a.end},r),{})),t.attrs!=null&&(n.attrParams=t.attrs.reduce((r,a)=>{let s=a.type,i;switch(a.type){case"string":i=gf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=gf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"string[]":i=If(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=If(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number":i=bf(e.attr,a.tfName,a.defaultValue||0),i===void 0&&a.tfDeprecatedName&&(i=bf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"number[]":i=kf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=kf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool":i=yf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=yf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"bool[]":i=Nf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Nf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape":i=wf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=wf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"shape[]":i=Sf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=Sf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype":i=xf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=xf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"dtype[]":i=vf(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=vf(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"func":i=xw(e.attr,a.tfName,a.defaultValue),i===void 0&&a.tfDeprecatedName&&(i=xw(e.attr,a.tfDeprecatedName,a.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${a.type} for op: ${e.op}`)}return r[a.name]={value:i,type:s},r},{})),n}mapFunction(e){let t=e.nodeDef,n=[],r=[],a={};t!=null&&(a=t.reduce((p,l)=>(p[l.name]=this.mapNode(l),l.op==="Const"&&r.push(p[l.name]),p),{}));let s=[],i=[];e.signature.inputArg.forEach(p=>{let[l]=aa(p.name),d={name:l,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:ex(p.type),type:"dtype"}},children:[]};d.signatureKey=p.name,s.push(d),a[l]=d}),Object.keys(a).forEach(p=>{let l=a[p];l.inputNames.forEach((d,h)=>{let[c,,m]=aa(d),f=a[c];if(f.outputs!=null){let g=f.outputs.indexOf(m);if(g!==-1){let y=`${c}:${g}`;l.inputNames[h]=y}}l.inputs.push(f),f.children.push(l)})});let o=e.ret;e.signature.outputArg.forEach(p=>{let[l,d]=aa(o[p.name]),h=a[l];h!=null&&(h.defaultOutput=d,i.push(h))});let u=this.mapArgsToSignature(e);return{nodes:a,inputs:s,outputs:i,weights:r,placeholders:n,signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n),t),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return t!=null&&(n=t[n]),{name:n,dtype:e.type}}};function gU(e){let t=H().global;if(typeof t.atob<"u")return t.atob(e);if(typeof Buffer<"u")return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function TS(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):gU(e);return t?n:n.toLowerCase()}function gf(e,t,n,r=!1){let a=e[t];return a!=null?TS(a.s,r):n}function yf(e,t,n){let r=e[t];return r?r.b:n}function bf(e,t,n){let r=e[t]||{},a=r.i!=null?r.i:r.f!=null?r.f:n;return typeof a=="number"?a:parseInt(a,10)}function ex(e){switch(typeof e=="string"&&(e=pr[e]),e){case pr.DT_FLOAT:case pr.DT_HALF:return"float32";case pr.DT_INT32:case pr.DT_INT64:case pr.DT_INT8:case pr.DT_UINT8:return"int32";case pr.DT_BOOL:return"bool";case pr.DT_DOUBLE:return"float32";case pr.DT_STRING:return"string";default:return null}}function xw(e,t,n){let r=e[t];return r&&r.func?r.func.name:n}function xf(e,t,n){let r=e[t];return r&&r.type?ex(r.type):n}function vf(e,t,n){let r=e[t];return r&&r.list&&r.list.type?r.list.type.map(a=>ex(a)):n}function CS(e){if(!e.unknownRank)return e.dim!=null?e.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function wf(e,t,n){let r=e[t];return r&&r.shape?CS(r.shape):n}function kf(e,t,n){let r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):n}function If(e,t,n,r=!1){let a=e[t];return a&&a.list&&a.list.s?a.list.s.map(s=>TS(s,r)):n}function Sf(e,t,n){let r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(a=>CS(a)):n}function Nf(e,t,n){let r=e[t];return r&&r.list&&r.list.b?r.list.b:n}var yU=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(r=>this.getInput(r)),e.rawAttrs!=null&&(this.attrs=Object.keys(e.rawAttrs).reduce((r,a)=>(r[a]=this.getAttr(a),r),{}))}getInput(e){return en(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(n.tensor!=null)return en(e,this.tensorMap,this.context);if(n.i!=null||n.f!=null)return bf(this.node.rawAttrs,e,t);if(n.s!=null)return gf(this.node.rawAttrs,e,t);if(n.b!=null)return yf(this.node.rawAttrs,e,t);if(n.shape!=null)return wf(this.node.rawAttrs,e,t);if(n.type!=null)return xf(this.node.rawAttrs,e,t);if(n.list!=null){if(n.list.i!=null||n.list.f!=null)return kf(this.node.rawAttrs,e,t);if(n.list.s!=null)return If(this.node.rawAttrs,e,t);if(n.list.shape!=null)return Sf(this.node.rawAttrs,e,t);if(n.list.b!=null)return Nf(this.node.rawAttrs,e,t);if(n.list.type!=null)return vf(this.node.rawAttrs,e,t)}return t}},Xt={};Ee(Xt,{OP_SCOPE_SUFFIX:()=>rg,abs:()=>Et,acos:()=>og,acosh:()=>lg,add:()=>J,addN:()=>t1,all:()=>dc,any:()=>ap,argMax:()=>Ms,argMin:()=>ug,asin:()=>pg,asinh:()=>dg,atan:()=>hg,atan2:()=>cg,atanh:()=>mg,avgPool:()=>ma,avgPool3d:()=>gg,basicLSTMCell:()=>s1,batchNorm:()=>mo,batchNorm2d:()=>yg,batchNorm3d:()=>bg,batchNorm4d:()=>xg,batchToSpaceND:()=>jp,bincount:()=>vg,bitwiseAnd:()=>i1,booleanMaskAsync:()=>Z1,broadcastArgs:()=>o1,broadcastTo:()=>Ss,buffer:()=>Pe,cast:()=>se,ceil:()=>wg,clipByValue:()=>on,clone:()=>Br,complex:()=>pa,concat:()=>at,concat1d:()=>kg,concat2d:()=>Ig,concat3d:()=>Sg,concat4d:()=>Ng,conv1d:()=>hc,conv2d:()=>fn,conv2dTranspose:()=>cc,conv3d:()=>Cg,conv3dTranspose:()=>_g,cos:()=>qp,cosh:()=>mc,cosineWindow:()=>Lc,cumprod:()=>op,cumsum:()=>fc,denseBincount:()=>vh,depthToSpace:()=>Eg,depthwiseConv2d:()=>fo,diag:()=>u1,dilation2d:()=>$g,div:()=>fe,divNoNan:()=>Ag,dot:()=>Fg,dropout:()=>ly,einsum:()=>d1,elu:()=>uu,enclosingPowerOfTwo:()=>uy,ensureShape:()=>h1,equal:()=>Gn,erf:()=>Rg,euclideanNorm:()=>Og,exp:()=>gn,expandDims:()=>Qt,expm1:()=>Lg,eye:()=>gc,fft:()=>nd,fill:()=>Un,floor:()=>du,floorDiv:()=>pc,fused:()=>Ko,gather:()=>hu,gatherND:()=>ek,greater:()=>kn,greaterEqual:()=>fa,ifft:()=>qo,imag:()=>Kp,image:()=>Qn,inTopKAsync:()=>tk,irfft:()=>$c,isFinite:()=>zg,isInf:()=>Pg,isNaN:()=>Bg,leakyRelu:()=>Xp,less:()=>Uo,lessEqual:()=>Qa,linalg:()=>hy,linspace:()=>y1,localResponseNormalization:()=>Wg,log:()=>Hn,log1p:()=>Zp,logSigmoid:()=>Vg,logSoftmax:()=>bc,logSumExp:()=>xc,logicalAnd:()=>fr,logicalNot:()=>Jp,logicalOr:()=>vc,logicalXor:()=>Ug,losses:()=>ck,lowerBound:()=>x1,matMul:()=>Oe,max:()=>rr,maxPool:()=>Ut,maxPool3d:()=>Gg,maxPoolWithArgmax:()=>v1,maximum:()=>Kr,mean:()=>xt,meshgrid:()=>w1,min:()=>Vo,minimum:()=>za,mirrorPad:()=>Hg,mod:()=>jg,moments:()=>Yp,movingAverage:()=>J1,mul:()=>z,multiRNNCell:()=>k1,multinomial:()=>I1,neg:()=>ht,norm:()=>pu,notEqual:()=>Ps,oneHot:()=>Go,ones:()=>Vn,onesLike:()=>jn,op:()=>L,outerProduct:()=>S1,pad:()=>$r,pad1d:()=>N1,pad2d:()=>T1,pad3d:()=>C1,pad4d:()=>_1,pool:()=>qg,pow:()=>da,prelu:()=>ed,print:()=>ig,prod:()=>Kg,raggedGather:()=>E1,raggedRange:()=>$1,raggedTensorToTensor:()=>A1,rand:()=>F1,randomGamma:()=>O1,randomNormal:()=>kc,randomStandardNormal:()=>L1,randomUniform:()=>es,randomUniformInt:()=>z1,range:()=>Bs,real:()=>Ho,reciprocal:()=>Qg,relu:()=>et,relu6:()=>Ic,reshape:()=>P,reverse:()=>sr,reverse1d:()=>P1,reverse2d:()=>B1,reverse3d:()=>W1,reverse4d:()=>V1,rfft:()=>rd,round:()=>Sc,rsqrt:()=>Nc,scalar:()=>we,scatterND:()=>Y1,searchSorted:()=>wc,selu:()=>Tc,separableConv2d:()=>cu,setdiff1dAsync:()=>U1,sigmoid:()=>mr,sign:()=>ey,signal:()=>hk,sin:()=>Cc,sinh:()=>_c,slice:()=>Ue,slice1d:()=>td,slice2d:()=>Ec,slice3d:()=>mu,slice4d:()=>jo,softmax:()=>ts,softplus:()=>go,spaceToBatchND:()=>Qp,sparse:()=>mk,sparseToDense:()=>Q1,spectral:()=>dk,split:()=>En,sqrt:()=>rn,square:()=>rt,squaredDifference:()=>Ac,squeeze:()=>ns,stack:()=>Lt,step:()=>yo,stridedSlice:()=>ty,string:()=>fk,sub:()=>he,sum:()=>ge,tan:()=>ny,tanh:()=>Ls,tensor:()=>mn,tensor1d:()=>Qe,tensor2d:()=>Wr,tensor3d:()=>Fc,tensor4d:()=>Pa,tensor5d:()=>G1,tensor6d:()=>H1,tensorScatterUpdate:()=>q1,tile:()=>Wn,topk:()=>ay,transpose:()=>ze,truncatedNormal:()=>Mc,unique:()=>sy,unsortedSegmentSum:()=>Oc,unstack:()=>Nt,upperBound:()=>K1,variable:()=>iy,where:()=>qt,whereAsync:()=>oy,zeros:()=>vt,zerosLike:()=>He});var bU=(e,t,n,r=Xt)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[r.add(k("a",e,t,n),k("b",e,t,n))];case"AddN":return[r.addN(k("tensors",e,t,n))];case"FloorMod":case"Mod":return[r.mod(k("a",e,t,n),k("b",e,t,n))];case"Mul":return[r.mul(k("a",e,t,n),k("b",e,t,n))];case"RealDiv":case"Div":return[r.div(k("a",e,t,n),k("b",e,t,n))];case"DivNoNan":return[r.divNoNan(k("a",e,t,n),k("b",e,t,n))];case"FloorDiv":return[r.floorDiv(k("a",e,t,n),k("b",e,t,n))];case"Sub":return[r.sub(k("a",e,t,n),k("b",e,t,n))];case"Minimum":return[r.minimum(k("a",e,t,n),k("b",e,t,n))];case"Maximum":return[r.maximum(k("a",e,t,n),k("b",e,t,n))];case"Pow":return[r.pow(k("a",e,t,n),k("b",e,t,n))];case"SquaredDifference":return[r.squaredDifference(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},xU=(e,t,n,r=Xt)=>{switch(e.op){case"Abs":case"ComplexAbs":return[r.abs(k("x",e,t,n))];case"Acos":return[r.acos(k("x",e,t,n))];case"Acosh":return[r.acosh(k("x",e,t,n))];case"Asin":return[r.asin(k("x",e,t,n))];case"Asinh":return[r.asinh(k("x",e,t,n))];case"Atan":return[r.atan(k("x",e,t,n))];case"Atan2":return[r.atan2(k("x",e,t,n),k("y",e,t,n))];case"Atanh":return[r.atanh(k("x",e,t,n))];case"Ceil":return[r.ceil(k("x",e,t,n))];case"Complex":return[r.complex(k("real",e,t,n),k("imag",e,t,n))];case"Cos":return[r.cos(k("x",e,t,n))];case"Cosh":return[r.cosh(k("x",e,t,n))];case"Elu":return[r.elu(k("x",e,t,n))];case"Erf":return[r.erf(k("x",e,t,n))];case"Exp":return[r.exp(k("x",e,t,n))];case"Expm1":return[r.expm1(k("x",e,t,n))];case"Floor":return[r.floor(k("x",e,t,n))];case"Log":return[r.log(k("x",e,t,n))];case"Log1p":return[r.log1p(k("x",e,t,n))];case"Imag":return[r.imag(k("x",e,t,n))];case"Neg":return[r.neg(k("x",e,t,n))];case"Reciprocal":return[r.reciprocal(k("x",e,t,n))];case"Real":return[r.real(k("x",e,t,n))];case"Relu":return[r.relu(k("x",e,t,n))];case"Round":return[r.round(k("x",e,t,n))];case"Selu":return[r.selu(k("x",e,t,n))];case"Sigmoid":return[r.sigmoid(k("x",e,t,n))];case"Sin":return[r.sin(k("x",e,t,n))];case"Sign":return[r.sign(k("x",e,t,n))];case"Sinh":return[r.sinh(k("x",e,t,n))];case"Softplus":return[r.softplus(k("x",e,t,n))];case"Sqrt":return[r.sqrt(k("x",e,t,n))];case"Square":return[r.square(k("x",e,t,n))];case"Tanh":return[r.tanh(k("x",e,t,n))];case"Tan":return[r.tan(k("x",e,t,n))];case"ClipByValue":return[r.clipByValue(k("x",e,t,n),k("clipValueMin",e,t,n),k("clipValueMax",e,t,n))];case"Relu6":return[r.relu6(k("x",e,t,n))];case"Rsqrt":return[r.rsqrt(en(e.inputNames[0],t,n))];case"LeakyRelu":return[r.leakyRelu(k("x",e,t,n),k("alpha",e,t,n))];case"Prelu":return[r.prelu(k("x",e,t,n),k("alpha",e,t,n))];case"IsNan":return[r.isNaN(en(e.inputNames[0],t,n))];case"IsInf":return[r.isInf(en(e.inputNames[0],t,n))];case"IsFinite":return[r.isFinite(en(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function cr(e,t,n=""){if(!(typeof e=="number"||typeof t=="number")){v.assert(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){let a=e[r],s=t[r];v.assert(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function vw(e){return!(typeof e=="number"||e.some(t=>t<0))}function Ou(e,t,n){let r=Tf(e,n),a=!vw(r);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(s=>{r=Tf(s.shape,r)}),!vw(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Tf(e,t){if(typeof e=="number")return t;if(typeof t=="number")return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let r=0;r<e.length;++r){let a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}var vU=class{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=we(0),Mt(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.tensor.id))&&t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(t=>this.read(t))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},
          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=t.shape),cr(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Mt(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((n,r)=>this.write(n,t[r]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let r=0;r<this.size();r++)e.push(r)}if(e.length===0)return mn([],[0].concat(this.elementShape));let n=this.readMany(e);return cr(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Lt(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(this.size()===0)return mn([],[0].concat(this.elementShape));let t=[];for(let r=0;r<this.size();r++)t.push(r);let n=this.readMany(t);return cr(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),at(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Nt(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,r=e.map(o=>(n+=o,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let a=n===0?0:t.size/n,s=[];W(()=>{t=P(t,[1,n,a]);for(let o=0;o<e.length;++o){let u=[0,o===0?0:r[o-1],0],p=[1,e[o],a];s[o]=P(Ue(t,u,p),this.elementShape)}return s});let i=[];for(let o=0;o<e.length;o++)i[o]=o;this.writeMany(i,s)}},Qo=class{get id(){return this.idTensor.id}constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,e!=null&&e.forEach(a=>{if(n!==a.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${a.dtype}`);cr(t,a.shape,"TensorList shape mismatch: "),Mt(a)}),this.idTensor=we(0),this.maxNumElements=r,Mt(this.idTensor)}copy(){return new Qo([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{(e==null||!e.has(t.id))&&t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(n!==-1&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);cr(e,this.elementShape,"TensorList shape mismatch: ");let r=Ou(this.elementShape,this.tensors,e);return W(()=>{let a=this.tensors.map(s=>P(s,r));return Lt(a,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");let n=Ou(this.elementShape,this.tensors,e),r=this.tensors.pop();return r.kept=!1,cr(r.shape,e,"TensorList shape mismatch: "),P(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(cr(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Mt(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(this.maxNumElements!==-1&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new Qo([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(this.tensors[e]==null)throw new Error(`element at index ${e} is null.`);cr(this.tensors[e].shape,t,"TensorList shape mismatch: ");let r=Ou(this.elementShape,this.tensors,t);return P(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||this.maxNumElements!==-1&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);cr(this.elementShape,t.shape,"TensorList shape mismatch: "),Mt(t),this.tensors[e]!=null&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);cr(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let r=Ou(this.elementShape,this.tensors,n);return e.length===0?mn([],[0].concat(r)):W(()=>{let a=e.map(s=>P(this.tensors[s],r));return Lt(a,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);cr(this.elementShape,t,"TensorList shape mismatch: ");let n=Ou(this.elementShape,this.tensors,t);return this.size()===0?mn([],[0].concat(n)):W(()=>{let r=this.tensors.map(a=>P(a,n));return at(r,0)})}};function wU(e,t,n){let r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);let a=e.shape.slice(1);cr(a,t,"TensorList shape mismatch: ");let s=Nt(e);return new Qo(s,t,r)}function kU(e,t,n,r){return new Qo([],e,t,r)}function IU(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let a=Math.max(...t);if(r!=null&&r!==-1&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);let s=new Qo([],n,e.dtype,r),i=Nt(e,0);return t.forEach((o,u)=>{s.setItem(o,i[u])}),s}function SU(e,t,n){let r=0,a=t.map(l=>(r+=l,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${r}, and tensor's shape is: ${e.shape}`);let s=e.shape.slice(1),i=Tf(s,n),o=r===0?0:e.size/r,u=W(()=>{let l=[];e=P(e,[1,r,o]);for(let d=0;d<t.length;++d){let h=[0,d===0?0:a[d-1],0],c=[1,t[d],o];l[d]=P(Ue(e,h,c),i)}return e.dispose(),l}),p=new Qo([],n,e.dtype,t.length);for(let l=0;l<u.length;l++)p.setItem(l,u[l]);return p}var NU=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let r=k("thenBranch",e,t,n),a=k("elseBranch",e,t,n),s=k("cond",e,t,n),i=k("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let r=k("body",e,t,n),a=k("cond",e,t,n),s=k("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(l=>l.id),u=await i[0].data();i.forEach(l=>{!l.kept&&o.indexOf(l.id)===-1&&l.dispose()});let p=s;for(;u[0];){let l=p;p=await n.functionMap[r].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);let d=p.map(c=>c.id);l.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&d.indexOf(c.id)===-1&&c.dispose()});let h=await n.functionMap[a].executeFunctionAsync(p,n.tensorArrayMap,n.tensorListMap);u=await h[0].data(),h.forEach(c=>{!c.kept&&o.indexOf(c.id)===-1&&d.indexOf(c.id)===-1&&c.dispose()})}return p}case"LoopCond":{let r=k("pred",e,t,n);return[sa(r)]}case"Switch":{let r=k("pred",e,t,n),a=k("data",e,t,n);return a.kept||(a=sa(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{let r=e.inputNames.find(a=>en(a,t,n)!==void 0);if(r){let a=en(r,t,n);return[sa(a)]}return}case"Enter":{let r=k("frameName",e,t,n),a=k("tensor",e,t,n);return n.enterFrame(r),[sa(a)]}case"Exit":{let r=k("tensor",e,t,n);return n.exitFrame(),[sa(r)]}case"NextIteration":{let r=k("tensor",e,t,n);return n.nextIteration(),[sa(r)]}case"TensorArrayV3":{let r=k("size",e,t,n),a=k("dtype",e,t,n),s=k("elementShape",e,t,n),i=k("dynamicSize",e,t,n),o=k("clearAfterRead",e,t,n),u=k("identicalElementShapes",e,t,n),p=k("name",e,t,n),l=new vU(p,a,r,s,u,i,o);return n.addTensorArray(l),[l.idTensor,we(1)]}case"TensorArrayWriteV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{let r=k("tensorArrayId",e,t,n),a=k("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{let r=k("tensorArrayId",e,t,n),a=k("indices",e,t,n),s=k("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=k("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{let r=k("tensorArrayId",e,t,n),a=k("tensor",e,t,n),s=k("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[we(a.size(),"int32")]}case"TensorArrayCloseV3":{let r=k("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{let r=k("tensorListId",e,t,n),a=k("index",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let r=k("indices",e,t,n),a=k("tensor",e,t,n),s=k("elementShape",e,t,n),i=k("numElements",e,t,n),o=IU(a,r,s,i);return n.addTensorList(o),[o.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let r=k("elementShape",e,t,n),a=k("elementDType",e,t,n),s;e.op==="TensorListReserve"?s="numElements":s="maxNumElements";let i=k(s,e,t,n),o=e.op==="TensorListReserve"?-1:i,u=kU(r,a,i,o);return n.addTensorList(u),[u.idTensor]}case"TensorListGather":{let r=k("tensorListId",e,t,n),a=k("indices",e,t,n),s=k("elementShape",e,t,n),i=k("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=k("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n),i=wU(r,a,s);return n.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id),s=k("dtype",e,t,n),i=k("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{let r=k("tensorListId",e,t,n),a=k("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{let r=k("tensorListId",e,t,n),a=k("elementShape",e,t,n),s=k("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{let r=k("tensor",e,t,n),a=k("elementShape",e,t,n),s=k("lengths",e,t,n),i=SU(r,s,a);return n.addTensorList(i),[i.idTensor]}case"TensorListLength":{let r=k("tensorListId",e,t,n),a=n.getTensorList(r.id);return[we(a.size(),"int32")]}case"TensorListResize":{let r=k("tensorListId",e,t,n),a=k("size",e,t,n),s=n.getTensorList(r.id).resize(a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function ww(e,t,n){let[r,a]=k("fusedOps",e,t,n),s=r==="biasadd",i=!s,o=a==="prelu",u=r==="fusedbatchnorm",p=k("numArgs",e,t,n);if(s){if(o&&p!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&p!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let l=k("strides",e,t,n),d=ah(e,t,n),h=k("dataFormat",e,t,n).toUpperCase(),c=k("dilations",e,t,n),[m,f]=k("args",e,t,n);i&&(f=m,m=void 0);let g=k("leakyreluAlpha",e,t,n);return{stride:l,pad:d,dataFormat:h,dilations:c,biasArg:m,preluArg:f,activationFunc:a,leakyreluAlpha:g}}var TU=(e,t,n,r=Xt)=>{switch(e.op){case"Conv1D":{let a=k("stride",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilation",e,t,n);return[r.conv1d(k("x",e,t,n),k("filter",e,t,n),a,s,i,o)]}case"Conv2D":{let a=k("strides",e,t,n),s=ah(e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv2d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:u,preluArg:p,activationFunc:l,leakyreluAlpha:d}=ww(e,t,n);return[r.fused.conv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:p,leakyreluAlpha:d})]}case"FusedDepthwiseConv2dNative":{let{stride:a,pad:s,dataFormat:i,dilations:o,biasArg:u,preluArg:p,activationFunc:l,leakyreluAlpha:d}=ww(e,t,n);return[r.fused.depthwiseConv2d({x:k("x",e,t,n),filter:k("filter",e,t,n),strides:[a[1],a[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:u,activation:l,preluActivationWeights:p,leakyreluAlpha:d})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let a=k("outputShape",e,t,n),s=k("strides",e,t,n),i=ah(e,t,n);return[r.conv2dTranspose(k("x",e,t,n),k("filter",e,t,n),a,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let a=k("strides",e,t,n),s=ah(e,t,n),i=k("dilations",e,t,n),o=k("dataFormat",e,t,n).toUpperCase();return[r.depthwiseConv2d(k("input",e,t,n),k("filter",e,t,n),[a[1],a[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dataFormat",e,t,n).toUpperCase(),o=k("dilations",e,t,n);return[r.conv3d(k("x",e,t,n),k("filter",e,t,n),[a[1],a[2],a[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPool":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s)]}case"MaxPoolWithArgmax":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n),o=k("includeBatchInIndex",e,t,n),{result:u,indexes:p}=r.maxPoolWithArgmax(k("x",e,t,n),[i[1],i[2]],[a[1],a[2]],s,o);return[u,p]}case"AvgPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.avgPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"MaxPool3D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("kernelSize",e,t,n);return[r.maxPool3d(k("x",e,t,n),[i[1],i[2],i[3]],[a[1],a[2],a[3]],s)]}case"Dilation2D":{let a=k("strides",e,t,n),s=k("pad",e,t,n),i=k("dilations",e,t,n),o=a[1],u=a[2],p=i[1],l=i[2];return[r.dilation2d(k("x",e,t,n),k("filter",e,t,n),[o,u],s,[p,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},CU=(e,t,n,r=Xt)=>{switch(e.op){case"Fill":{let a=k("shape",e,t,n),s=k("dtype",e,t,n),i=k("value",e,t,n);return[r.fill(a,i,s)]}case"LinSpace":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("num",e,t,n);return[r.linspace(a,s,i)]}case"Multinomial":{let a=k("logits",e,t,n),s=k("numSamples",e,t,n),i=k("seed",e,t,n);return[r.multinomial(a,s,i)]}case"OneHot":{let a=k("indices",e,t,n),s=k("depth",e,t,n),i=k("onValue",e,t,n),o=k("offValue",e,t,n),u=k("dtype",e,t,n);return[r.oneHot(a,s,i,o,u)]}case"Ones":return[r.ones(k("shape",e,t,n),k("dtype",e,t,n))];case"OnesLike":return[r.onesLike(k("x",e,t,n))];case"RandomStandardNormal":return[r.randomStandardNormal(k("shape",e,t,n),k("dtype",e,t,n),k("seed",e,t,n))];case"RandomUniform":return[r.randomUniform(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("dtype",e,t,n))];case"RandomUniformInt":return[r.randomUniformInt(k("shape",e,t,n),k("minval",e,t,n),k("maxval",e,t,n),k("seed",e,t,n))];case"Range":{let a=k("start",e,t,n),s=k("stop",e,t,n),i=k("step",e,t,n);return[r.range(a,s,i,k("dtype",e,t,n))]}case"TruncatedNormal":{let a=k("shape",e,t,n),s=k("mean",e,t,n),i=k("stdDev",e,t,n),o=k("seed",e,t,n);return[r.truncatedNormal(a,s,i,k("dtype",e,t,n),o)]}case"Zeros":return[r.zeros(k("shape",e,t,n),k("dtype",e,t,n))];case"ZerosLike":return[r.zerosLike(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Lm(e,t,n){let r=k("boxes",e,t,n),a=k("scores",e,t,n),s=k("maxOutputSize",e,t,n),i=k("iouThreshold",e,t,n),o=k("scoreThreshold",e,t,n),u=k("softNmsSigma",e,t,n);return{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}}var _U=async(e,t,n,r,a=Xt)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:p,softNmsSigma:l}=Lm(e,t,n),d=await a.image.nonMaxSuppressionWithScoreAsync(s,i,o,u,p,l);return[d.selectedIndices,d.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:p}=Lm(e,t,n),l=k("padToMaxOutputSize",e,t,n),d=await a.image.nonMaxSuppressionPaddedAsync(s,i,o,u,p,l);return[d.selectedIndices,d.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:s,scores:i,maxOutputSize:o,iouThreshold:u,scoreThreshold:p}=Lm(e,t,n);return[await a.image.nonMaxSuppressionAsync(s,i,o,u,p)]}case"Where":{let s=a.cast(k("condition",e,t,n),"bool"),i=[await a.whereAsync(s)];return s.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",e,t,n),k("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},EU=(e,t,n,r=Xt)=>{switch(e.op){case"LowerBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.lowerBound(a,s)]}case"TopKV2":{let a=k("x",e,t,n),s=k("k",e,t,n),i=k("sorted",e,t,n),o=r.topk(a,s,i);return[o.values,o.indices]}case"UpperBound":{let a=k("sortedSequence",e,t,n),s=k("values",e,t,n);return[r.upperBound(a,s)]}case"Unique":{let a=k("x",e,t,n),s=r.unique(a);return[s.values,s.indices]}case"UniqueV2":{let a=k("x",e,t,n),s=k("axis",e,t,n),i=r.unique(a,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},$U=(e,t,n,r=Xt)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let a=k("default",e,t,n);return[en(e.name,t,n)||a];case"Placeholder":return[en(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{let l=k("x",e,t,n);return[sa(l)]}case"IdentityN":return k("x",e,t,n).map(l=>sa(l));case"Snapshot":let s=k("x",e,t,n);return[sa(s)];case"Shape":return[r.tensor1d(k("x",e,t,n).shape,"int32")];case"ShapeN":return k("x",e,t,n).map(l=>r.tensor1d(l.shape));case"Size":return[r.scalar(k("x",e,t,n).size,"int32")];case"Rank":return[r.scalar(k("x",e,t,n).rank,"int32")];case"NoOp":return[r.scalar(1)];case"Print":let i=k("x",e,t,n),o=k("data",e,t,n),u=k("message",e,t,n),p=k("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let l=0;l<o.length;l++)console.log(Array.prototype.slice.call(o[l].dataSync()).slice(0,p));return[i];default:throw TypeError(`Node type ${e.op} is not implemented`)}},AU=class{get id(){return this.handle.id}constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=we(0),this.tensorMap=new Map,Mt(this.handle)}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return we(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach(r=>r.dispose()),this.tensorMap.clear(),W(()=>{let r=Nt(t),a=n.length,s=r.length;v.assert(a===s,()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${s} elements.`);for(let i=0;i<a;i++){let o=n[i],u=r[i];Mt(u),this.tensorMap.set(o,u)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return W(()=>{let r=[];for(let a=0;a<n.length;a++){let s=n[a],i=this.findWithDefault(s,t);r.push(i)}return Lt(r)})}findWithDefault(e,t){let n=this.tensorMap.get(e);return n!=null?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},FU=async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{let a=r.getHashTableHandleByName(e.name);if(a!=null)return[a];{let s=k("keyDType",e,t,n),i=k("valueDType",e,t,n),o=new AU(s,i);return r.addHashTable(e.name,o),[o.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("values",e,t,n);return[await r.getHashTableById(a.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let a=k("tableHandle",e,t,n,r),s=k("keys",e,t,n),i=k("defaultValue",e,t,n);return[await r.getHashTableById(a.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let a=k("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},RU=(e,t,n,r=Xt)=>{switch(e.op){case"ResizeBilinear":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeBilinear(a,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let a=k("images",e,t,n),s=k("size",e,t,n),i=k("alignCorners",e,t,n),o=k("halfPixelCenters",e,t,n);return[r.image.resizeNearestNeighbor(a,[s[0],s[1]],i,o)]}case"CropAndResize":{let a=k("image",e,t,n),s=k("boxes",e,t,n),i=k("boxInd",e,t,n),o=k("cropSize",e,t,n),u=k("method",e,t,n),p=k("extrapolationValue",e,t,n);return[r.image.cropAndResize(a,s,i,o,u,p)]}case"ImageProjectiveTransformV3":{let a=k("images",e,t,n),s=k("transforms",e,t,n),i=k("outputShape",e,t,n),o=k("fillValue",e,t,n),u=k("interpolation",e,t,n),p=k("fillMode",e,t,n);return[r.image.transform(a,s,u.toLowerCase(),p.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},DU=(e,t,n,r=Xt)=>{switch(e.op){case"Equal":return[r.equal(k("a",e,t,n),k("b",e,t,n))];case"NotEqual":return[r.notEqual(k("a",e,t,n),k("b",e,t,n))];case"Greater":return[r.greater(k("a",e,t,n),k("b",e,t,n))];case"GreaterEqual":return[r.greaterEqual(k("a",e,t,n),k("b",e,t,n))];case"Less":return[r.less(k("a",e,t,n),k("b",e,t,n))];case"LessEqual":return[r.lessEqual(k("a",e,t,n),k("b",e,t,n))];case"LogicalAnd":return[r.logicalAnd(k("a",e,t,n),k("b",e,t,n))];case"LogicalNot":return[r.logicalNot(k("a",e,t,n))];case"LogicalOr":return[r.logicalOr(k("a",e,t,n),k("b",e,t,n))];case"Select":case"SelectV2":return[r.where(k("condition",e,t,n),k("a",e,t,n),k("b",e,t,n))];case"BitwiseAnd":return[r.bitwiseAnd(k("a",e,t,n),k("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},MU=(e,t,n,r=Xt)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[r.matMul(k("a",e,t,n),k("b",e,t,n),k("transposeA",e,t,n),k("transposeB",e,t,n))];case"Einsum":return[r.einsum(k("equation",e,t,n),...k("tensors",e,t,n))];case"Transpose":return[r.transpose(k("x",e,t,n),k("perm",e,t,n))];case"_FusedMatMul":let[a,s]=k("fusedOps",e,t,n),i=a==="biasadd",o=s==="prelu",u=k("numArgs",e,t,n),p=k("leakyreluAlpha",e,t,n);if(i){if(o&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[l,d]=k("args",e,t,n);return[r.fused.matMul({a:k("a",e,t,n),b:k("b",e,t,n),transposeA:k("transposeA",e,t,n),transposeB:k("transposeB",e,t,n),bias:l,activation:s,preluActivationWeights:d,leakyreluAlpha:p})];case"MatrixBandPart":return[r.linalg.bandPart(k("a",e,t,n),k("numLower",e,t,n),k("numUpper",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},OU=(e,t,n,r=Xt)=>{switch(e.op){case"EuclideanNorm":return[r.euclideanNorm(k("x",e,t,n),k("axis",e,t,n),k("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"FusedBatchNormV3":return[r.batchNorm(k("x",e,t,n),k("mean",e,t,n),k("variance",e,t,n),k("offset",e,t,n),k("scale",e,t,n),k("epsilon",e,t,n))];case"LRN":return[r.localResponseNormalization(k("x",e,t,n),k("radius",e,t,n),k("bias",e,t,n),k("alpha",e,t,n),k("beta",e,t,n))];case"Softmax":return[r.softmax(k("x",e,t,n))];case"LogSoftmax":return[r.logSoftmax(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},LU=(e,t,n,r=Xt)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:a,outputDenseValues:s}=r.raggedGather(k("paramsNestedSplits",e,t,n),k("paramsDenseValues",e,t,n),k("indices",e,t,n),k("outputRaggedRank",e,t,n));return a.concat(s)}case"RaggedRange":{let{rtNestedSplits:a,rtDenseValues:s}=r.raggedRange(k("starts",e,t,n),k("limits",e,t,n),k("splits",e,t,n));return[a,s]}case"RaggedTensorToTensor":return[r.raggedTensorToTensor(k("shape",e,t,n),k("values",e,t,n),k("defaultValue",e,t,n),k("rowPartitionTensors",e,t,n),k("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},zU=(e,t,n,r=Xt)=>{switch(e.op){case"Max":{let o=k("axis",e,t,n),u=k("keepDims",e,t,n);return[r.max(k("x",e,t,n),o,u)]}case"Mean":{let o=k("axis",e,t,n),u=k("keepDims",e,t,n);return[r.mean(k("x",e,t,n),o,u)]}case"Min":{let o=k("axis",e,t,n),u=k("keepDims",e,t,n);return[r.min(k("x",e,t,n),o,u)]}case"Sum":{let o=k("axis",e,t,n),u=k("keepDims",e,t,n);return[r.sum(k("x",e,t,n),o,u)]}case"All":{let o=k("axis",e,t,n),u=k("keepDims",e,t,n);return[r.all(k("x",e,t,n),o,u)]}case"Any":{let o=k("axis",e,t,n),u=k("keepDims",e,t,n);return[r.any(k("x",e,t,n),o,u)]}case"ArgMax":{let o=k("axis",e,t,n);return[r.argMax(k("x",e,t,n),o)]}case"ArgMin":{let o=k("axis",e,t,n);return[r.argMin(k("x",e,t,n),o)]}case"Prod":{let o=k("axis",e,t,n),u=k("keepDims",e,t,n);return[r.prod(k("x",e,t,n),o,u)]}case"Cumprod":{let o=k("axis",e,t,n),u=k("exclusive",e,t,n),p=k("reverse",e,t,n);return[r.cumprod(k("x",e,t,n),o,u,p)]}case"Cumsum":{let o=k("axis",e,t,n),u=k("exclusive",e,t,n),p=k("reverse",e,t,n);return[r.cumsum(k("x",e,t,n),o,u,p)]}case"Bincount":let a=k("x",e,t,n),s=k("weights",e,t,n),i=k("size",e,t,n);return[r.bincount(a,s,i)];case"DenseBincount":{let o=k("x",e,t,n),u=k("weights",e,t,n),p=k("size",e,t,n),l=k("binaryOutput",e,t,n);return[r.denseBincount(o,u,p,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},PU=(e,t,n,r=Xt)=>{switch(e.op){case"ConcatV2":case"Concat":{let a=k("n",e,t,n),s=k("axis",e,t,n),i=k("tensors",e,t,n);return i=i.slice(0,a),[r.concat(i,s)]}case"Gather":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gather(a,r.cast(s,"int32"),0)]}case"GatherV2":{let a=k("axis",e,t,n),s=k("batchDims",e,t,n),i=k("x",e,t,n),o=k("indices",e,t,n);return[r.gather(i,r.cast(o,"int32"),a,s)]}case"Reverse":{let a=k("dims",e,t,n),s=[];for(let o=0;o<a.length;o++)a[o]&&s.push(o);let i=k("x",e,t,n);return[r.reverse(i,s)]}case"ReverseV2":{let a=k("axis",e,t,n),s=k("x",e,t,n);return[r.reverse(s,a)]}case"Slice":{let a=k("begin",e,t,n),s=k("size",e,t,n);return[r.slice(k("x",e,t,n),a,s)]}case"StridedSlice":{let a=k("begin",e,t,n),s=k("end",e,t,n),i=k("strides",e,t,n),o=k("beginMask",e,t,n),u=k("endMask",e,t,n),p=k("ellipsisMask",e,t,n),l=k("newAxisMask",e,t,n),d=k("shrinkAxisMask",e,t,n),h=k("x",e,t,n);return[r.stridedSlice(h,a,s,i,o,u,p,l,d)]}case"Pack":return W(()=>{let a=k("axis",e,t,n),s=k("tensors",e,t,n),i=s[0].shape,o=r.squeeze(s[0]).shape,u=s.map(p=>{let l=v.arraysEqual(p.shape,i);if(!l&&!v.arraysEqual(r.squeeze(p).shape,o))throw new Error("the input tensors shape does not match");return l?p:r.reshape(p,i)});return[r.stack(u,a)]});case"Unpack":{let a=k("axis",e,t,n),s=k("tensor",e,t,n);return r.unstack(s,a)}case"Tile":{let a=k("reps",e,t,n);return[r.tile(k("x",e,t,n),a)]}case"Split":case"SplitV":{let a=k("axis",e,t,n),s=k("numOrSizeSplits",e,t,n),i=k("x",e,t,n);return r.split(i,s,a)}case"ScatterNd":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("shape",e,t,n);return[r.scatterND(a,s,i)]}case"GatherNd":{let a=k("x",e,t,n),s=k("indices",e,t,n);return[r.gatherND(a,s)]}case"SparseToDense":{let a=k("sparseIndices",e,t,n),s=k("outputShape",e,t,n),i=k("sparseValues",e,t,n),o=k("defaultValue",e,t,n);return[r.sparseToDense(a,i,s,i.dtype===o.dtype?o:r.cast(o,i.dtype))]}case"TensorScatterUpdate":{let a=k("indices",e,t,n),s=k("values",e,t,n),i=k("tensor",e,t,n);return[r.tensorScatterUpdate(i,a,s)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},BU=(e,t,n,r=Xt)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:a,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=r.sparse.sparseFillEmptyRows(k("indices",e,t,n),k("values",e,t,n),k("denseShape",e,t,n),k("defaultValue",e,t,n));return[a,s,i,o]}case"SparseReshape":{let{outputIndices:a,outputShape:s}=r.sparse.sparseReshape(k("inputIndices",e,t,n),k("inputShape",e,t,n),k("newShape",e,t,n));return[a,s]}case"SparseSegmentMean":return[r.sparse.sparseSegmentMean(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];case"SparseSegmentSum":return[r.sparse.sparseSegmentSum(k("data",e,t,n),k("indices",e,t,n),k("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},WU=(e,t,n,r=Xt)=>{switch(e.op){case"FFT":return[r.fft(k("x",e,t,n))];case"IFFT":return[r.ifft(k("x",e,t,n))];case"RFFT":return[r.rfft(k("x",e,t,n))];case"IRFFT":return[r.irfft(k("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},VU=(e,t,n,r=Xt)=>{switch(e.op){case"StaticRegexReplace":return[r.string.staticRegexReplace(k("input",e,t,n),k("pattern",e,t,n),k("rewrite",e,t,n),k("replaceGlobal",e,t,n))];case"StringNGrams":{let{nGrams:a,nGramsSplits:s}=r.string.stringNGrams(k("data",e,t,n),k("dataSplits",e,t,n),k("separator",e,t,n),k("nGramWidths",e,t,n),k("leftPad",e,t,n),k("rightPad",e,t,n),k("padWidth",e,t,n),k("preserveShortSequences",e,t,n));return[a,s]}case"StringSplit":{let{indices:a,values:s,shape:i}=r.string.stringSplit(k("input",e,t,n),k("delimiter",e,t,n),k("skipEmpty",e,t,n));return[a,s,i]}case"StringToHashBucketFast":return[r.string.stringToHashBucketFast(k("input",e,t,n),k("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},UU=(e,t,n,r=Xt)=>{switch(e.op){case"Cast":return[r.cast(k("x",e,t,n),k("dtype",e,t,n))];case"ExpandDims":{let a=k("axis",e,t,n);return[r.expandDims(k("x",e,t,n),a)]}case"Squeeze":{let a=k("axis",e,t,n);return[r.squeeze(k("x",e,t,n),a)]}case"Reshape":return[r.reshape(k("x",e,t,n),k("shape",e,t,n))];case"EnsureShape":return[r.ensureShape(k("x",e,t,n),k("shape",e,t,n))];case"MirrorPad":return[r.mirrorPad(k("x",e,t,n),k("padding",e,t,n),k("mode",e,t,n))];case"PadV2":case"Pad":return[r.pad(k("x",e,t,n),k("padding",e,t,n),k("constantValue",e,t,n))];case"SpaceToBatchND":{let a=k("blockShape",e,t,n),s=k("paddings",e,t,n);return[r.spaceToBatchND(k("x",e,t,n),a,s)]}case"BatchToSpaceND":{let a=k("blockShape",e,t,n),s=k("crops",e,t,n);return[r.batchToSpaceND(k("x",e,t,n),a,s)]}case"DepthToSpace":{let a=k("blockSize",e,t,n),s=k("dataFormat",e,t,n).toUpperCase();return[r.depthToSpace(k("x",e,t,n),a,s)]}case"BroadcastTo":return[r.broadcastTo(k("x",e,t,n),k("shape",e,t,n))];case"BroadcastArgs":return[r.broadcastArgs(k("s0",e,t,n),k("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function kw(e,t,n,r,a=W){let s=((i,o,u)=>{switch(i.category){case"arithmetic":return a(()=>bU(i,o,u));case"basic_math":return a(()=>xU(i,o,u));case"control":return NU(i,o,u);case"convolution":return a(()=>TU(i,o,u));case"creation":return a(()=>CU(i,o,u));case"dynamic":return _U(i,o,u);case"evaluation":return a(()=>EU(i,o,u));case"image":return a(()=>RU(i,o,u));case"graph":return a(()=>$U(i,o,u));case"logical":return a(()=>DU(i,o,u));case"matrices":return a(()=>MU(i,o,u));case"normalization":return a(()=>OU(i,o,u));case"ragged":return a(()=>LU(i,o,u));case"reduction":return a(()=>zU(i,o,u));case"slice_join":return a(()=>PU(i,o,u));case"sparse":return a(()=>BU(i,o,u));case"spectral":return a(()=>WU(i,o,u));case"string":return a(()=>VU(i,o,u));case"transformation":return a(()=>UU(i,o,u));case"hash_table":return FU(i,o,u,r);case"custom":let p=iS(i.op);if(p&&p.customExecutor)return p.customExecutor(new yU(i,o,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return v.isPromise(s)?s.then(i=>[].concat(i)):[].concat(s)}var Iw=class{constructor(e={},t={},n={},r={},a){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.parseNodeNameCache=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(t=>t.id===0&&t.iterationId===0?"":`${t.frameName}-${t.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function Sw(e,t,n,r){let a=new Set,s=[],i=null,o=null,u=new Set,p=new Set(Object.keys(e).map(h=>Pn(h)[0]));r=r||[];let l=new Set(r.map(h=>Pn(h.name)[0])),d=[...t];for(;d.length>0;){let h=d.pop();if((xs(h)||JU(h)||YU(h))&&i==null&&(i=h,o=i.children.map(c=>c.name).filter(c=>a.has(c))),a.add(h.name),n[h.name]==null&&!p.has(h.name)&&!l.has(h.name)){if(h.inputs.length===0){s.push(h.name);continue}h.inputs.forEach(c=>{u.has(c.name)||(u.add(c.name),d.push(c))})}}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}function GU(e,t){let{usedNodes:n,inputs:r}=t,a=Object.keys(r).map(g=>Pn(g)[0]).map(g=>e.nodes[g]),s=e.initNodes||[],i=g=>n.has(typeof g=="string"?g:g.name);function o(g){return[...new Map(g.map(y=>[y.name,y])).values()]}let u=o([...a,...e.weights,...s]).filter(i),p=o([...u,...Object.values(e.nodes)]).filter(i),l=new Map(p.map(g=>[g.name,g])),d={};for(let g of p){d[g.name]=d[g.name]||0;for(let y of g.children)i(y)||(d[y.name]=Number.POSITIVE_INFINITY),d[y.name]=(d[y.name]||0)+1}let h=Object.entries(d).filter(([,g])=>g===0).map(([g])=>g),c=[...h];for(;h.length>0;){let g=h.pop(),y=l.get(g);for(let b of y.children.filter(i))--d[b.name]===0&&(c.push(b.name),h.push(b.name))}let m=c.map(g=>l.get(g)),f=HU(m,u);return jU(f,u),f}function HU(e,t){let n=new Map(e.map(s=>[s.name,s])),r=t.map(s=>s.name),a=new Set(r);for(;r.length>0;){let s=r.pop(),i=n.get(s);for(let o of i.children)!n.has(o.name)||a.has(o.name)||(a.add(o.name),r.push(o.name))}return e.filter(s=>a.has(s.name))}var jd=class extends Error{constructor(e){super(`NodesExecutionOrderError: ${e}`)}};function jU(e,t){let n=new Map(e.map((o,u)=>[o.name,u])),r=new Set(t.map(o=>o.name)),a=o=>r.has(typeof o=="string"?o:o.name),s=new Set(e.map(o=>o.name)),i=o=>s.has(typeof o=="string"?o:o.name);for(let o of e){for(let u of o.children.filter(i)){if(!n.has(u.name))throw new jd(`Child ${u.name} of node ${o.name} is unreachable.`);if(n.get(o.name)>n.get(u.name))throw new jd(`Node ${o.name} is scheduled to run after its child ${u.name}.`)}if(!a(o))for(let u of o.inputs){if(!n.has(u.name))throw new jd(`Input ${u.name} of node ${o.name} is unreachable.`);if(n.get(u.name)>n.get(o.name))throw new jd(`Node ${o.name} is scheduled to run before its input ${u.name}.`)}}}function qU(e){let t=new Map(e.map((o,u)=>[o.name,u])),n=Number.MAX_SAFE_INTEGER,r=e.map((o,u)=>xs(o)?n:u),a=o=>{let u=r[t.get(o.name)];return u==null?-1:u},s=e.map((o,u)=>o.children.map(a).reduce((p,l)=>Math.max(p,l),r[u])),i=new Map;for(let o=0;o<e.length;++o){let u=s[o];if(u===n)continue;let p=e[o],l=e[u];i.has(l.name)||i.set(l.name,[]),i.get(l.name).push(p)}return i}var KU=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),XU=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),ZU=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function xs(e){return KU.has(e.op)}function JU(e){return XU.has(e.op)}function YU(e){return ZU.has(e.op)}var Cf=class{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map(n=>e[n].map(r=>r.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,e.functions!=null&&Object.keys(e.functions).forEach(n=>{this._functionExecutorMap[n]=new Cf(e.functions[n],this)})}getCompilationKey(e,t){let n=e.map(a=>a.name).sort(),r=t.map(a=>a.name).sort();return n.join(this.SEPARATOR)+"--"+r.join(this.SEPARATOR)}compile(e,t){let n=Sw(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(a!=null)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){let u=t.map(l=>l.name),p=Object.keys(e);throw new Error(`Cannot compute the outputs [${u}] from the provided inputs [${p}]. Missing the following inputs: [${r}]`)}let i=GU(this.graph,n),o=qU(i);return{orderedNodes:i,nodeLiveUntilMap:o}}cloneAndKeepTensor(e){if(e==null)return null;let t=e.clone();return Mt(t),t}cloneTensorList(e){return e?e.map(t=>this.cloneAndKeepTensor(t)):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map(([t,n])=>[t,this.cloneTensorList(n)]))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let r=n.map(d=>this.graph.nodes[Pn(d)[0]]),a=t.map(d=>Pn(d)[0]),s=new Set(a),i=a.map(d=>this.graph.nodes[d]);i.length===0&&(i=this._outputs);let o=this.getCompilationKey(r,i),u=this.compiledMap.get(o);u==null&&(u=this.compile(e,i),this.compiledMap.set(o,u));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let p={},l={};return W(()=>{let d=new Iw(this.weightMap,p,l,this.functionExecutorMap,this.parseNodeNameCache),h=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach(g=>{let[y,b]=Pn(g,d),x=[];x[b]=e[g],h[y]=x,this.keepIntermediateTensors&&(this.clonedTensorsMap[y]=this.cloneTensorList(x))});let c=this.getFrozenTensorIds(h),{orderedNodes:m,nodeLiveUntilMap:f}=u;for(let g of m){if(h[g.name])continue;let y=kw(g,h,d,this._resourceManager);if(v.isPromise(y))throw new Error(`The execution of the op '${g.op}' returned a promise. Please use model.executeAsync() instead.`);h[g.name]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[g.name]=this.cloneTensorList(y)),this.checkTensorForDisposalWithNodeLiveUntilInfo(g,h,d,c,s,f.get(g.name))}return this.parent==null&&d.dispose(c),t.map(g=>en(g,h,d))})}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map(n=>e[n]).map(n=>n.map(r=>r.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){if(!(xs(t)||s.has(e))){for(let o of n[e])o!=null&&(i[o.id]=(i[o.id]||0)+t.children.length);for(let o of t.inputs){if(xs(o))continue;let u=yw(o.name,n,r);if(u!=null)for(let p of u){if(!p||p.kept||a.has(p.id))continue;let l=i[p.id];l===1?(p.dispose(),delete i[p.id]):l!=null&&i[p.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(e,t,n,r,a,s){function i(o){return xs(o)||a.has(o.name)}if(!(xs(e)||s==null))for(let o of s){if(i(o))continue;let u=yw(o.name,t,n);for(let p of u)!p||p.kept||r.has(p.id)||p.dispose()}}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,r={},a={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=H().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(d){this.keepIntermediateTensors=!1,console.warn(d.message)}let s=new Iw(this.weightMap,r,a,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map(d=>en(d,i,s)),u=o.map(d=>d.id),p=Object.keys(e).map(d=>e[d].id),l=new Set([...u,...p,...this.weightIds]);return Object.values(i).forEach(d=>{d.forEach(h=>{h&&!h.isDisposed&&!l.has(h.id)&&h.dispose()})}),this.parent==null&&s.dispose(l),o}async executeFunctionAsync(e,t,n){let r=e.reduce((a,s,i)=>(a[this.inputs[i].name]=s,a),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){let a=Object.keys(e),s=a.map(x=>this.graph.nodes[Pn(x)[0]]),i=n.map(x=>Pn(x)[0]),o=new Set(i),u=i.map(x=>this.graph.nodes[x]);u.length===0&&(u=this._outputs);let{usedNodes:p,missingInputs:l,dynamicNode:d,syncInputs:h}=Sw(e,u,this.weightMap,this._initNodes),c=[...s,...this.graph.weights,...this._initNodes||[]].map(x=>({node:x,contexts:t.currentContext})),m=Object.assign({},this.weightMap);Object.keys(e).forEach(x=>{let[w,I]=Pn(x),T=[];T[I]=e[x],m[w]=T});let f={},g=this.getFrozenTensorIds(m),y={};for(;c.length>0;){let x=this.processStack(s,c,t,m,y,g,o,f,p);await Promise.all(x)}d==null&&!r&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let b=u.filter(x=>!xs(x)&&!en(x.name,m,t)).map(x=>x.name);if(b.length>0){let x="";throw d!=null&&(x=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${b}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${x}`)}return m}processStack(e,t,n,r,a,s,i,o,u){let p=[];for(;t.length>0;){let l=t.pop();n.currentContext=l.contexts;let d="";if(l.node.op==="Enter"&&k("isConstant",l.node,r,n)&&([d]=aa(l.node.name,n)),r[l.node.name]==null){let h=kw(l.node,r,n,this._resourceManager);d||([d]=aa(l.node.name,n));let c=n.currentContext;v.isPromise(h)?p.push(h.then(m=>(r[d]=m,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(m)),n.currentContext=c,this.checkTensorForDisposal(d,l.node,r,n,s,i,o),this.processChildNodes(l.node,t,n,r,a,u),m))):(r[d]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[d]=this.cloneTensorList(h)),this.checkTensorForDisposal(d,l.node,r,n,s,i,o),this.processChildNodes(l.node,t,n,r,a,u))}else this.processChildNodes(l.node,t,n,r,a,u)}return p}processChildNodes(e,t,n,r,a,s){e.children.forEach(i=>{let[o]=aa(i.name,n);a[o]||!s.has(i.name)||(i.op==="Merge"?i.inputNames.some(u=>!!en(u,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:i})):i.inputNames.every(u=>!!en(u,r,n))&&(a[o]=!0,t.push({contexts:n.currentContext,node:i})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(t=>t.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{let n=e[t],[r]=Pn(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){let s=a.attrParams.shape.value,i=s.length===n.shape.length&&n.shape.every((o,u)=>s[u]===-1||s[u]===o);v.assert(i,()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${s}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&v.assert(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){var t,n;let r={};for(let a in e){let s=(n=(t=this._signature)===null||t===void 0?void 0:t.inputs)===null||n===void 0?void 0:n[a];s!=null?r[s.name]=e[a]:r[a]=e[a]}return r}checkInputs(e){let t=Object.keys(e).filter(n=>{let[r]=Pn(n);return this.graph.nodes[r]==null});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(t=>{var n,r;let a=(r=(n=this._signature)===null||n===void 0?void 0:n.outputs)===null||r===void 0?void 0:r[t];return a!=null?a.name:t},{})}checkOutputs(e){e.forEach(t=>{let[n]=Pn(t);if(!this.graph.nodes[n])throw new Error(`The output '${t}' is not found in the graph`)})}},QU=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},eG="?tfjs-format=file",tG="model.json",tx=class{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(e,t={},n=nn){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,t==null&&(this.loadOptions={}),this.resourceManager=new QU}findIOHandler(){let e=this.modelUrl;if(e.load!=null)this.handler=e;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(t.length===0)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return v.isPromise(e)?e.then(t=>this.loadSync(t)):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){let a=this.artifacts.userDefinedMetadata;a.signature!=null&&(n=a.signature),a.structuredOutputKeys!=null&&(this.structuredOutputKeys=a.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let r=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Cf(bw.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,e.modelInitializer!=null&&e.modelInitializer.node!=null){let a=bw.Instance.transformGraph(e.modelInitializer);this.initializer=new Cf(a),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if(typeof e=="string"){let n=this.io.getSaveHandlers(e);if(n.length===0)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(n.length>1)throw new Error(`Found more than one (${n.length}) save handlers for URL '${e}'`);e=n[0]}if(e.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t=e instanceof Ae?[e]:e,n={};return t.forEach((r,a)=>n[this.structuredOutputKeys[a]]=r),n}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ae)&&!Array.isArray(e)){let a=(t=this.signature)===null||t===void 0?void 0:t.inputs;if(a!=null)for(let s in a){let i=a[s];i.resourceId!=null&&(e[s]=this.resourceIdToCapturedInput[i.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let r=0;return this.inputNodes.reduce((a,s)=>{var i,o,u;let p=(u=(o=(i=this.signature)===null||i===void 0?void 0:i.inputs)===null||o===void 0?void 0:o[s])===null||u===void 0?void 0:u.resourceId;return p!=null?a[s]=this.resourceIdToCapturedInput[p]:a[s]=e[r++],a},{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let r=0;r<n.length;r++){let a=n[r],s=t[a];this.resourceIdToCapturedInput[s.resourceId]=e[r]}}}execute(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&_e(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function nG(e,t={},n=nn){if(e==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof e=="string"&&(e=aG(e));let r=new tx(e,t,n);return await r.load(),r}function rG(e){if(e==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[r,a]=e;if(!r)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in r))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in r))throw new Error("Model JSON is missing 'weightsManifest'");let s=nn.getWeightSpecs(r.weightsManifest),i=nn.getModelArtifactsForJSONSync(r,s,a);t=nn.fromMemorySync(i)}else if("load"in e)t=e;else if("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e)t=nn.fromMemorySync(e);else throw new Error("Unknown model format");let n=new tx(t);return n.load(),n}function aG(e){return e.endsWith("/")||(e=e+"/"),`${e}${tG}${eG}`}var sG="4.7.0",_S={};Ee(_S,{CSVDataset:()=>LS,Dataset:()=>bu,FileDataSource:()=>GS,TextLineDataset:()=>OS,URLDataSource:()=>HS,array:()=>_G,csv:()=>PG,func:()=>BG,generator:()=>WG,microphone:()=>UG,version_data:()=>GG,webcam:()=>VG,zip:()=>EG});var iG=qa(Hh()),oG=qa(Hh());function lG(e,t){return Ah(e,t)}function Ah(e,t,n=new Map,r=new Set){if(e==null)return null;if(typeof Blob=="function"&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse)if(el(e)){let s=Array.isArray(e)?[]:{};r.add(e);for(let i in e){let o=e[i],u=Ah(o,t,n,r);s[i]=u}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}else throw new Error(`Can't recurse into non-iterable type: ${e}`);else return n.set(e,a.value),a.value}function uG(e,t=$S){return ES(e,t)}function ES(e,t,n=new Set){let r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");let a=t(e);if(a.recurse&&a.value!==null)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse)if(el(r)){let s=Array.isArray(r)?[]:{};n.add(r);for(let i in r){let o=e.map(p=>p[i]),u=ES(o,t,n);s[i]=u}return n.delete(r),s}else throw new Error(`Can't recurse into non-iterable type: ${r}`);else return a.value}function $S(e){return e===null?null:el(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function AS(e,t){let n=new Map;Ah(e,t,n);for(let r of Array.from(n.keys())){let a=n.get(r);if(v.isPromise(a)){let s=await a;n.set(r,s)}}return Ah(e,t,n)}function el(e){let t=!1;if(H().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=c0();t=e instanceof n}return e!=null&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||typeof e=="object"&&!(e instanceof Ae)&&!(e instanceof Promise)&&!t)}function pG(e){return e==null||dG(e)||Array.isArray(e)||typeof e=="object"&&e instanceof Ae||v.isTypedArray(e)}function dG(e){return e===null||typeof e!="object"&&typeof e!="function"}function hG(e){return lG(e,cG)}function cG(e){return e instanceof Ae?{value:e.clone(),recurse:!1}:el(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var FS=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,e==null)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return this.length()===0}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},nx=class extends FS{constructor(){super(nx.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=this.capacity*2,t=new Array(e),n=this.length();for(let r=0;r<n;r++)t[r]=this.get(this.wrap(this.begin+r));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};nx.INITIAL_CAPACITY=32;function RS(e){return new gG(e)}function rx(e){return new yG(e)}function mG(e,t){return new DS(e,t)}function fG(e,t=$a.FAIL){return new TG(e,t)}var Kt=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new SG(this,e)}filter(e){return new kG(this,e)}map(e){return new IG(this,e)}mapAsync(e){return new Nw(this,e)}serialMapAsync(e){return new Nw(this,e).serial()}flatmap(e){return new NG(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(t=>t===!0)}rowMajorBatch(e,t=!0){return new wG(this,e,t)}columnMajorBatch(e,t=!0,n=$S){return this.rowMajorBatch(e,t).map(r=>uG(r,n))}concatenate(e,t){return new DS(RS([this,e]),t)}take(e){return e<0||e==null?this:new vG(this,e)}skip(e){return e<0||e==null?this:new xG(this,e)}prefetch(e){return new MS(this,e)}shuffle(e,t){return new CG(this,e,t)}serial(){return new bG(this)}},gG=class extends Kt{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:hG(e),done:!1}}},yG=class extends Kt{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},bG=class extends Kt{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}},xG=class extends Kt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;_e(e.value)}return this.upstream.next()}},vG=class extends Kt{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},wG=class extends Kt{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},kG=class extends Kt{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;_e(e.value)}}},IG=class extends Kt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Sr.getTensorsInContainer(e.value),n=this.transform(e.value),r=Sr.getTensorsInContainer(n);for(let a of t)Sr.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},SG=class extends Kt{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Nw=class extends Kt{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=Sr.getTensorsInContainer(e.value),n=await this.transform(e.value),r=Sr.getTensorsInContainer(n);for(let a of t)Sr.isTensorInList(a,r)||a.dispose();return{value:n,done:!1}}},ax=class extends Kt{constructor(){super(),this.outputQueue=new nx,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.outputQueue.length()===0;)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},NG=class extends ax{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=Sr.getTensorsInContainer(e.value),n=this.transform(e.value),r=Sr.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let a of t)Sr.isTensorInList(a,r)||a.dispose();return!0}},DS=class extends Kt{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,this.iterator==null){let n=await this.moreIterators.next();if(n.done)return{value:null,done:!0};this.iterator=n.value,this.baseErrorHandler!=null&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}},$a;(function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"})($a||($a={}));var TG=class extends Kt{constructor(e,t=$a.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;function r(s){return s instanceof Kt?{value:s.next().then(i=>(t++,i.done&&n++,i.value)),recurse:!1}:{value:null,recurse:!0}}let a=await AS(this.iterators,r);if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case $a.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case $a.SHORTEST:return{value:null,done:!0};case $a.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},MS=class extends Kt{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new FS(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},CG=class extends MS{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=oG.alea(n||v.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(t.done)this.upstreamExhausted=!0;else return this.refill(),t}return{value:null,done:!0}}},bu=class{constructor(){this.size=null}batch(e,t=!0){let n=this;v.assert(e>0,()=>`batchSize needs to be positive, but it is
      ${e}`);let r;return this.size===1/0||this.size==null?r=this.size:t?r=Math.ceil(this.size/e):r=Math.floor(this.size/e),zn(async()=>(await n.iterator()).columnMajorBatch(e,t,$G),r)}concatenate(e){let t=this,n;return this.size===1/0||e.size===1/0?n=1/0:this.size!=null&&e.size!=null?n=this.size+e.size:n=null,zn(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){let t=this,n;return this.size===1/0?n=1/0:n=null,zn(async()=>(await t.iterator()).filter(r=>W(()=>e(r))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return zn(async()=>(await t.iterator()).map(n=>W(()=>e(n))),this.size)}mapAsync(e){let t=this;return zn(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(e==null)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return zn(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){let t=this,n;return this.size!=null&&e>0?n=this.size*e:e===0?n=0:this.size!=null&&(e===void 0||e<0)?n=1/0:n=null,zn(async()=>{let r=rx(async()=>({value:await t.iterator(),done:!1}));return mG(r.take(e))},n)}skip(e){let t=this,n;return this.size!=null&&e>=0&&this.size>=e?n=this.size-e:this.size!=null&&(this.size<e||e===void 0||e<0)?n=0:n=null,zn(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(e==null||e<0)throw this.size==null?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let r=this,a=iG.alea(t||v.now().toString());return zn(async()=>{let s=a.int32();return n&&(s+=a.int32()),(await r.iterator()).shuffle(e,s.toString())},this.size)}take(e){let t=this,n;return this.size!=null&&this.size>e?n=e:this.size!=null&&this.size<=e?n=this.size:n=null,zn(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};bu.MAX_BUFFER_SIZE=1e4;function zn(e,t=null){return new class extends bu{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function _G(e){return zn(async()=>RS(e),e.length)}function EG(e){if(!el(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=t==null?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=t==null?e[n].size:Math.min(t,e[n].size);return zn(async()=>{let n=await AS(e,r=>{if(r instanceof bu)return{value:r.iterator(),recurse:!1};if(el(r))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")});return fG(n,$a.SHORTEST)},t)}function $G(e){if(e===null)return null;let t=e[0];return pG(t)?{value:AG(e),recurse:!1}:{value:null,recurse:!0}}function AG(e){if(e.length===0)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ae?Lt(e):mn(e)}var OS=class extends bu{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split(`
`).map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}},qd='"',Lu=Symbol("out"),Tw=Symbol("field"),Kd=Symbol("quote"),zm=Symbol("quoteafterquote"),Cw=Symbol("quoteinquote"),LS=class extends bu{async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&v.assert(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce((r,a)=>(r[a]=r[a]+1||1,r),{}),n=Object.keys(t).filter(r=>t[r]>1);if(v.assert(n.length===0,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs){for(let r of Object.keys(this.columnConfigs))if(this.fullColumnNames.indexOf(r)===-1)throw new Error('The key "'+r+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").")}this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}else return null}constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new OS(e),t||(t={}),this.hasHeader=t.hasHeader!==!1,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(v.assert(t.delimiter==null,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(t=>this.makeDataElement(t))}makeDataElement(e){let t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){let s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!(this.configuredColumnsOnly&&!i)){let o=t[a],u=null;if(o==="")if(i&&i.default!==void 0)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{let p=Number(o);if(isNaN(p))i&&i.dtype==="bool"?u=this.getBoolean(o):u=o;else if(!i||!i.dtype)u=p;else switch(i.dtype){case"float32":u=p;break;case"int32":u=Math.floor(p);break;case"bool":u=this.getBoolean(o);break;default:u=p}}i&&i.isLabel?r[s]=u:n[s]=u}}return Object.keys(r).length===0?n:{xs:n,ys:r}}getBoolean(e){return e==="1"||e.toLowerCase()==="true"?1:0}parseRow(e,t=!0){let n=[],r=0,a=e.length,s=Lu;for(let i=0;i<a;i++)switch(s){case Lu:switch(e.charAt(i)){case qd:r=i+1,s=Kd;break;case this.delimiter:if(r=i+1,this.delimiter===" "&&this.delimWhitespace)break;n.push(""),s=Lu;break;default:s=Tw,r=i;break}break;case Tw:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i)),s=Lu,r=i+1;break}break;case Kd:switch(e.charAt(i)){case qd:s=zm;break}break;case zm:switch(e.charAt(i)){case this.delimiter:n.push(e.substring(r,i-1)),s=Lu,r=i+1;break;case qd:s=Kd;break;default:s=Cw;break}break;case Cw:switch(e.charAt(i)){case qd:s=Kd;break}break}if(s===zm?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},zS=class extends Kt{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=e.includeSpectrogram!==!1,this.includeWaveform=e.includeWaveform===!0,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!H().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new zS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:this.audioTrackConstraints==null?!0:this.audioTrackConstraints,video:!1})}catch(n){throw new Error(`Error thrown while initializing video stream: ${n.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,!this.sampleRateHz)this.sampleRateHz=this.audioContext.sampleRate;else if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`);let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize*2,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let r=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(r,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let r=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(r,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise(r=>{let a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),this.stream!=null&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((r,a)=>n.set(r,a*t)),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(v.sizeFromShape(t));return n.set(e,n.length-e.length),mn(n,t)}},PS=class extends Kt{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Qe([0],"int32"),this.webcamConfig.centerCrop){let n=this.webcamConfig.resizeWidth*1/this.webcamVideoElement.width,r=this.webcamConfig.resizeHeight*1/this.webcamVideoElement.height,a=(1-n)/2,s=(1-r)/2,i=a+n,o=r+s;this.cropBox=Wr([s,a,o,i],[1,4])}else this.cropBox=Wr([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!H().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new PS(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&v.assert(this.webcamConfig.facingMode==="user"||this.webcamConfig.facingMode==="environment",()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ad.fromPixels(this.webcamVideoElement)}catch(t){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(t)}`)}if(this.resize)try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(t){throw new Error(`Error thrown cropping the video: ${t.message}`)}finally{e.dispose()}else return{value:e,done:!1}}needToResize(){return!!(this.webcamConfig.resizeWidth&&this.webcamConfig.resizeHeight&&(this.webcamVideoElement.width!==this.webcamConfig.resizeWidth||this.webcamVideoElement.height!==this.webcamConfig.resizeHeight))}cropAndResizeFrame(e){return W(()=>{let t=Qt(se(e,"float32"),0),n;n=Qn.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let r=n.shape;return P(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},BS=class{},WS=class extends Kt{split(e){return new FG(this,e)}},FG=class extends WS{constructor(e,t){super(),this.upstream=e,this.impl=new RG(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},RG=class extends ax{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return this.carryover===""?!1:(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let n of t.slice(0,-1))this.outputQueue.push(n);return this.carryover=t[t.length-1],!0}},DG=class extends Kt{decodeUTF8(){return new MG(this)}},MG=class extends WS{constructor(e){super(),this.upstream=e,this.impl=new OG(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},OG=class extends ax{constructor(e){if(super(),this.upstream=e,H().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:t}=c0();this.decoder=new t("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e=await this.upstream.next(),t;if(e.done)return!1;t=e.value;let n;return H().get("IS_BROWSER")?n=this.decoder.decode(t,{stream:!0}):n=this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0}},VS=class extends DG{constructor(e,t={}){super(),this.file=e,this.options=t,v.assert(e instanceof Uint8Array||(H().get("IS_BROWSER")?e instanceof File||e instanceof Blob:!1),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1024*1024}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let r=new FileReader;r.onload=s=>{let i=r.result;if(i instanceof ArrayBuffer&&(i=new Uint8Array(i)),!(i instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(i)},r.onabort=s=>t(new Error("Aborted")),r.onerror=s=>t(new Error(s.type));let a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n}),done:!1}}};async function LG(e,t={},n){let r,a;typeof e=="string"?r=e:(r=e.url,a=zG(e));let s=await(n||v.fetch)(r,a);if(s.ok){let i=new Uint8Array(await s.arrayBuffer());return new VS(i,t)}else throw new Error(s.statusText)}var zG=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function US(e){return typeof e=="string"&&e.slice(0,7)==="file://"}var GS=class extends BS{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(US(this.input)&&H().get("IS_NODE")){let e=Xf();this.input=e.readFileSync(this.input.slice(7))}return new VS(this.input,this.options)}},HS=class extends BS{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return US(this.url)?new GS(this.url,this.fileOptions).iterator():LG(this.url,this.fileOptions)}};function PG(e,t={}){return new LS(new HS(e),t)}function BG(e){let t=rx(e);return zn(async()=>t)}function WG(e){return zn(async()=>{let t=await e();return rx(()=>t.next())})}async function VG(e,t){return PS.create(e,t)}async function UG(e){return zS.create(e)}var GG="4.7.0";function ye(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}var HG=Xr.whereImpl,lm=class extends yp{nextDataId(){return lm.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new jh(this,hr())}write(e,t,n){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&N.warn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));let r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let a=n.map(s=>v.encodeString(s));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){let t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){let t=this.data.get(e);t.refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if(t==="complex64"){let r=this.readSync(n.real.dataId),a=this.readSync(n.imag.dataId);return N.mergeRealAndImagArrays(r,a)}return v.convertBackendValuesAndArrayBuffer(this.data.get(e).values,t)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(r=>v.decodeString(r));return Pe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Pe(e.shape,e.dtype,t)}makeOutput(e,t,n){return hr().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);n!=null&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){ye([e],"where");let t=this.readSync(e.dataId);return HG(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};lm.nextDataId=0;var sx={};Ee(sx,{addImpl:()=>KS,bincountImpl:()=>ox,bincountReduceImpl:()=>XS,bitwiseAndImpl:()=>ZS,castImpl:()=>qS,ceilImpl:()=>JS,concatImpl:()=>lx,equalImpl:()=>YS,expImpl:()=>eN,expm1Impl:()=>nN,floorDivImpl:()=>aN,floorImpl:()=>rN,gatherNdImpl:()=>sN,gatherV2Impl:()=>iN,greaterEqualImpl:()=>lN,greaterImpl:()=>oN,lessEqualImpl:()=>pN,lessImpl:()=>uN,linSpaceImpl:()=>dN,logImpl:()=>hN,maxImpl:()=>cN,maximumImpl:()=>mN,minimumImpl:()=>fN,multiplyImpl:()=>ux,negImpl:()=>gN,notEqualImpl:()=>yN,prodImpl:()=>bN,raggedGatherImpl:()=>xN,raggedRangeImpl:()=>vN,raggedTensorToTensorImpl:()=>wN,rangeImpl:()=>dx,rsqrtImpl:()=>kN,scatterImpl:()=>Is,sigmoidImpl:()=>UH,simpleAbsImpl:()=>jS,sliceImpl:()=>Rh,sparseFillEmptyRowsImpl:()=>SN,sparseReshapeImpl:()=>NN,sparseSegmentReductionImpl:()=>hx,sqrtImpl:()=>jH,squaredDifferenceImpl:()=>TN,staticRegexReplaceImpl:()=>CN,stridedSliceImpl:()=>_N,stringNGramsImpl:()=>cx,stringSplitImpl:()=>mx,stringToHashBucketFastImpl:()=>fx,subImpl:()=>EN,tileImpl:()=>$N,topKImpl:()=>FN,transposeImpl:()=>px,uniqueImpl:()=>yx});function jS(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}var jG=e=>{let{x:t}=e.inputs,n=e.backend;ye(t,"abs");let r=new Float32Array(v.sizeFromShape(t.shape)),a=n.data.get(t.dataId).values;return r=jS(a),n.makeOutput(r,t.shape,t.dtype)},qG={kernelName:il,backendName:"cpu",kernelFunc:jG};function Ct(e){return(t,n,r,a,s)=>{let i=N.assertAndGetBroadcastShape(t,n),o=i.length,u=v.computeStrides(i),p=v.sizeFromShape(i),l=v.getTypedArrayFromDType(s,p),d=t.length,h=n.length,c=v.computeStrides(t),m=v.computeStrides(n),f=N.getBroadcastDims(t,i),g=N.getBroadcastDims(n,i);if(f.length+g.length===0)for(let y=0;y<l.length;++y)l[y]=e(r[y%r.length],a[y%a.length]);else for(let y=0;y<l.length;++y){let b=v.indexToLoc(y,o,u),x=b.slice(-d);f.forEach(C=>x[C]=0);let w=v.locToIndex(x,d,c),I=b.slice(-h);g.forEach(C=>I[C]=0);let T=v.locToIndex(I,h,m);l[y]=e(r[w],a[T])}return[l,i]}}function Bn(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64"),u=n.data.get(o.dataId);return u.complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}var KG={kernelName:Xh,backendName:"cpu",kernelFunc:Bn};function Fh(e,t,n="float32"){if(n==="complex64"){let a=Fh(e,t,"float32"),s=Fh(e,t,"float32");return Bn({inputs:{real:a,imag:s},backend:e})}let r=v.makeZerosTypedArray(v.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function Hr(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var XG={kernelName:Si,backendName:"cpu",kernelFunc:Hr};function Vs(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var ZG={kernelName:ic,backendName:"cpu",kernelFunc:Vs};function qS(e,t,n,r){if(r==="int32"){let a=Int32Array.from(e);return[t,"int32",a]}if(r==="bool"){let a=v.toTypedArray([0],n),[s,i]=Ct((o,u)=>o!==u?1:0)(t,[],e,a,"bool");return[i,"bool",s]}throw new Error(`Error in Cast: failed to cast ${n} to ${r}`)}function Ga(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return Hr({inputs:{x:a},backend:n});let l=Fh(n,a.shape,a.dtype),d=Ga({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),h=Bn({inputs:{real:d,imag:l},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),h}if(a.dtype==="complex64"){let l=Vs({inputs:{input:a},backend:n}),d=Ga({inputs:{x:l},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(l),d}if(!v.hasEncodingLoss(a.dtype,s)){let l=Hr({inputs:{x:a},backend:n});return{dataId:l.dataId,shape:l.shape,dtype:s}}let i=n.data.get(a.dataId).values,[o,u,p]=qS(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,u,p)}var JG={kernelName:si,backendName:"cpu",kernelFunc:Ga};function Wt(e,t,n,r){return n==null?({inputs:a,backend:s})=>{let{a:i,b:o}=a,u=s;ye([i,o],e);let p=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,d=i.dtype==="string"?N.fromUint8ToStringArray(p):p,h=i.dtype==="string"?N.fromUint8ToStringArray(l):l,c=r||i.dtype,[m,f]=t(i.shape,o.shape,d,h,c);return u.makeTensorInfo(f,c,m)}:({inputs:a,backend:s})=>{let{a:i,b:o}=a,u=s;if(i.dtype==="complex64"||o.dtype==="complex64"){let p=Ga({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),l=u.data.get(p.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,c=u.data.get(d.dataId).values,m=u.data.get(h.dataId).values,f=Ga({inputs:{x:o},backend:u,attrs:{dtype:"complex64"}}),g=u.data.get(f.dataId),y=g.complexTensorInfos.real,b=g.complexTensorInfos.imag,x=u.data.get(y.dataId).values,w=u.data.get(b.dataId).values,[I,T,C]=n(i.shape,o.shape,c,m,x,w),E=u.makeTensorInfo(C,"float32",I),A=u.makeTensorInfo(C,"float32",T),R=Bn({inputs:{real:E,imag:A},backend:u});return u.disposeIntermediateTensorInfo(p),u.disposeIntermediateTensorInfo(f),u.disposeIntermediateTensorInfo(E),u.disposeIntermediateTensorInfo(A),R}else{let p=u.data.get(i.dataId).values,l=u.data.get(o.dataId).values,d=r||i.dtype,[h,c]=t(i.shape,o.shape,p,l,d);return u.makeTensorInfo(c,d,h)}}}function ix(e){return(t,n,r,a,s,i)=>{let o=N.assertAndGetBroadcastShape(t,n),u=v.sizeFromShape(o),p=o.length,l=v.computeStrides(o),d=v.getTypedArrayFromDType("float32",u),h=v.getTypedArrayFromDType("float32",u),c=N.getBroadcastDims(t,o),m=N.getBroadcastDims(n,o),f=N.mergeRealAndImagArrays(r,a),g=N.mergeRealAndImagArrays(s,i),y=t.length,b=v.computeStrides(t),x=n.length,w=v.computeStrides(n);if(c.length+m.length===0)for(let I=0;I<d.length;I++){let T=I%f.length,C=I%g.length,E=e(f[T*2],f[T*2+1],g[C*2],g[C*2+1]);d[I]=E.real,h[I]=E.imag}else for(let I=0;I<d.length;I++){let T=v.indexToLoc(I,p,l),C=T.slice(-y);c.forEach(S=>C[S]=0);let E=v.locToIndex(C,y,b),A=T.slice(-x);m.forEach(S=>A[S]=0);let R=v.locToIndex(A,x,w),F=e(f[E*2],f[E*2+1],g[R*2],g[R*2+1]);d[I]=F.real,h[I]=F.imag}return[d,h,o]}}var KS=Ct((e,t)=>e+t),YG=ix((e,t,n,r)=>({real:e+n,imag:t+r})),tl=Wt(Ka,KS,YG),QG={kernelName:Ka,backendName:"cpu",kernelFunc:tl};function ox(e,t,n,r,a){let s=v.sizeFromShape(r),i=v.makeZerosTypedArray(a,n);for(let o=0;o<e.length;o++){let u=e[o];if(u<0)throw new Error("Input x must be non-negative!");u>=a||(s>0?i[u]+=t[o]:i[u]+=1)}return i}function XS(e,t,n,r=!1){let a=e.shape[0],s=e.shape[1],i=Pe([a,n],t.dtype);for(let o=0;o<a;o++)for(let u=0;u<s;u++){let p=e.get(o,u);if(p<0)throw new Error("Input x must be non-negative!");p>=n||(r?i.set(1,o,p):t.size>0?i.set(i.get(o,p)+t.get(o,u),o,p):i.set(i.get(o,p)+1,o,p))}return i}var ZS=Ct((e,t)=>e&t),eH=Wt(ml,ZS),tH={kernelName:ml,backendName:"cpu",kernelFunc:eH};function Jr(e){return(t,n,r)=>{let a=v.getArrayFromDType(n,t.length);for(let s=0;s<t.length;++s)a[s]=e(t[s],r);return a}}function tt(e,t,n){let r=Jr(t);return rs(e,r,n)}function rs(e,t,n){return({inputs:r,attrs:a,backend:s})=>{let{x:i}=r;ye(i,e);let o=s,u=o.data.get(i.dataId).values,p;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");p=N.fromUint8ToStringArray(u)}else p=u;let l=n||i.dtype,d=t(p,l,a);return o.makeTensorInfo(i.shape,l,d)}}var JS=Jr(e=>Math.ceil(e)),nH=rs(ii,JS),rH={kernelName:ii,backendName:"cpu",kernelFunc:nH};function lx(e,t,n,r){let a=v.getArrayFromDType(n,v.sizeFromShape(t));if(r&&n!=="string"){let s=0;e.forEach(i=>{let o=v.sizeFromShape(i.shape);a.set(i.vals,s),s+=o})}else{let s=0;e.forEach(i=>{let o=n==="string"?N.fromUint8ToStringArray(i.vals):i.vals,u=0;for(let p=0;p<i.shape[0];++p){let l=p*t[1]+s;for(let d=0;d<i.shape[1];++d)a[l+d]=o[u++]}s+=i.shape[1]})}return a}var YS=Ct((e,t)=>e===t?1:0),QS=Wt(kl,YS,null,"bool"),aH={kernelName:kl,backendName:"cpu",kernelFunc:QS},eN=Jr(e=>Math.exp(e)),tN=rs(bi,eN,"float32"),sH={kernelName:bi,backendName:"cpu",kernelFunc:tN},nN=Jr(e=>Math.expm1(e)),iH=rs(xi,nN),oH={kernelName:xi,backendName:"cpu",kernelFunc:iH},rN=Jr(e=>Math.floor(e)),lH=rs(vi,rN),uH={kernelName:vi,backendName:"cpu",kernelFunc:lH},aN=Ct((e,t)=>Math.floor(e/t)),pH=Wt(wi,aN,null,"int32"),dH={kernelName:wi,backendName:"cpu",kernelFunc:pH};function sN(e,t,n,r,a,s,i,o,u){let p=Pe([r,s],n);for(let l=0;l<r;l++){let d=[],h=0;for(let c=0;c<a;c++){let m=e[l*a+c];h+=m*i[c],d.push(m)}if(h<0||h>=u/s)throw new Error(`Invalid indices: ${d} does not index into ${o}`);for(let c=0;c<s;c++)p.values[l*s+c]=t.get(...t.indexToLoc(h*s+c))}return p}function iN(e,t,n){let r=Pe(n,e.dtype);for(let a=0;a<r.size;++a){let s=r.indexToLoc(a).slice(),i=s[0],o=s[2],u=t.locToIndex([i,o]);s[2]=t.values[u];let p=e.locToIndex(s);0<=p&&p<e.values.length&&(r.values[a]=e.values[p])}return r}var oN=Ct((e,t)=>e>t?1:0),hH=Wt(Cl,oN,null,"bool"),cH={kernelName:Cl,backendName:"cpu",kernelFunc:hH},lN=Ct((e,t)=>e>=t?1:0),mH=Wt(Ii,lN,null,"bool"),fH={kernelName:Ii,backendName:"cpu",kernelFunc:mH},uN=Ct((e,t)=>e<t?1:0),gH=Wt(_l,uN,null,"bool"),yH={kernelName:_l,backendName:"cpu",kernelFunc:gH},pN=Ct((e,t)=>e<=t?1:0),bH=Wt(El,pN,null,"bool"),xH={kernelName:El,backendName:"cpu",kernelFunc:bH};function dN(e,t,n){let r=(t-e)/(n-1),a=v.makeZerosTypedArray(n,"float32");a[0]=e;for(let s=1;s<a.length;s++)a[s]=a[s-1]+r;return a}var hN=Jr(e=>Math.log(e)),vH=rs(Ei,hN),wH={kernelName:Ei,backendName:"cpu",kernelFunc:vH};function cN(e,t,n,r){let a=v.getTypedArrayFromDType(r,v.sizeFromShape(n));for(let s=0;s<a.length;++s){let i=s*t,o=e[i];for(let u=0;u<t;++u){let p=e[i+u];(Number.isNaN(p)||p>o)&&(o=p)}a[s]=o}return a}var mN=Ct((e,t)=>Math.max(e,t)),kH=Wt(Ri,mN),IH={kernelName:Ri,backendName:"cpu",kernelFunc:kH},fN=Ct((e,t)=>Math.min(e,t)),SH=Wt(Li,fN),NH={kernelName:Li,backendName:"cpu",kernelFunc:SH},ux=Ct((e,t)=>e*t),TH=ix((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),um=Wt(Bi,ux,TH),CH={kernelName:Bi,backendName:"cpu",kernelFunc:um};function gN(e,t,n){let r=v.createScalarValue(-1,n);return ux([],t,r,e,n)}function _H(e){let{inputs:t,backend:n}=e,{x:r}=t;ye(r,"neg");let a=n.data.get(r.dataId).values,[s,i]=gN(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}var EH={kernelName:Ll,backendName:"cpu",kernelFunc:_H},yN=Ct((e,t)=>e!==t?1:0),$H=Wt(zl,yN,null,"bool"),AH={kernelName:zl,backendName:"cpu",kernelFunc:$H};function px(e,t,n,r,a){let s=t.length,i=v.sizeFromShape(t),o=v.computeStrides(t),u=v.computeStrides(a),p=v.getTypedArrayFromDType(n,v.sizeFromShape(a));for(let l=0;l<i;++l){let d=v.indexToLoc(l,s,o),h=new Array(d.length);for(let m=0;m<h.length;m++)h[m]=d[r[m]];let c=v.locToIndex(h,s,u);p[c]=e[l]}return p}function Rn(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;ye(a,"transpose");let i=a.shape.length,o=new Array(i);for(let l=0;l<o.length;l++)o[l]=a.shape[s[l]];let u=r.data.get(a.dataId).values,p=px(u,a.shape,a.dtype,s,o);return{dataId:r.write(p,o,a.dtype),shape:o,dtype:a.dtype}}var FH={kernelName:oa,backendName:"cpu",kernelFunc:Rn};function bN(e,t,n,r){let[a,s]=N.computeOutAndReduceShapes(e,r),i=ar(t,"int32"),o=v.makeZerosTypedArray(v.sizeFromShape(a),i),u=v.sizeFromShape(s);for(let p=0;p<o.length;++p){let l=p*u,d=1;for(let h=0;h<u;++h)d*=n[l+h];o[p]=d}return{outVals:o,outShape:a,outDtype:i}}function RH(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"prod");let o=a.shape.length,u=v.parseAxisParam(s,a.shape),p=N.getAxesPermutation(u,o),l=u,d=a,h=[];p!=null&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:p}}),h.push(d),l=N.getInnerMostAxes(l.length,o));let c=n.data.get(d.dataId).values,{outVals:m,outShape:f,outDtype:g}=bN(d.shape,d.dtype,c,l),y=f;return i&&(y=N.expandShapeToKeepDim(f,u)),h.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.makeTensorInfo(y,g,m)}var DH={kernelName:Hi,backendName:"cpu",kernelFunc:RH};function MH(e,t,n){e.forEach((r,a)=>{if(r<0||r>=n){let s=v.indexToLoc(a,t.length,v.computeStrides(t)).join(",");throw new Error(`indices[${s}] = ${r} is not in [0, ${n})`)}})}function OH(e,t){for(let n=0;n<e.length;++n){let r=e[n],a=n===e.length-1?t:e[n+1].length;if(r.length===0)throw new Error("Ragged splits may not be empty");if(r[0]<0)throw new Error("Ragged splits must be non-negative");if(r[r.length-1]>a)throw new Error("Ragged splits must not point past values");for(let s=1;s<r.length;++s)if(r[s-1]>r[s])throw new Error("Ragged splits must be sorted in ascending order")}}function LH(e,t,n,r){let a=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map(()=>[0]);OH(n,r);let u=1;for(let p=0;p<t.length-1;++p){u*=t[p];let l=t[p+1];for(let d=1;d<u+1;++d)o[p].push(d*l)}for(let p=0;p<e.length;++p){let l=e[p],d=e[p]+1;for(let h=0;h<n.length;++h){let c=n[h],m=h+t.length-1;if(m>=0){let f=o[m],g=f[f.length-1]-c[l];for(let y=l;y<d;++y)o[m].push(c[y+1]+g)}l=c[l],d=c[d]}d!==l&&(a.push([l,d]),s+=d-l)}return{outSplits:o,valueSlices:a,numValues:s}}function zH(e){let t=[];for(let n=0;n<e.length;++n){let r=e[n].length,a=v.getArrayFromDType("int32",r);t.push(a),e[n].forEach((s,i)=>a[i]=s)}return t}function _w(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let r=t;r<e.length;r++)n[t-1]*=e[r];return n}function PH(e,t,n,r,a,s){let i=_w(t,2)[1],o=_w(s,2)[1],u=0;for(let p of n)for(let l=p[0];l<p[1];++l){for(let d=0;d<r;++d)a[u*o+d]=e[l*i+d];++u}}function BH(e,t,n,r,a){let s=t.slice();s[0]=a;let i=v.getArrayFromDType(n,v.sizeFromShape(s)),o=e.length,u=o===0?0:o/t[0];return PH(e,t,r,u,i,s),[i,s]}function xN(e,t,n,r,a,s,i,o){if(e.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");let u=t[0][0]-1;if(MH(s,i,u),r.length===0)throw new Error("params.rank must be nonzero");let p=r[0],{outSplits:l,valueSlices:d,numValues:h}=LH(s,i,e,p),c=zH(l),m=BH(n,r,a,d,h);return[c,m[0],m[1]]}var Ew=2147483647;function vN(e,t,n,r,a,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=t.length===0,u=a.length===0,p=i.length===0,l=[];o||l.push(t[0]),u||l.push(a[0]),p||l.push(i[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");let d=l.length===0?1:l[0],h=v.getArrayFromDType("int32",d+1);h[0]=0;for(let g=0;g<d;++g){let y=o?e[0]:e[g],b=u?r[0]:r[g],x=p?s[0]:s[g];if(x===0)throw new Error("Requires delta != 0");let w;if(x>0&&b<y||x<0&&b>y)w=0;else if(w=Math.ceil(Math.abs((b-y)/x)),w>Ew)throw new Error(`Requires ((limit - start) / delta) <= ${Ew}`);h[g+1]=h[g]+w}let c=h[d],m=v.getArrayFromDType(n,c),f=0;for(let g=0;g<d;++g){let y=h[g+1]-h[g],b=o?e[0]:e[g],x=p?s[0]:s[g];for(let w=0;w<y;++w)m[f++]=b,b+=x}return[h,m]}var ur=N.RowPartitionType,_f=class{constructor(e,t,n,r,a,s,i,o,u,p){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=r,this.valuesDType=a,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=N.getRowPartitionTypesHelper(p),this.raggedRank=N.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ur.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ur.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ur.VALUE_ROWIDS:return _f.getMaxWidthValueRowID(t);case ur.ROW_SPLITS:return _f.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${ur[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(t===0||t===1)return 0;let n=0;for(let r=0;r<t-1;++r){let a=e[r+1]-e[r];a>n&&(n=a)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(t===0)return 0;let n=0,r=e[0],a=0;for(let s=1;s<t;++s){let i=e[s];i!==r&&(r=i,a=Math.max(s-n,a),n=s)}return Math.max(t-n,a)}tensorShapeFromTensor(e,t,n=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Aw(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;N.validateDefaultValueShape(n,t);let r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=N.combineRaggedTensorToTensorShapes(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let s=1;s<=this.raggedRank;++s)a[s]<0&&(a[s]=this.getMaxWidth(s));return a}calculateFirstParentOutputIndex(e,t,n){let r=Math.min(e,n),a=[],s=0;for(let i=0;i<r;++i,s+=t)a.push(s);for(let i=r;i<e;++i)a.push(-1);return v.assert(a.length===e,()=>"Final length of result must be equal to firstDimension."),a}calculateOutputIndexRowSplit(e,t,n,r){let a=e.length,s=[];for(let i=0;i<a-1;++i){let o=e[i+1]-e[i],u=Math.min(r,o),p=t[i];p===-1&&(u=0);for(let l=0;l<u;++l)s.push(p),p+=n;for(let l=0;l<o-u;++l)s.push(-1)}if(a>0&&s.length!==e[a-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,r){let a=e.length,s=[];if(a===0)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let u=t[o];s.push(u);for(let p=1;p<a;++p){let l=e[p];if(l===o)u>=0&&(++i,i<r?u+=n:u=-1);else{if(i=0,o=l,l>=t.length)throw new Error(`Got nextValueRowId=${l} which is not less than ${t.length}`);u=t[l]}s.push(u)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,r){let a=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case ur.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(a,t,n,r);case ur.ROW_SPLITS:if(a.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${a.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(a,t,n,r);default:throw new Error(`Unsupported partition type: ${ur[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case ur.FIRST_DIM_SIZE:return e[0];case ur.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ur.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ur[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let s=n.length-2;s>=0;--s)n[s]=n[s+1]*t[s+1];let r=Aw(t,!1),a=v.getArrayFromDType(this.valuesDType,v.sizeFromShape(r));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let i=1;i<=this.raggedRank;++i)s=this.calculateOutputIndex(i-1,s,n[i],t[i]);this.setOutput(this.raggedRank,s,a,r)}return[r,a]}setOutput(e,t,n,r){if(n.length===0)return;let a=this.values,s=n,i=r.slice();i=i.slice(e+1);let o=v.sizeFromShape(i),u=t.length,p=this.defaultValue;if(p.length!==o&&p.length!==1){let c=this.defaultValueShape;W(()=>{let m=P(p,c);p=Ss(m,i).dataSync()})}let l=0,d=0,h=0;for(let c=0;c<=u;++c){let m=c<u?t[c]:-1;if(m===h){++h;continue}if(d<h){let f=a.subarray(l*o),g=s.subarray(d*o),y=(h-d)*o;$w(g,f,y)}if(c>=u){let f=n.length;m=Math.floor(f/o)}if(m>h)if(this.defaultValue.length===1)s.subarray(h*o,m*o).fill(this.defaultValue[0]),h=m;else for(;m>h;){let f=s.slice(h*o);$w(f,p,o),++h}m<0?(l=c+1,d=h):(l=c,d=h,h=d+1)}}};function $w(e,t,n){for(let r=0;r<n;r++)e[r]=t[r]}function Aw(e,t){let n=[];for(let r of e){if(r<0){if(!t)throw new Error(`Dimension ${r} must be >= 0`);if(r<-1)throw new Error(`Dimension ${r} must be >= -1`);r=-1}n.push(r)}return n}function wN(e,t,n,r,a,s,i,o,u,p){return new _f(e,t,n,r,a,s,i,o,u,p).compute()}function dx(e,t,n,r){let a=e===t,s=e<t&&n<0,i=t<e&&n>1;if(a||s||i)return v.makeZerosTypedArray(0,r);let o=Math.abs(Math.ceil((t-e)/n)),u=v.makeZerosTypedArray(o,r);t<e&&n===1&&(n=-1),u[0]=e;for(let p=1;p<u.length;p++)u[p]=u[p-1]+n;return u}var kN=Jr(e=>1/Math.sqrt(e)),WH=rs(Qi,kN),VH={kernelName:Qi,backendName:"cpu",kernelFunc:WH};function Is(e,t,n,r,a,s,i,o,u,p){let l=[r/a,a],d=e.values,h=t.values;if(r===0)return Pe(n,t.dtype);let c=u instanceof At?u:Pe(l,t.dtype);typeof u=="string"||typeof u=="number"?c.values.fill(u):typeof u=="boolean"&&c.values.fill(+u);for(let m=0;m<s;m++){let f=[],g=0;for(let y=0;y<i;y++){let b=d[m*i+y];f.push(b),g+=b*o[y]}if(g<0||g>=r/a)throw new Error(`Invalid indices: ${f} does not index into ${n}`);for(let y=0;y<a;y++)p?c.values[g*a+y]+=h[m*a+y]:c.values[g*a+y]=t.rank===0?h[0]:h[m*a+y]}return c}var UH=Jr(e=>1/(1+Math.exp(-e))),IN=tt(ao,e=>1/(1+Math.exp(-e))),GH={kernelName:ao,backendName:"cpu",kernelFunc:IN};function Rh(e,t,n,r,a){let s=zt.isSliceContinous(r,t,n),i=v.sizeFromShape(n),o=v.computeStrides(r);if(s){let d=zt.computeFlatOffset(t,o);return a==="string"?e.slice(d,d+i):e.subarray(d,d+i)}let u=a==="string"?N.fromUint8ToStringArray(e):e,p=Pe(r,a,u),l=Pe(n,a);for(let d=0;d<l.size;++d){let h=l.indexToLoc(d),c=h.map((m,f)=>m+t[f]);l.set(p.get(...c),...h)}return a==="string"?N.fromStringArrayToUint8(l.values):l.values}function Us(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;ye(a,"slice");let[o,u]=zt.parseSliceParams(a,s,i);zt.assertParamsValid(a,o,u);let p=n.data.get(a.dataId).values,l=Rh(p,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}var HH={kernelName:Jl,backendName:"cpu",kernelFunc:Us};function SN(e,t,n,r,a,s,i){let o=t[0],u=s[0],p=new Array(u),l=new Array(o),d=t[1];if(u===0){if(o!==0)throw new Error(N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));let g=v.getArrayFromDType(n,0),y=v.getArrayFromDType(a,0);return[g,[0,d],y,p,l]}let h=!0,c=0,m=new Array(u).fill(0);for(let g=0;g<o;++g){let y=e[g*d];if(y<0)throw new Error(N.getSparseFillEmptyRowsNegativeIndexErrorMessage(g,y));if(y>=u)throw new Error(N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(g,y,u));++m[y],h=h&&y>=c,c=y}let f=!0;for(let g=0;g<u;++g){let y=m[g]===0;p[g]=y,f=f&&!y,m[g]=Math.max(m[g],1),g>0&&(m[g]+=m[g-1])}if(f&&h){let g=e,y=r;for(let b=0;b<o;++b)l[b]=b;return[g,[o,d],y,p,l]}else{let g=m[u-1],y=v.getArrayFromDType(n,g*d),b=v.getArrayFromDType(a,g),x=new Array(u).fill(0);for(let w=0;w<o;++w){let I=e[w*d],T=x[I],C=(I===0?0:m[I-1])+T;x[I]++;for(let E=0;E<d;++E)y[C*d+E]=e[w*d+E];b[C]=r[w],l[w]=C}for(let w=0;w<u;++w)if(x[w]===0){let I=w===0?0:m[w-1];y[I*d+0]=w;for(let T=1;T<d;++T)y[I*d+T]=0;b[I]=i}return[y,[g,d],b,p,l]}}function NN(e,t,n,r,a){let s=v.sizeFromShape(r),i=t[0],o=a.length,u=[],p=1,l=-1;for(let f=0;f<o;++f){let g=a[f];if(g===-1){if(l!==-1)throw new Error(N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(l,f));l=f,u.push(1)}else{if(g<0)throw new Error(N.getSparseReshapeNegativeOutputDimErrorMessage(f,g));p*=g,u.push(g)}}if(l!==-1){if(p<=0)throw new Error(N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let f=Math.trunc(s/p);if(p*f!==s)throw new Error(N.getSparseReshapeInputOutputMultipleErrorMessage(r,u));u[l]=f}if(v.sizeFromShape(u)!==s)throw new Error(N.getSparseReshapeInputOutputMismatchErrorMessage(r,u));let d=r.length,h=[];if(d>0){h[d-1]=1;for(let f=d-2;f>=0;--f)h[f]=h[f+1]*r[f+1]}let c=[];if(o>0){c[o-1]=1;for(let f=o-2;f>=0;--f)c[f]=c[f+1]*u[f+1]}let m=v.getArrayFromDType(n,i*o);for(let f=0;f<i;++f){let g=0;for(let y=0;y<d;++y)g+=e[f*d+y]*h[y];for(let y=0;y<o;++y)m[f*o+y]=Math.trunc(g/c[y]),g%=c[y]}return[m,[i,o],u]}function hx(e,t,n,r,a,s=!1,i=0){let o=r.length,u=[t[0],e.length/t[0]],p=u[1],l=o>0?a[o-1]+1:0;if(l<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let d=t.slice();d[0]=l;let h=d.reduce((b,x)=>b*x,1),c=v.getArrayFromDType(n,h);if(o===0)return l>0&&c.fill(i),[c,d];if(l<=0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let m=0,f=1,g=0,y=a[m];for(;;){let b=0;if(f<o){if(b=a[f],y===b){++f;continue}if(y>=b)throw new Error(N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(y<0||y>=l)throw new Error(N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(y,l));y>g&&c.fill(i,g*p,y*p);for(let x=m;x<f;++x){let w=r[x];if(w<0||w>=u[0])throw new Error(N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x,r[x],u[0]));for(let I=0;I<p;I++)c[y*p+I]+=e[w*p+I]}if(s)for(let x=0;x<p;x++)c[y*p+x]/=f-m;if(m=f,++f,g=y+1,y=b,f>o)break}return g<l&&c.fill(i,g*p,l*p),[c,d]}var jH=Jr(e=>Math.sqrt(e)),qH=tt(io,e=>Math.sqrt(e)),KH={kernelName:io,backendName:"cpu",kernelFunc:qH},TN=Ct((e,t)=>{let n=e-t;return n*n}),XH=Wt(uo,TN),ZH={kernelName:uo,backendName:"cpu",kernelFunc:XH},CN=Jr((e,t)=>{let{pattern:n,replaceGlobal:r,rewrite:a}=t;return e.replace(new RegExp(n,r?"g":""),a)}),JH=rs(Dp,CN),YH={kernelName:Dp,backendName:"cpu",kernelFunc:JH};function _N(e,t,n,r){let a=Pe(e,t.dtype);for(let s=0;s<a.size;s++){let i=a.indexToLoc(s),o=new Array(i.length);for(let u=0;u<o.length;u++)o[u]=i[u]*n[u]+r[u];a.set(t.get(...o),...i)}return a}var QH=class{constructor(e,t,n,r,a,s){this.separator=v.encodeString(e),this.nGramWidths=t,this.leftPad=v.encodeString(n),this.rightPad=v.encodeString(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){let o=this.getPadWidth(s),u=Math.max(0,o-i),p=Math.max(0,o-(a-(i+1))),l=s-(u+p),d=t+(u>0?0:i-o),h=0;h+=u*this.leftPad.length;for(let y=0;y<l;++y)h+=e[d+y].length;h+=p*this.rightPad.length;let c=u+p+l-1;h+=c*this.separator.length,n[r+i]=new Uint8Array(h);let m=n[r+i],f=0,g=y=>y.forEach(b=>m[f++]=b);for(let y=0;y<u;++y)g(this.leftPad),g(this.separator);for(let y=0;y<l-1;++y)g(e[d+y]),g(this.separator);if(l>0){g(e[d+l-1]);for(let y=0;y<p;++y)g(this.separator),g(this.rightPad)}else{for(let y=0;y<p-1;++y)g(this.rightPad),g(this.separator);g(this.rightPad)}}}compute(e,t){let n=e.length,r=t.length;if(r>0){let o=t[0];if(o!==0)throw new Error(`First split value must be 0, got ${o}`);for(let u=1;u<r;++u){let p=t[u]>=o;if(p=p&&t[u]<=n,!p)throw new Error(`Invalid split value ${t[u]}, must be in [${o}, ${n}]`);o=t[u]}if(o!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${o}`)}let a=r-1,s=v.getArrayFromDType("int32",r);if(n===0||r===0){let o=new Array(n);for(let u=0;u<=a;++u)s[u]=0;return[o,s]}s[0]=0;for(let o=1;o<=a;++o){let u=t[o]-t[o-1],p=0;this.nGramWidths.forEach(l=>{p+=this.getNumNGrams(u,l)}),this.preserveShort&&u>0&&p===0&&(p=1),s[o]=s[o-1]+p}let i=new Array(s[a]);for(let o=0;o<a;++o){let u=t[o],p=s[o];if(this.nGramWidths.forEach(l=>{let d=t[o+1]-t[o],h=this.getNumNGrams(d,l);this.createNGrams(e,u,i,p,h,l),p+=h}),this.preserveShort&&p===s[o]){let l=t[o+1]-t[o];if(l===0)continue;let d=l+2*this.padWidth,h=1;this.createNGrams(e,u,i,p,h,d)}}return[i,s]}};function cx(e,t,n,r,a,s,i,o){return new QH(n,r,a,s,i,o).compute(e,t)}function e6(e,t,n,r){if(!e.length)return;if(t.length===0){for(let s=0;s<e.length;++s)r.push(e.subarray(s,s+1));return}if(t.length===1){let s=t[0],i=e.indexOf(s);for(;i!==-1;){let o=e.subarray(0,i);(!n||o.length!==0)&&r.push(o),e=e.subarray(i+1),i=e.indexOf(s)}(!n||e.length!==0)&&r.push(e);return}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||t.indexOf(e[s])!==-1){let i=e.subarray(a,s);(!n||i.length!==0)&&r.push(i),a=s+1}}function mx(e,t,n){let r=e.length,a=[],s=0,i=0,o=new Array(r);for(let h=0;h<r;++h){let c=a.length;e6(e[h],t,n,a);let m=a.length-c;o[h]=m,s+=m,i=Math.max(i,m)}let u=v.getArrayFromDType("int32",s*2),p=new Array(s),l=[r,i],d=0;for(let h=0;h<r;++h)for(let c=0;c<o[h];++c)u[d*2]=h,u[d*2+1]=c,p[d]=a[d],++d;return[u,p,l]}function fx(e,t){let n=v.getArrayFromDType("int32",e.length);for(let r=0;r<e.length;++r)n[r]=v.fingerPrint64(e[r]).modulo(t).getLowBitsUnsigned();return n}var EN=Ct((e,t)=>e-t),t6=ix((e,t,n,r)=>({real:e-n,imag:t-r})),gx=Wt(po,EN,t6),n6={kernelName:po,backendName:"cpu",kernelFunc:gx};function $N(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let r=Pe(n,e.dtype);for(let a=0;a<r.values.length;++a){let s=r.indexToLoc(a),i=new Array(e.rank);for(let u=0;u<i.length;u++)i[u]=s[u]%e.shape[u];let o=e.locToIndex(i);r.values[a]=e.values[o]}return r}var Wu=(e,t)=>{let n=t.value-e.value;return n===0?e.index-t.index:n};function AN(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){let o=r-n+1,u=t-n+1,p=Math.log(o),l=.5*Math.exp(2*p/3),d=.5*Math.sqrt(p*l*(o-l)/o)*Math.sign(u-o/2),h=Math.max(n,Math.floor(t-u*l/o+d)),c=Math.min(r,Math.floor(t+(o-u)*l/o+d));AN(e,t,h,c)}let a=e[t],s=n,i=r;for(v.swap(e,n,t),Wu(e[r],a)>0&&v.swap(e,n,r);s<i;){for(v.swap(e,s,i),s++,i--;Wu(e[s],a)<0;)s=s+1;for(;Wu(e[i],a)>0;)i=i-1}Wu(e[n],a)===0?v.swap(e,n,i):(i=i+1,v.swap(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function FN(e,t,n,r,a){let s=t[t.length-1],[i,o]=[e.length/s,s],u=v.getTypedArrayFromDType(n,i*r),p=v.getTypedArrayFromDType("int32",i*r);for(let d=0;d<i;d++){let h=d*o,c=e.subarray(h,h+o),m=new Array(c.length);c.forEach((b,x)=>m[x]={value:b,index:x}),r<m.length&&(AN(m,r),m=m.slice(0,r)),a&&m.sort(Wu);let f=d*r,g=u.subarray(f,f+r),y=p.subarray(f,f+r);for(let b=0;b<r;b++)g[b]=m[b].value,y[b]=m[b].index}let l=t.slice();return l[l.length-1]=r,[Pe(l,n,u),Pe(l,"int32",p)]}function yx(e,t,n,r){let a=v.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let m=0;m<a;m++)s[0]*=n[m];s[1]=n[a];for(let m=a+1;m<n.length;m++)s[2]*=n[m];let i=new Map,o=new Int32Array(n[a]),u=new At(s,r,e),p=[],l=s[0]===1&&s[2]===1;for(let m=0;m<n[a];m++){let f;if(l)f=e[m].toString();else{let y=[];for(let b=0;b<s[0];b++)for(let x=0;x<s[2];x++)y.push(u.get(b,m,x));f=y.join(",")}let g=i.get(f);if(g!=null)o[m]=g;else{let y=i.size;i.set(f,y),o[m]=y,p.push(m)}}let d=s.slice();d[1]=i.size;let h=new At(d,r);p.forEach((m,f)=>{for(let g=0;g<s[0];g++)for(let y=0;y<s[2];y++)h.set(u.get(g,m,y),g,f,y)});let c=n.slice();return c[a]=d[1],{outputValues:h.values,outputShape:c,indices:o}}var r6="4.7.0";uc("cpu",()=>new lm,1);var RN=tt(gi,e=>e>=0?e:Math.exp(e)-1),a6={kernelName:gi,backendName:"cpu",kernelFunc:RN};function DN(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;ye([a],"leakyRelu");let i=v.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=v.getTypedArrayFromDType("float32",i);for(let p=0;p<o.length;p++)u[p]=o[p]<0?s*o[p]:o[p];return n.makeTensorInfo(a.shape,"float32",u)}var s6={kernelName:_i,backendName:"cpu",kernelFunc:DN},i6=Ct((e,t)=>e<0?t*e:e);function MN(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t;ye([r,a],"prelu");let s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=i6(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}var o6={kernelName:Gi,backendName:"cpu",kernelFunc:MN},ON=tt(qi,e=>Math.max(0,e)),l6={kernelName:qi,backendName:"cpu",kernelFunc:ON},LN=tt(Zi,e=>Math.min(Math.max(0,e),6)),u6={kernelName:Zi,backendName:"cpu",kernelFunc:LN};function Dh(e,t,n,r,a){if(n==="linear")return Hr({inputs:{x:t},backend:e});if(n==="relu")return ON({inputs:{x:t},backend:e});if(n==="elu")return RN({inputs:{x:t},backend:e});if(n==="relu6")return LN({inputs:{x:t},backend:e});if(n==="prelu")return MN({inputs:{x:t,alpha:r},backend:e});if(n==="leakyrelu")return DN({inputs:{x:t},backend:e,attrs:{alpha:a}});if(n==="sigmoid")return IN({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function ct(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=v.sizeFromShape(a.shape),o=v.inferFromImplicitShape(s,i),u=v.sizeFromShape(o);v.assert(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);let p=n.data.get(a.dataId);if(p.complexTensorInfos!=null){let l=p.complexTensorInfos.real,d=p.complexTensorInfos.imag;l.shape=o,d.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}var p6={kernelName:Gl,backendName:"cpu",kernelFunc:ct};function zN(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;ye([a,s],"matMul");let u=a.shape.length,p=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[p-1]:s.shape[p-2],h=i?a.shape[u-1]:a.shape[u-2],c=o?s.shape[p-2]:s.shape[p-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=v.sizeFromShape(m),y=v.sizeFromShape(f),b=lu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);v.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,l,h]:[g,h,l],w=o?[y,c,d]:[y,d,c],I=ct({inputs:{x:a},backend:n,attrs:{shape:x}}),T=ct({inputs:{x:s},backend:n,attrs:{shape:w}}),C=i?I.shape[1]:I.shape[2],E=i?I.shape[2]:I.shape[1],A=o?T.shape[1]:T.shape[2],R=Math.max(g,y),F=n.data.get(I.dataId).values,S=n.data.get(T.dataId).values,M=v.computeStrides(I.shape),B=v.computeStrides(T.shape),[U,G,K]=i?[M[0],1,M[1]]:[M[0],M[1],1],[j,X,ee]=o?[1,B[1],B[0]]:[B[1],1,B[0]],Z=E*A,re=Pe([R,E,A],I.dtype),te=re.values,ae=n.blockSize;for(let ie=0;ie<R;ie++){let ve=ie%g,be=ie%y;for(let de=0;de<E;de+=ae){let Ie=Math.min(de+ae,E);for(let Te=0;Te<A;Te+=ae){let Re=Math.min(Te+ae,A);for(let Be=0;Be<C;Be+=ae){let nt=Math.min(Be+ae,C);for(let Ge=de;Ge<Ie;Ge++)for(let qe=Te;qe<Re;qe++){let $e=0;for(let Ye=Be;Ye<nt;Ye++){let lt=F[ve*U+Ge*G+Ye*K],Mn=S[Ye*j+qe*X+be*ee];$e+=lt*Mn}te[ie*Z+(Ge*A+qe)]+=$e}}}}}return n.disposeIntermediateTensorInfo(I),n.disposeIntermediateTensorInfo(T),n.makeTensorInfo(b,re.dtype,re.values)}var d6={kernelName:ai,backendName:"cpu",kernelFunc:zN};function h6(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:d}=r,h,c,m,f=[];h=zN({inputs:{a,b:s},attrs:{transposeA:u,transposeB:p},backend:n}),i&&(c=tl({inputs:{a:h,b:i},backend:n}),f.push(h),h=c),l&&(m=Dh(n,h,l,o,d),f.push(h),h=m);for(let g of f)n.disposeIntermediateTensorInfo(g);return h}var c6={kernelName:Es,backendName:"cpu",kernelFunc:h6},m6=tt(Xs,e=>Math.acos(e)),f6={kernelName:Xs,backendName:"cpu",kernelFunc:m6},g6=tt(Zs,e=>Math.acosh(e)),y6={kernelName:Zs,backendName:"cpu",kernelFunc:g6};function b6(e){let{inputs:t,backend:n}=e,r=t;ye(t,"addN");let a=r.map(o=>n.data.get(o.dataId).values),s=Pe(r[0].shape,r[0].dtype),i=s.values;for(let o=0;o<r.length;o++){let u=a[o];for(let p=0;p<i.length;p++)i[p]+=u[p]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var x6={kernelName:Js,backendName:"cpu",kernelFunc:b6};function v6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"all");let o=v.parseAxisParam(s,a.shape),u=o,p=N.getAxesPermutation(u,a.shape.length),l=a;p!=null&&(l=Rn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,a.shape.length)),N.assertAxesAreInnerMostDims("all",u,l.shape.length);let[d,h]=N.computeOutAndReduceShapes(l.shape,u),c=v.sizeFromShape(h),m=v.makeZerosTypedArray(v.sizeFromShape(d),l.dtype),f=n.data.get(l.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let w=0;w<c;++w){let I=f[b+w];x=x&&I}m[y]=x}p!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,m);if(i){let y=N.expandShapeToKeepDim(d,o),b=ct({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var w6={kernelName:ol,backendName:"cpu",kernelFunc:v6};function k6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"any");let o=v.parseAxisParam(s,a.shape),u=o,p=N.getAxesPermutation(u,a.shape.length),l=a;p!=null&&(l=Rn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,a.shape.length)),N.assertAxesAreInnerMostDims("any",u,l.shape.length);let[d,h]=N.computeOutAndReduceShapes(l.shape,u),c=v.sizeFromShape(h),m=v.makeZerosTypedArray(v.sizeFromShape(d),l.dtype),f=n.data.get(l.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let w=0;w<c;++w){let I=f[b+w];x=x||I}m[y]=x}p!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,m);if(i){let y=N.expandShapeToKeepDim(d,o),b=ct({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var I6={kernelName:ll,backendName:"cpu",kernelFunc:k6};function S6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ye(a,"argMax");let i=v.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),u=a,p=[];o!=null&&(u=Rn({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMax",i,u.shape.length);let[l,d]=N.computeOutAndReduceShapes(u.shape,i),h=v.sizeFromShape(l),c=v.makeZerosTypedArray(h,"int32"),m=v.sizeFromShape(d),f=n.data.get(u.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let w=0;w<m;++w){let I=f[y+w];I>b&&(b=I,x=w)}c[g]=x}return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(l,"int32",c)}var N6={kernelName:ul,backendName:"cpu",kernelFunc:S6};function T6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;ye(a,"argMin");let i=v.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),u=a,p=[];o!=null&&(u=Rn({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],N.assertAxesAreInnerMostDims("argMin",i,u.shape.length);let[l,d]=N.computeOutAndReduceShapes(u.shape,i),h=v.sizeFromShape(l),c=v.makeZerosTypedArray(h,"int32"),m=v.sizeFromShape(d),f=n.data.get(u.dataId).values;for(let g=0;g<c.length;++g){let y=g*m,b=f[y],x=0;for(let w=0;w<m;++w){let I=f[y+w];I<b&&(b=I,x=w)}c[g]=x}return p.forEach(g=>n.disposeIntermediateTensorInfo(g)),n.makeTensorInfo(l,"int32",c)}var C6={kernelName:pl,backendName:"cpu",kernelFunc:T6},_6=tt(Ys,e=>Math.asin(e)),E6={kernelName:Ys,backendName:"cpu",kernelFunc:_6},$6=tt(Qs,e=>Math.asinh(e)),A6={kernelName:Qs,backendName:"cpu",kernelFunc:$6},F6=tt(ei,e=>Math.atan(e)),R6={kernelName:ei,backendName:"cpu",kernelFunc:F6},D6=Ct((e,t)=>Math.atan2(e,t)),M6=Wt(ni,D6),O6={kernelName:ni,backendName:"cpu",kernelFunc:M6},L6=tt(ti,e=>Math.atanh(e)),z6={kernelName:ti,backendName:"cpu",kernelFunc:L6};function bx(e,t,n,r,a,s){let i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,p=a.dilationWidth,l=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,c=a.padInfo.left,m=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,f=Pe(a.outShape,n),g=f.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let w=0;w<a.batchSize;++w){let I=w*y,T=w*r[0];for(let C=0;C<a.inChannels;++C)for(let E=0;E<a.outHeight;++E){let A=E*i-h,R=Math.max(0,A),F=Math.min(a.inHeight,l+A),S=I+E*b;for(let M=0;M<a.outWidth;++M){let B=M*o-c,U=Math.max(0,B),G=Math.min(a.inWidth,d+B),K=m,j=0,X=0;for(let Z=R;Z<F;Z+=u){let re=T+Z*r[1];for(let te=U;te<G;te+=p){let ae=re+te*r[2],ie=e[ae+C];s==="max"&&ie>K?K=ie:s==="avg"&&(j+=ie,X++)}if(isNaN(K))break}let ee=S+M*x+C;g[ee]=s==="avg"?j/X:K}}}return f}function PN(e,t,n,r,a=!1,s=!1){let i=Pe(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,p=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,c=r.padInfo.top,m=r.padInfo.left,f=Pe(t,n,e);for(let g=0;g<r.batchSize;++g)for(let y=0;y<r.inChannels;++y)for(let b=0;b<r.outHeight;++b){let x=b*o-c,w=x;for(;w<0;)w+=p;let I=Math.min(r.inHeight,d+x);for(let T=0;T<r.outWidth;++T){let C=T*u-m,E=C;for(;E<0;)E+=l;let A=Math.min(r.inWidth,h+C),R=Number.NEGATIVE_INFINITY,F=-1;for(let S=w;S<I;S+=p){let M=S-x;for(let B=E;B<A;B+=l){let U=B-C,G=f.get(g,S,B,y);G>R&&(R=G,a?F=s?((g*r.inHeight+S)*r.inWidth+B)*r.inChannels+y:(S*r.inWidth+B)*r.inChannels+y:F=M*h+U)}}i.set(F,g,b,T,y)}}return i}function BN(e,t,n,r,a,s){let i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,p=a.dilationDepth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,c=a.effectiveFilterHeight,m=a.effectiveFilterWidth,f=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b=s==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Pe(a.outShape,n),w=x.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],T=a.outShape[2]*a.outShape[3]*a.outShape[4],C=a.outShape[3]*a.outShape[4],E=a.outShape[4];for(let A=0;A<a.batchSize;++A){let R=A*I,F=A*r[0];for(let S=0;S<a.inChannels;++S)for(let M=0;M<a.outDepth;++M){let B=M*i-f,U=B;for(;U<0;)U+=p;let G=Math.min(a.inDepth,h+B),K=R+M*T;for(let j=0;j<a.outHeight;++j){let X=j*o-g,ee=X;for(;ee<0;)ee+=l;let Z=Math.min(a.inHeight,c+X),re=K+j*C;for(let te=0;te<a.outWidth;++te){let ae=te*u-y,ie=ae;for(;ie<0;)ie+=d;let ve=Math.min(a.inWidth,m+ae),be=re+te*E,de=b,Ie=0,Te=0;for(let Be=U;Be<G;Be+=p){let nt=F+Be*r[1];for(let Ge=ee;Ge<Z;Ge+=l){let qe=nt+Ge*r[2];for(let $e=ie;$e<ve;$e+=d){let Ye=qe+$e*r[3],lt=e[Ye+S];if(s==="max"&&lt>de?de=lt:s==="avg"&&(Ie+=lt,Te++),isNaN(de))break}if(isNaN(de))break}if(isNaN(de))break}let Re=be+S;w[Re]=s==="avg"?Ie/Math.max(Te,1):de}}}}return x}function P6(e,t){let n=Pe(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,p=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,c=t.padInfo.top,m=t.padInfo.left;for(let f=0;f<t.batchSize;++f)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*r-h,x=b;for(;x<0;)x+=i;let w=Math.min(t.inDepth,p+b);for(let I=0;I<t.outHeight;++I){let T=I*a-c,C=T;for(;C<0;)C+=o;let E=Math.min(t.inHeight,l+T);for(let A=0;A<t.outWidth;++A){let R=A*s-m,F=R;for(;F<0;)F+=u;let S=Math.min(t.inWidth,d+R),M=Number.NEGATIVE_INFINITY,B=-1;for(let U=x;U<w;U+=i){let G=U-b;for(let K=C;K<E;K+=o){let j=K-T;for(let X=F;X<S;X+=u){let ee=X-R,Z=e.get(f,U,K,X,g);Z>=M&&(M=Z,B=G*l*d+j*l+ee)}}}n.set(B,f,y,I,A,g)}}}return n}function B6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ye(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,p=1;v.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,p,o,u),d;if(l.filterWidth===1&&l.filterHeight===1&&v.arraysEqual(l.inShape,l.outShape))d=Hr({inputs:{x:a},backend:n});else{let h=n.data.get(a.dataId).values,c=v.computeStrides(a.shape),m=bx(h,a.shape,a.dtype,c,l,"avg");d=n.makeTensorInfo(l.outShape,a.dtype,m.values)}return d}var W6={kernelName:ri,backendName:"cpu",kernelFunc:B6};function V6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=r;ye(a,"avgPool3d");let l=N.computePool3DInfo(a.shape,s,i,1,o,u,p),d=n.data.get(a.dataId).values,h=BN(d,a.shape,a.dtype,v.computeStrides(a.shape),l,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}var U6={kernelName:dl,backendName:"cpu",kernelFunc:V6};function G6(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=r;ye([a,s],"avgPool3DGrad");let l=N.computePool3DInfo(s.shape,i,o,1,u,p),d=l.strideDepth,h=l.strideHeight,c=l.strideWidth,m=l.filterDepth,f=l.filterHeight,g=l.filterWidth,y=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,w=l.effectiveFilterDepth,I=l.effectiveFilterHeight,T=l.effectiveFilterWidth,C=w-1-l.padInfo.front,E=T-1-l.padInfo.left,A=I-1-l.padInfo.top,R=Pe(s.shape,"float32"),F=1/(m*f*g),S=n.bufferSync(a);for(let M=0;M<l.batchSize;++M)for(let B=0;B<l.inChannels;++B)for(let U=0;U<l.inDepth;++U)for(let G=0;G<l.inHeight;++G)for(let K=0;K<l.inWidth;++K){let j=U-C,X=G-A,ee=K-E,Z=0;for(let re=0;re<w;re+=y){let te=(j+re)/d;if(!(te<0||te>=l.outDepth||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let ie=(X+ae)/h;if(!(ie<0||ie>=l.outHeight||Math.floor(ie)!==ie))for(let ve=0;ve<T;ve+=x){let be=(ee+ve)/c;if(be<0||be>=l.outWidth||Math.floor(be)!==be)continue;let de=S.get(M,te,ie,be,B);Z+=de}}}R.set(Z*F,M,U,G,K,B)}return n.makeTensorInfo(R.shape,R.dtype,R.values)}var H6={kernelName:vp,backendName:"cpu",kernelFunc:G6};function j6(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;ye([a,s],"avgPoolGrad");let{filterSize:o,strides:u,pad:p}=r,l=N.computePool2DInfo(i.shape,o,u,1,p),d=l.strideHeight,h=l.strideWidth,c=l.filterHeight,m=l.filterWidth,f=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterHeight,b=l.effectiveFilterWidth,x=b-1-l.padInfo.left,w=y-1-l.padInfo.top,I=Pe(i.shape,"float32"),T=1/(c*m),C=n.data.get(a.dataId).values,E=Pe(a.shape,"float32",C);for(let A=0;A<l.batchSize;++A)for(let R=0;R<l.inChannels;++R)for(let F=0;F<l.inHeight;++F)for(let S=0;S<l.inWidth;++S){let M=F-w,B=S-x,U=0;for(let G=0;G<y;G+=f){let K=(M+G)/d;if(!(K<0||K>=l.outHeight||Math.floor(K)!==K))for(let j=0;j<b;j+=g){let X=(B+j)/h;if(X<0||X>=l.outWidth||Math.floor(X)!==X)continue;let ee=E.get(A,K,X,R);U+=ee}}I.set(U*T,A,F,S,R)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var q6={kernelName:xp,backendName:"cpu",kernelFunc:j6};function K6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;v.assert(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(s==null||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),ye([a,o,u,s,i],"batchNorm");let{varianceEpsilon:p}=r;p==null&&(p=.001);let l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),m=i?n.data.get(i.dataId).values:new Float32Array([0]),f=new Float32Array(l.length),g=m.length,y=c.length,b=h.length,x=d.length,w=0,I=0,T=0,C=0;for(let E=0;E<l.length;++E)f[E]=m[w++]+(l[E]-d[I++])*c[T++]/Math.sqrt(h[C++]+p),w>=g&&(w=0),I>=x&&(I=0),T>=y&&(T=0),C>=b&&(C=0);return n.makeTensorInfo(a.shape,a.dtype,f)}var X6={kernelName:ki,backendName:"cpu",kernelFunc:K6};function Z6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;ye([a],"batchToSpaceND");let o=s.reduce((y,b)=>y*b),u=N.getReshaped(a.shape,s,o),p=N.getPermuted(u.length,s.length),l=N.getReshapedPermuted(a.shape,s,o),d=N.getSliceBeginCoords(i,s.length),h=N.getSliceSize(l,i,s.length),c=ct({inputs:{x:a},backend:n,attrs:{shape:u}}),m=Rn({inputs:{x:c},backend:n,attrs:{perm:p}}),f=ct({inputs:{x:m},backend:n,attrs:{shape:l}}),g=Us({inputs:{x:f},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var J6={kernelName:hl,backendName:"cpu",kernelFunc:Z6};function Y6(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=ox(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}var Q6={kernelName:cl,backendName:"cpu",kernelFunc:Y6};function ej(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var tj={kernelName:wp,backendName:"cpu",kernelFunc:ej},nj=tt(Xa,(e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),rj={kernelName:Xa,backendName:"cpu",kernelFunc:nj},aj=e=>{let{x:t}=e.inputs,n=e.backend,r=new Float32Array(v.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let p=0;p<o.length;p++){let l=o[p],d=u[p];r[p]=Math.hypot(l,d)}return n.makeOutput(r,t.shape,"float32")},sj={kernelName:kp,backendName:"cpu",kernelFunc:aj};function nl(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}var ij={kernelName:nc,backendName:"cpu",kernelFunc:nl};function rl(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=v.parseAxisParam(a,t[0].shape)[0],i=t.map(f=>f.shape);N.assertParamsConsistent(i,s);let o=N.computeOutShape(t.map(f=>f.shape),s);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(f=>v.sizeFromShape(f.shape)>0);if(u.length===1)return Hr({inputs:{x:u[0]},backend:n});if(u[0].dtype==="complex64"){let f=u.map(w=>Vs({inputs:{input:w},backend:n})),g=u.map(w=>nl({inputs:{input:w},backend:n})),y=rl({inputs:f,backend:n,attrs:{axis:s}}),b=rl({inputs:g,backend:n,attrs:{axis:s}}),x=Bn({inputs:{real:y,imag:b},backend:n});return f.forEach(w=>n.disposeIntermediateTensorInfo(w)),g.forEach(w=>n.disposeIntermediateTensorInfo(w)),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),x}let p=u.map(f=>{let g=[-1,v.sizeFromShape(f.shape.slice(s))];return ct({inputs:{x:f},backend:n,attrs:{shape:g}})}),l=p.map(f=>({vals:n.data.get(f.dataId).values,shape:f.shape}));o=N.computeOutShape(p.map(f=>f.shape),1);let d=p[0].shape[0]===1,h=lx(l,o,t[0].dtype,d),c=N.computeOutShape(u.map(f=>f.shape),s),m=n.makeTensorInfo(c,t[0].dtype,h);return p.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var oj={kernelName:fl,backendName:"cpu",kernelFunc:rl};function WN(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:p,dimRoundingMode:l}=r;ye([a,s],"conv2d");let d=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(a.shape,s.shape,i,p,o,l,!1,d),c=h.filterHeight,m=h.filterWidth,f=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x=h.dataFormat==="channelsLast",w=new At(h.outShape,a.dtype),I=v.computeStrides(a.shape),T=v.computeStrides(s.shape),C=I[0],E=x?I[1]:I[2],A=x?I[2]:1,R=x?1:I[1],F=w.strides[0],S=x?w.strides[1]:w.strides[2],M=x?w.strides[2]:1,B=x?1:w.strides[1],U=n.data.get(a.dataId).values,G=n.data.get(s.dataId).values,K=w.values;for(let j=0;j<h.batchSize;++j){let X=j*C,ee=j*F;for(let Z=0;Z<h.outHeight;++Z){let re=ee+Z*S,te=Z*h.strideHeight-b;for(let ae=0;ae<c;++ae){let ie=te+ae*f;if(ie<0||ie>=h.inHeight)continue;let ve=ae*T[0],be=X+ie*E;for(let de=0;de<h.outWidth;++de){let Ie=re+de*M,Te=de*h.strideWidth-y;for(let Re=0;Re<m;++Re){let Be=Te+Re*g;if(Be<0||Be>=h.inWidth)continue;let nt=ve+Re*T[1],Ge=be+Be*A,qe=nt;for(let $e=0;$e<h.inChannels;++$e){let Ye=U[Ge+$e*R];for(let lt=0;lt<h.outChannels;++lt)K[Ie+lt*B]+=Ye*G[qe+lt];qe+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,K)}var lj={kernelName:oi,backendName:"cpu",kernelFunc:WN};function uj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:p,filterShape:l}=r;ye([a,s],"conv2dBackpropFilter");let d=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(a.shape,l,i,1,o,p,!1,d),{strideHeight:c,strideWidth:m,filterHeight:f,filterWidth:g}=h,y=h.dataFormat==="channelsLast",b=new At(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,I=n.data.get(a.dataId).values,T=n.data.get(s.dataId).values,C=new At(a.shape,a.dtype,I),E=new At(s.shape,s.dtype,T);for(let A=0;A<f;++A){let R=Math.max(0,Math.ceil((w-A)/c)),F=Math.min(h.outHeight,(h.inHeight+w-A)/c);for(let S=0;S<g;++S){let M=Math.max(0,Math.ceil((x-S)/m)),B=Math.min(h.outWidth,(h.inWidth+x-S)/m);for(let U=0;U<h.inChannels;++U)for(let G=0;G<h.outChannels;++G){let K=0;for(let j=0;j<h.batchSize;++j)for(let X=R;X<F;++X){let ee=A+X*c-w;for(let Z=M;Z<B;++Z){let re=S+Z*m-x;y?K+=C.get(j,ee,re,U)*E.get(j,X,Z,G):K+=C.get(j,U,ee,re)*E.get(j,G,X,Z)}}b.set(K,A,S,U,G)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var pj={kernelName:Zh,backendName:"cpu",kernelFunc:uj};function dj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:p,dimRoundingMode:l}=r;ye([a,s],"conv2dBackpropInput");let d=v.computeStrides(s.shape),h=v.computeStrides(a.shape),c=N.convertConv2DDataFormat(p),m=N.computeConv2DInfo(i,s.shape,o,1,u,l,!1,c),f=new At(m.inShape,"float32"),g=f.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,I]=d,{batchSize:T,filterHeight:C,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:S,outHeight:M,outWidth:B,strideHeight:U,strideWidth:G}=m;c=m.dataFormat;let K=C-1-m.padInfo.top,j=E-1-m.padInfo.left,X=c==="channelsLast",ee=f.strides[0],Z=X?f.strides[1]:f.strides[2],re=X?f.strides[2]:1,te=X?1:f.strides[1],ae=h[0],ie=X?h[1]:h[2],ve=X?h[2]:1,be=X?1:h[1];for(let de=0;de<T;++de)for(let Ie=0;Ie<A;++Ie)for(let Te=0;Te<R;++Te){let Re=Te-K,Be=Math.max(0,Math.ceil(Re/U)),nt=Math.min(M,(C+Re)/U);for(let Ge=0;Ge<F;++Ge){let qe=Ge-j,$e=Math.max(0,Math.ceil(qe/G)),Ye=Math.min(B,(E+qe)/G),lt=0;for(let It=Be;It<nt;++It){let Sn=It*U-Re;for(let Zt=$e;Zt<Ye;++Zt){let Nn=Zt*G-qe,or=ae*de+ie*It+ve*Zt,On=x*(C-1-Sn)+w*(E-1-Nn)+I*Ie;for(let Tn=0;Tn<S;++Tn){let Jt=y[or+be*Tn],Xn=b[On+Tn];lt+=Jt*Xn}}}let Mn=ee*de+Z*Te+re*Ge+te*Ie;g[Mn]=lt}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var hj={kernelName:li,backendName:"cpu",kernelFunc:dj};function cj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;ye([a,s],"conv3d");let p=N.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:c,dilationHeight:m,dilationWidth:f,padInfo:g}=p,y=g.front,b=g.left,x=g.top,w=new At(p.outShape,a.dtype),I=n.data.get(a.dataId).values,T=n.data.get(s.dataId).values,C=w.values,E=v.computeStrides(a.shape),A=v.computeStrides(s.shape);for(let R=0;R<p.batchSize;++R){let F=R*E[0],S=R*w.strides[0];for(let M=0;M<p.outDepth;++M){let B=S+M*w.strides[1],U=M*p.strideDepth-y;for(let G=0;G<l;++G){let K=U+G*c;if(K<0||K>=p.inDepth)continue;let j=G*A[0],X=F+K*E[1];for(let ee=0;ee<p.outHeight;++ee){let Z=B+ee*w.strides[2],re=ee*p.strideHeight-x;for(let te=0;te<d;++te){let ae=re+te*m;if(ae<0||ae>=p.inHeight)continue;let ie=j+te*A[1],ve=X+ae*E[2];for(let be=0;be<p.outWidth;++be){let de=Z+be*p.outChannels,Ie=be*p.strideWidth-b;for(let Te=0;Te<h;++Te){let Re=Ie+Te*f;if(Re<0||Re>=p.inWidth)continue;let Be=ie+Te*A[2],nt=ve+Re*p.inChannels,Ge=Be;for(let qe=0;qe<p.inChannels;++qe){let $e=I[nt+qe];for(let Ye=0;Ye<p.outChannels;++Ye)C[de+Ye]+=$e*T[Ge+Ye];Ge+=p.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var mj={kernelName:ui,backendName:"cpu",kernelFunc:cj};function fj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;ye([a,s],"conv3dBackpropFilterV2");let p=v.computeStrides(a.shape),l=v.computeStrides(s.shape),d=N.computeConv3DInfo(a.shape,u,i,1,o),h=d.strideDepth,c=d.strideHeight,m=d.strideWidth,f=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new At(d.filterShape,"float32"),x=b.values,[w,I,T,C]=b.strides,E=n.data.get(s.dataId).values,[A,R,F,S]=l,M=n.data.get(a.dataId).values,[B,U,G,K]=p,j=d.padInfo.front,X=d.padInfo.left,ee=d.padInfo.top;for(let Z=0;Z<f;++Z){let re=Math.max(0,Math.ceil((j-Z)/h)),te=Math.min(d.outDepth,(d.inDepth+j-Z)/h),ae=Z*w;for(let ie=0;ie<g;++ie){let ve=Math.max(0,Math.ceil((ee-ie)/c)),be=Math.min(d.outHeight,(d.inHeight+ee-ie)/c),de=ie*I+ae;for(let Ie=0;Ie<y;++Ie){let Te=Math.max(0,Math.ceil((X-Ie)/m)),Re=Math.min(d.outWidth,(d.inWidth+X-Ie)/m),Be=Ie*T+de;for(let nt=0;nt<d.inChannels;++nt){let Ge=nt*C+Be;for(let qe=0;qe<d.outChannels;++qe){let $e=0;for(let Ye=0;Ye<d.batchSize;++Ye){let lt=Ye*B,Mn=Ye*A;for(let It=re;It<te;++It){let Sn=(Z+It*h-j)*U+lt,Zt=It*R+Mn;for(let Nn=ve;Nn<be;++Nn){let or=(ie+Nn*c-ee)*G+Sn,On=Nn*F+Zt;for(let Tn=Te;Tn<Re;++Tn){let Jt=(Ie+Tn*m-X)*K+or,Xn=Tn*S+On;$e+=M[Jt+nt]*E[Xn+qe]}}}}x[Ge+qe]=$e}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var gj={kernelName:gl,backendName:"cpu",kernelFunc:fj};function yj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;ye([a],"conv3dBackpropInputV2");let p=v.computeStrides(a.shape),l=v.computeStrides(s.shape),d=N.computeConv3DInfo(u,s.shape,o,1,i),h=new At(d.inShape,"float32"),c=h.values,[m,f,g,y]=h.strides,b=n.data.get(a.dataId).values,[x,w,I,T]=p,C=n.data.get(s.dataId).values,[E,A,R,F]=l,{batchSize:S,filterDepth:M,filterHeight:B,filterWidth:U,inChannels:G,inDepth:K,inHeight:j,inWidth:X,outChannels:ee,outDepth:Z,outHeight:re,outWidth:te,strideDepth:ae,strideHeight:ie,strideWidth:ve}=d,be=M-1-d.padInfo.front,de=B-1-d.padInfo.top,Ie=U-1-d.padInfo.left;for(let Te=0;Te<S;++Te)for(let Re=0;Re<G;++Re)for(let Be=0;Be<K;++Be){let nt=Be-be,Ge=Math.max(0,Math.ceil(nt/ae)),qe=Math.min(Z,(M+nt)/ae);for(let $e=0;$e<j;++$e){let Ye=$e-de,lt=Math.max(0,Math.ceil(Ye/ie)),Mn=Math.min(re,(B+Ye)/ie);for(let It=0;It<X;++It){let Sn=It-Ie,Zt=Math.max(0,Math.ceil(Sn/ve)),Nn=Math.min(te,(U+Sn)/ve),or=0;for(let On=Ge;On<qe;++On){let Tn=On*ae-nt;for(let Jt=lt;Jt<Mn;++Jt){let Xn=Jt*ie-Ye;for(let xa=Zt;xa<Nn;++xa){let Eu=xa*ve-Sn,Yr=x*Te+w*On+I*Jt+T*xa,$u=E*(M-1-Tn)+A*(B-1-Xn)+R*(U-1-Eu)+F*Re;for(let Fr=0;Fr<ee;++Fr){let va=b[Yr+Fr],Yt=C[$u+Fr];or+=va*Yt}}}}c[m*Te+f*Be+g*$e+y*It+Re]=or}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}var bj={kernelName:yl,backendName:"cpu",kernelFunc:yj},xj=tt(pi,e=>Math.cos(e)),vj={kernelName:pi,backendName:"cpu",kernelFunc:xj},wj=tt(di,e=>Math.cosh(e)),kj={kernelName:di,backendName:"cpu",kernelFunc:wj};function Ij(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:p}=r,[l,d,h,c]=a.shape,m=s.shape[0],[f,g]=o,y=Pe([m,f,g,c],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,I=v.computeStrides(a.shape),T=v.computeStrides(y.shape);for(let C=0;C<m;C++){let E=C*4,A=b[E],R=b[E+1],F=b[E+2],S=b[E+3],M=x[C];if(M>=l)continue;let B=f>1?(F-A)*(d-1)/(f-1):0,U=g>1?(S-R)*(h-1)/(g-1):0;for(let G=0;G<f;G++){let K=f>1?A*(d-1)+G*B:.5*(A+F)*(d-1);if(K<0||K>d-1){for(let j=0;j<g;j++)for(let X=0;X<c;X++){let ee=X+j*T[2]+G*T[1]+C*T[0];y.values[ee]=p}continue}if(u==="bilinear"){let j=Math.floor(K),X=Math.ceil(K),ee=K-j;for(let Z=0;Z<g;Z++){let re=g>1?R*(h-1)+Z*U:.5*(R+S)*(h-1);if(re<0||re>h-1){for(let ve=0;ve<c;ve++){let be=ve+Z*T[2]+G*T[1]+C*T[0];y.values[be]=p}continue}let te=Math.floor(re),ae=Math.ceil(re),ie=re-te;for(let ve=0;ve<c;ve++){let be=ve+te*I[2]+j*I[1]+M*I[0],de=w[be];be=ve+ae*I[2]+j*I[1]+M*I[0];let Ie=w[be];be=ve+te*I[2]+X*I[1]+M*I[0];let Te=w[be];be=ve+ae*I[2]+X*I[1]+M*I[0];let Re=w[be],Be=de+(Ie-de)*ie,nt=Te+(Re-Te)*ie;be=ve+Z*T[2]+G*T[1]+C*T[0],y.values[be]=Be+(nt-Be)*ee}}}else for(let j=0;j<g;++j){let X=g>1?R*(h-1)+j*U:.5*(R+S)*(h-1);if(X<0||X>h-1){for(let re=0;re<c;re++){let te=re+j*T[2]+G*T[1]+C*T[0];y.values[te]=p}continue}let ee=Math.round(X),Z=Math.round(K);for(let re=0;re<c;re++){let te=re+ee*I[2]+Z*I[1]+M*I[0],ae=re+j*T[2]+G*T[1]+C*T[0];y.values[ae]=w[te]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}var Sj={kernelName:xl,backendName:"cpu",kernelFunc:Ij};function Nj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ye(a,"cumprod");let u=N.getAxesPermutation([s],a.shape.length),p=a;u!=null&&(p=Rn({inputs:{x:a},backend:n,attrs:{perm:u}}));let l=N.getInnerMostAxes(1,a.shape.length)[0];if(l!==p.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${l}`);let d=ar(p.dtype,"int32"),h=v.makeOnesTypedArray(v.sizeFromShape(p.shape),d),c=n.data.get(p.dataId).values,m=p.shape[p.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)h[x]=i?1:c[x];else{let w=f(y,b-1);h[x]=i?c[w]*h[w]:c[x]*h[w]}}let g=n.makeTensorInfo(p.shape,d,h);if(u!=null){let y=N.getUndoAxesPermutation(u),b=Rn({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(p),b}return g}var Tj={kernelName:bl,backendName:"cpu",kernelFunc:Nj};function Cj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;ye(a,"cumsum");let u=N.getAxesPermutation([s],a.shape.length),p=a;u!=null&&(p=Rn({inputs:{x:a},backend:n,attrs:{perm:u}}));let l=N.getInnerMostAxes(1,a.shape.length)[0];if(l!==p.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${p.shape.length-1} but got axis=${l}`);let d=ar(p.dtype,"int32"),h=v.makeZerosTypedArray(v.sizeFromShape(p.shape),d),c=n.data.get(p.dataId).values,m=p.shape[p.shape.length-1],f=o?(y,b)=>y+m-b-1:(y,b)=>y+b;for(let y=0;y<c.length;y+=m)for(let b=0;b<m;b++){let x=f(y,b);if(b===0)h[x]=i?0:c[x];else{let w=f(y,b-1);h[x]=i?c[w]+h[w]:c[x]+h[w]}}let g=n.makeTensorInfo(p.shape,d,h);if(u!=null){let y=N.getUndoAxesPermutation(u),b=Rn({inputs:{x:g},backend:n,attrs:{perm:y}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(p),b}return g}var _j={kernelName:hi,backendName:"cpu",kernelFunc:Cj};function Ej(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,l=ox(u,p,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}else if(a.shape.length===2){let u=n.bufferSync(a),p=n.bufferSync(s),l=XS(u,p,i,o);return n.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var $j={kernelName:Ip,backendName:"cpu",kernelFunc:Ej};function Aj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;v.assert(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);let o=a.shape[0],u=a.shape[1],p=a.shape[2],l=a.shape[3],d=u*s,h=p*s,c=l/(s*s),m=n.data.get(a.dataId).values,f=new Float32Array(o*d*h*c),g=0;for(let y=0;y<o;++y)for(let b=0;b<d;++b){let x=Math.floor(b/s),w=b%s;for(let I=0;I<h;++I){let T=Math.floor(I/s),C=I%s,E=(w*s+C)*c;for(let A=0;A<c;++A){let R=A+E+l*(T+p*(x+u*y));f[g++]=m[R]}}}return n.makeTensorInfo([o,d,h,c],a.dtype,f)}var Fj={kernelName:vl,backendName:"cpu",kernelFunc:Aj};function VN(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:p}=r;ye([a,s],"depthwiseConv2DNative");let l=v.computeStrides(a.shape),d=v.computeStrides(s.shape),h=u;h==null&&(h=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);let c=N.computeConv2DInfo(a.shape,s.shape,i,h,o,p,!0),{filterHeight:m,filterWidth:f,dilationHeight:g,dilationWidth:y,padInfo:b}=c,x=b.left,w=b.top,I=c.outChannels/c.inChannels,T=new At(c.outShape,a.dtype),C=n.data.get(a.dataId).values,E=n.data.get(s.dataId).values,A=T.values;for(let R=0;R<c.batchSize;++R){let F=R*l[0],S=R*T.strides[0];for(let M=0;M<c.outHeight;++M){let B=S+M*T.strides[1],U=M*c.strideHeight-w;for(let G=0;G<m;++G){let K=U+G*g;if(K<0||K>=c.inHeight)continue;let j=G*d[0],X=F+K*l[1];for(let ee=0;ee<c.outWidth;++ee){let Z=B+ee*T.strides[2],re=ee*c.strideWidth-x;for(let te=0;te<f;++te){let ae=re+te*y;if(ae<0||ae>=c.inWidth)continue;let ie=j+te*d[1],ve=X+ae*c.inChannels,be=Z,de=ie;for(let Ie=0;Ie<c.inChannels;++Ie){let Te=C[ve+Ie];for(let Re=0;Re<I;++Re)A[be+Re]+=Te*E[de+Re];be+=I,de+=I}}}}}}return n.makeTensorInfo(T.shape,T.dtype,T.values)}var Rj={kernelName:ci,backendName:"cpu",kernelFunc:VN};function Dj(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:p,filterShape:l}=r;ye([a,s],"depthwiseConv2dNativeBackpropFilter");let d=N.computeConv2DInfo(a.shape,l,i,o,u,p,!0),{strideHeight:h,strideWidth:c,filterHeight:m,filterWidth:f}=d,g=new At(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,w=n.data.get(a.dataId).values,I=new At(a.shape,a.dtype,w),T=n.data.get(s.dataId).values,C=new At(s.shape,s.dtype,T);for(let E=0;E<m;++E){let A=Math.max(0,Math.ceil((b-E)/h)),R=Math.min(d.outHeight,(d.inHeight+b-E)/h);for(let F=0;F<f;++F){let S=Math.max(0,Math.ceil((y-F)/c)),M=Math.min(d.outWidth,(d.inWidth+y-F)/c);for(let B=0;B<d.outChannels;++B){let U=Math.trunc(B/x),G=B%x,K=0;for(let j=0;j<d.batchSize;++j)for(let X=A;X<R;++X){let ee=E+X*h-b;for(let Z=S;Z<M;++Z){let re=F+Z*c-y;K+=I.get(j,ee,re,U)*C.get(j,X,Z,B)}}g.set(K,E,F,U,G)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var Mj={kernelName:Jh,backendName:"cpu",kernelFunc:Dj};function Oj(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:p,inputShape:l}=r;ye([a,s],"depthwiseConv2DNativeBackpropInput");let d=v.computeStrides(a.shape),h=v.computeStrides(s.shape),c=N.computeConv2DInfo(l,s.shape,i,o,u,p,!0),m=new At(c.inShape,"float32"),f=m.values,[g,y,b]=m.strides,x=n.data.get(a.dataId).values,[w,I,T]=d,C=n.data.get(s.dataId).values,[E,A,R]=h,{batchSize:F,filterHeight:S,filterWidth:M,inChannels:B,inHeight:U,inWidth:G,outChannels:K,outHeight:j,outWidth:X,strideHeight:ee,strideWidth:Z}=c,re=S-1-c.padInfo.top,te=M-1-c.padInfo.left,ae=K/B;for(let ie=0;ie<F;++ie)for(let ve=0;ve<B;++ve)for(let be=0;be<U;++be){let de=be-re,Ie=Math.max(0,Math.ceil(de/ee)),Te=Math.min(j,(S+de)/ee);for(let Re=0;Re<G;++Re){let Be=Re-te,nt=Math.max(0,Math.ceil(Be/Z)),Ge=Math.min(X,(M+Be)/Z),qe=0;for(let $e=Ie;$e<Te;++$e){let Ye=$e*ee-de;for(let lt=nt;lt<Ge;++lt){let Mn=lt*Z-Be,It=w*ie+I*$e+T*lt,Sn=E*(S-1-Ye)+A*(M-1-Mn)+R*ve;for(let Zt=0;Zt<ae;++Zt){let Nn=ve*ae+Zt,or=x[It+Nn],On=C[Sn+Zt];qe+=or*On}}}f[g*ie+y*be+b*Re+ve]=qe}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var Lj={kernelName:Yh,backendName:"cpu",kernelFunc:Oj};function zj(e){let{inputs:t,backend:n}=e,{x:r}=t,a=v.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Pe([a,a],r.dtype),o=i.values;for(let p=0;p<s.length;p++)o[p*a+p]=s[p];let u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}var Pj={kernelName:Sp,backendName:"cpu",kernelFunc:zj},Bj={kernelName:mi,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,p=u.data.get(r.dataId).values,l=r.shape.length,d=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:c,inHeight:m,inWidth:f,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:I,filterHeight:T,filterWidth:C,dilationHeight:E,dilationWidth:A,outShape:R}=N.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),F=v.sizeFromShape(R),S=R.length,M=v.getArrayFromDType(r.dtype,F);for(let B=0;B<c;++B)for(let U=0;U<y;++U){let G=U*w-x.top;for(let K=0;K<b;++K){let j=K*I-x.left;for(let X=0;X<g;++X){let ee=Number.MIN_SAFE_INTEGER;for(let re=0;re<T;++re){let te=G+re*E;if(te>=0&&te<m)for(let ae=0;ae<C;++ae){let ie=j+ae*A;if(ie>=0&&ie<f){let ve=v.locToIndex([B,te,ie,X],l,v.computeStrides(r.shape)),be=v.locToIndex([re,ae,X],h,v.computeStrides(a.shape)),de=p[ve]+d[be];de>ee&&(ee=de)}}}let Z=v.locToIndex([B,U,K,X],S,v.computeStrides(R));M[Z]=ee}}}return{dataId:u.write(v.toTypedArray(M,r.dtype),R,r.dtype),shape:R,dtype:r.dtype}}},Wj={kernelName:Bo,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,p=t,l=v.toNestedArray(r.shape,p.data.get(r.dataId).values),d=v.toNestedArray(a.shape,p.data.get(a.dataId).values),{batchSize:h,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:I,filterWidth:T,dilationHeight:C,dilationWidth:E,outShape:A}=N.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);v.assert(s.rank===A.length,()=>`Error in ${Bo}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=v.toNestedArray(A,p.data.get(s.dataId).values),F=v.makeZerosNestedTypedArray(a.shape,a.dtype);for(let S=0;S<h;++S)for(let M=0;M<g;++M){let B=M*x-b.top;for(let U=0;U<y;++U){let G=U*w-b.left;for(let K=0;K<f;++K){let j=Number.MIN_SAFE_INTEGER,X=0,ee=0;for(let Z=0;Z<I;++Z){let re=B+Z*C;if(re>=0&&re<c)for(let te=0;te<T;++te){let ae=G+te*E;if(ae>=0&&ae<m){let ie=l[S][re][ae][K]+d[Z][te][K];ie>j&&(j=ie,X=Z,ee=te)}}}F[X][ee][K]+=R[S][M][U][K]}}}return{dataId:p.write(v.toTypedArray(F,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Vj={kernelName:Po,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,p=t,l=v.toNestedArray(r.shape,p.data.get(r.dataId).values),d=v.toNestedArray(a.shape,p.data.get(a.dataId).values),{batchSize:h,inHeight:c,inWidth:m,inChannels:f,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:I,filterWidth:T,dilationHeight:C,dilationWidth:E,outShape:A}=N.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);v.assert(s.rank===A.length,()=>`Error in ${Po}, dy must have the same rank as output ${A.length}, but got ${s.rank}`);let R=v.toNestedArray(A,p.data.get(s.dataId).values),F=v.makeZerosNestedTypedArray(r.shape,r.dtype);for(let S=0;S<h;++S)for(let M=0;M<g;++M){let B=M*x-b.top;for(let U=0;U<y;++U){let G=U*w-b.left;for(let K=0;K<f;++K){let j=Number.MIN_SAFE_INTEGER,X=B<0?0:B,ee=G<0?0:G;for(let Z=0;Z<I;++Z){let re=B+Z*C;if(re>=0&&re<c)for(let te=0;te<T;++te){let ae=G+te*E;if(ae>=0&&ae<m){let ie=l[S][re][ae][K]+d[Z][te][K];ie>j&&(j=ie,X=re,ee=ae)}}}F[S][X][ee][K]+=R[S][M][U][K]}}}return{dataId:p.write(v.toTypedArray(F,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function Uj(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{canvas:s,options:i}=r,{contextOptions:o,imageOptions:u}=i||{},p=(u==null?void 0:u.alpha)||1,l=(o==null?void 0:o.contextType)||"2d";if(l!=="2d")throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);let d=s.getContext(l,(o==null?void 0:o.contextAttributes)||{});if(d==null)throw new Error(`Could not get the context with ${l} type.`);let[h,c]=a.shape.slice(0,2),m=a.shape.length===2?1:a.shape[2],f=n.data.get(a.dataId).values,g=a.dtype==="float32"?255:1,y=new Uint8ClampedArray(c*h*4);for(let x=0;x<h*c;++x){let w=[0,0,0,255*p];for(let T=0;T<m;T++){let C=f[x*m+T];if(a.dtype==="float32"){if(C<0||C>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${C}.`)}else if(a.dtype==="int32"&&(C<0||C>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${C}.`);m===1?(w[0]=C*g,w[1]=C*g,w[2]=C*g):w[T]=C*g}let I=x*4;y[I+0]=Math.round(w[0]),y[I+1]=Math.round(w[1]),y[I+2]=Math.round(w[2]),y[I+3]=Math.round(w[3])}s.width=c,s.height=h;let b=new ImageData(y,c,h);return d.putImageData(b,0,0),a}var Gj={kernelName:eg,backendName:"cpu",kernelFunc:Uj};function gd(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"sum");let o;a.dtype==="bool"?o=Ga({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):o=Hr({inputs:{x:a},backend:n});let u=o.shape.length,p=v.parseAxisParam(s,o.shape),l=N.getAxesPermutation(p,u),d=p,h=o;l!=null&&(h=Rn({inputs:{x:o},backend:n,attrs:{perm:l}}),d=N.getInnerMostAxes(d.length,u)),N.assertAxesAreInnerMostDims("sum",d,h.shape.length);let[c,m]=N.computeOutAndReduceShapes(h.shape,d),f=N.upcastType(h.dtype,"int32"),g=Fh(n,c,f),y=v.sizeFromShape(m),b=n.data.get(g.dataId).values,x=n.data.get(h.dataId).values;for(let w=0;w<b.length;++w){let I=w*y,T=0;for(let C=0;C<y;++C)T+=x[I+C];b[w]=T}if(i){let w=N.expandShapeToKeepDim(g.shape,p),I=g;g=ct({inputs:{x:g},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(I)}return n.disposeIntermediateTensorInfo(o),l!=null&&n.disposeIntermediateTensorInfo(h),g}var Hj={kernelName:oo,backendName:"cpu",kernelFunc:gd};function jj(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=N.decodeEinsumEquation(a,s.length);N.checkEinsumDimSizes(i.length,u,s);let{path:p,steps:l}=N.getEinsumComputePath(o,u),d=l.length,h=null,c=i.length,m=[];for(let f=0;f<d;++f){for(let g of l[f]){let{permutationIndices:y,expandDims:b}=N.getEinsumPermutation(c,u[g]),x;N.isIdentityPermutation(y)?x=s[g]:(x=Rn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let w=x.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);v.arraysEqual(x.shape,w)||(x=ct({inputs:{x},backend:n,attrs:{shape:w}}),m.push(x)),h===null?h=x:(h=um({inputs:{a:x,b:h},backend:n}),m.push(h))}f<d-1&&(p[f]>=0&&(h=gd({inputs:{x:h},backend:n,attrs:{axis:p[f]-(i.length-c),keepDims:!1}}),m.push(h)),c--)}for(let f of m)f!==h&&n.disposeIntermediateTensorInfo(f);return h}var qj={kernelName:Qh,backendName:"cpu",kernelFunc:jj};function Kj(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t;ye([r,a],"eluGrad");let s=new Float32Array(v.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let u=0;u<i.length;++u){let p=i[u];p>=0?s[u]=o[u]:s[u]=o[u]*(p+1)}return n.makeTensorInfo(a.shape,"float32",s)}var Xj={kernelName:wl,backendName:"cpu",kernelFunc:Kj},Zj=N.ERF_P,Jj=N.ERF_A1,Yj=N.ERF_A2,Qj=N.ERF_A3,e5=N.ERF_A4,t5=N.ERF_A5,n5=tt(yi,e=>{let t=Math.sign(e),n=Math.abs(e),r=1/(1+Zj*n);return t*(1-((((t5*r+e5)*r+Qj)*r+Yj)*r+Jj)*r*Math.exp(-n*n))}),r5={kernelName:yi,backendName:"cpu",kernelFunc:n5};function Mh(e){let{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice(),u=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),ct({inputs:{x:a},backend:n,attrs:{shape:o}})}var a5={kernelName:Il,backendName:"cpu",kernelFunc:Mh},s5=Ct((e,t)=>e/t),xx=Wt(fi,s5),Ef={kernelName:fi,backendName:"cpu",kernelFunc:xx};function UN(e,t,n){let r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,p=[a,s],l=v.sizeFromShape(p),d=v.getTypedArrayFromDType("float32",l),h=v.getTypedArrayFromDType("float32",l);for(let g=0;g<a;g++){let y=Us({inputs:{x:o},backend:n,attrs:{begin:[g,0],size:[1,s]}}),b=Us({inputs:{x:u},backend:n,attrs:{begin:[g,0],size:[1,s]}}),x=Bn({inputs:{real:y,imag:b},backend:n}),{real:w,imag:I}=i5(x,t,n),T=N.mergeRealAndImagArrays(w,I);for(let C=0;C<s;C++){let E=N.getComplexWithIndex(T,C);d[g*s+C]=E.real,h[g*s+C]=E.imag}n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(x)}let c=n.makeTensorInfo(p,"float32",d),m=n.makeTensorInfo(p,"float32",h),f=Bn({inputs:{real:c,imag:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}function i5(e,t,n){let r=v.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(o5(r)){let o=$f(s,i,r,t,n),u=[e.shape[0],e.shape[1]];if(t){let p=n.makeTensorInfo(u,"float32",o.real),l=n.makeTensorInfo(u,"float32",o.imag),d=n.makeTensorInfo([],"float32",v.createScalarValue(r,"float32")),h=Hr({inputs:{x:d},backend:n}),c=Ef.kernelFunc({inputs:{a:p,b:d},backend:n}),m=Ef.kernelFunc({inputs:{a:l,b:h},backend:n}),f=n.data.get(c.dataId).values,g=n.data.get(m.dataId).values;return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),{real:f,imag:g}}return o}else{let o=N.mergeRealAndImagArrays(s,i),u=l5(o,r,t);return N.splitRealAndImagArrays(u)}}function o5(e){return(e&e-1)===0}function $f(e,t,n,r,a){if(n===1)return{real:e,imag:t};let s=N.mergeRealAndImagArrays(e,t),i=n/2,o=N.complexWithEvenIndex(s),u=o.real,p=o.imag,l=[u.length],d=a.makeTensorInfo(l,"float32",u),h=a.makeTensorInfo(l,"float32",p),c=Bn({inputs:{real:d,imag:h},backend:a}),m=N.complexWithOddIndex(s),f=m.real,g=m.imag,y=[f.length],b=a.makeTensorInfo(y,"float32",f),x=a.makeTensorInfo(y,"float32",g),w=Bn({inputs:{real:b,imag:x},backend:a}),I=$f(u,p,i,r,a),T=I.real,C=I.imag,E=[T.length],A=a.makeTensorInfo(E,"float32",T),R=a.makeTensorInfo(E,"float32",C),F=Bn({inputs:{real:A,imag:R},backend:a}),S=$f(f,g,i,r,a),M=S.real,B=S.imag,U=[M.length],G=a.makeTensorInfo(U,"float32",M),K=a.makeTensorInfo(U,"float32",B),j=Bn({inputs:{real:G,imag:K},backend:a}),X=N.exponents(n,r),ee=[X.real.length],Z=a.makeTensorInfo(ee,"float32",X.real),re=a.makeTensorInfo(ee,"float32",X.imag),te=Bn({inputs:{real:Z,imag:re},backend:a}),ae=um({inputs:{a:te,b:j},backend:a}),ie=tl({inputs:{a:F,b:ae},backend:a}),ve=gx({inputs:{a:F,b:ae},backend:a}),be=Vs({inputs:{input:ie},backend:a}),de=Vs({inputs:{input:ve},backend:a}),Ie=nl({inputs:{input:ie},backend:a}),Te=nl({inputs:{input:ve},backend:a}),Re=rl({inputs:[be,de],backend:a,attrs:{axis:0}}),Be=rl({inputs:[Ie,Te],backend:a,attrs:{axis:0}}),nt=a.data.get(Re.dataId).values,Ge=a.data.get(Be.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(c),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(Z),a.disposeIntermediateTensorInfo(re),a.disposeIntermediateTensorInfo(te),a.disposeIntermediateTensorInfo(ae),a.disposeIntermediateTensorInfo(ie),a.disposeIntermediateTensorInfo(ve),a.disposeIntermediateTensorInfo(be),a.disposeIntermediateTensorInfo(Ie),a.disposeIntermediateTensorInfo(de),a.disposeIntermediateTensorInfo(Te),a.disposeIntermediateTensorInfo(Re),a.disposeIntermediateTensorInfo(Be),{real:nt,imag:Ge}}function l5(e,t,n){let r=new Float32Array(t*2);for(let a=0;a<t;a++){let s=0,i=0;for(let o=0;o<t;o++){let u=N.exponent(a*o,t,n),p=N.getComplexWithIndex(e,o);s+=p.real*u.real-p.imag*u.imag,i+=p.real*u.imag+p.imag*u.real}n&&(s/=t,i/=t),N.assignToTypedArray(r,s,i,a)}return r}function u5(e){let{inputs:t,backend:n}=e,{input:r}=t,a=v.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=ct({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),u=UN(o,!1,n),p=ct({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),p}var p5={kernelName:ec,backendName:"cpu",kernelFunc:u5};function vx(e){let{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||v.inferDtype(a),o=v.getArrayFromDType(i,v.sizeFromShape(r));return h5(o,a),t.makeTensorInfo(r,i,o)}var d5={kernelName:Np,backendName:"cpu",kernelFunc:vx};function h5(e,t,n){e.fill(t)}var c5={kernelName:Sl,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,a=n,s=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(r.shape)),[i,o,u,p]=r.shape,l=a.data.get(r.dataId).values;for(let d=0;d<i;d++){let h=d*u*o*p;for(let c=0;c<o;c++){let m=c*(u*p);for(let f=0;f<u;f++){let g=f*p;for(let y=0;y<p;y++){let b=Math.round(u-f-1),x=h+m+g+y,w=l[x];if(b>=0&&b<u){let I=b*p,T=h+m+I+y;w=l[T]}s[x]=w}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};function m5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=WN({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){let g=f;if(l==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){let y=ct({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});f=tl({inputs:{a:f,b:y},backend:n}),n.disposeIntermediateTensorInfo(y)}else f=tl({inputs:{a:f,b:i},backend:n});n.disposeIntermediateTensorInfo(g)}if(c){let g=f;if(l==="NCHW"&&c==="prelu"&&o.shape.length===1&&o.shape[0]!==1){let y=ct({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});f=Dh(n,f,c,y,m),n.disposeIntermediateTensorInfo(y)}else f=Dh(n,f,c,o,m);n.disposeIntermediateTensorInfo(g)}return f}var f5={kernelName:$s,backendName:"cpu",kernelFunc:m5};function g5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=VN({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){let g=f;f=tl({inputs:{a:f,b:i},backend:n}),n.disposeIntermediateTensorInfo(g)}if(c){let g=f;f=Dh(n,f,c,o,m),n.disposeIntermediateTensorInfo(g)}return f}var y5={kernelName:As,backendName:"cpu",kernelFunc:g5};function b5(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=v.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,p,l,d]=N.prepareAndValidate(r,a);if(p===0)return n.makeTensorInfo(u,r.dtype,[]);let h=n.data.get(a.dataId).values,c=n.bufferSync(r),m=sN(h,c,r.dtype,p,o,l,d,r.shape,s);return n.makeTensorInfo(u,r.dtype,m.values)}var x5={kernelName:Tl,backendName:"cpu",kernelFunc:b5};function v5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;ye([a,s],"gatherV2");let u=v.parseAxisParam(i,a.shape)[0],p=n.data.get(s.dataId).values,l=a.shape[u];for(let w=0;w<p.length;++w){let I=p[w];v.assert(I<=l-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${l-1}]`)}let d=o;o==null&&(d=0);let h=v.sizeFromShape(s.shape),c=N.segment_util.collectGatherOpShapeInfo(a,s,u,d),m=ct({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=ct({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}}),g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize],y=n.bufferSync(f),b=n.bufferSync(m),x=iN(b,y,g);return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var w5={kernelName:Nl,backendName:"cpu",kernelFunc:v5};function k5(e){let{inputs:t,backend:n}=e,{input:r}=t,a=v.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=a/s,o=ct({inputs:{x:r},backend:n,attrs:{shape:[i,s]}}),u=UN(o,!0,n),p=ct({inputs:{x:u},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),p}var I5={kernelName:tc,backendName:"cpu",kernelFunc:k5},S5=tt(Ni,e=>Number.isFinite(e)?1:0,"bool"),N5={kernelName:Ni,backendName:"cpu",kernelFunc:S5},T5=tt(Ti,e=>Math.abs(e)===1/0?1:0,"bool"),C5={kernelName:Ti,backendName:"cpu",kernelFunc:T5},_5=tt(Ci,e=>Number.isNaN(e)?1:0,"bool"),E5={kernelName:Ci,backendName:"cpu",kernelFunc:_5};function $5(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=dN(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var A5={kernelName:$l,backendName:"cpu",kernelFunc:$5},F5=tt($i,e=>Math.log1p(e)),R5={kernelName:$i,backendName:"cpu",kernelFunc:F5},D5=Ct((e,t)=>e&&t),M5=Wt(Al,D5,null,"bool"),O5={kernelName:Al,backendName:"cpu",kernelFunc:M5},L5=tt(Fl,e=>e?0:1,"bool"),z5={kernelName:Fl,backendName:"cpu",kernelFunc:L5},P5=Ct((e,t)=>e||t),B5=Wt(Rl,P5,null,"bool"),W5={kernelName:Rl,backendName:"cpu",kernelFunc:B5};function V5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;ye(a,"LRN");let p=a.shape[3],l=p-1,d=n.data.get(a.dataId).values,h=v.sizeFromShape(a.shape),c=new Float32Array(h);function m(f){let g=f%p,y=f-g+Math.max(0,g-s),b=f-g+Math.min(g+s,l),x=0;for(;y<=b;y++){let w=d[y];x+=w*w}return x}for(let f=0;f<h;f++){let g=m(f),y=d[f]*Math.pow(i+o*g,-u);c[f]=y}return n.makeTensorInfo(a.shape,a.dtype,c)}var U5={kernelName:Ai,backendName:"cpu",kernelFunc:V5};function G5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:p,beta:l}=r;ye(i,"LRNGrad");let d=v.sizeFromShape(i.shape),h=i.shape[3],c=n.data.get(i.dataId).values,m=n.data.get(a.dataId).values,f=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let b=0;b<y;b++){let x=b%h,w=b-x+Math.max(0,x-o),I=b-x+Math.min(h,x+o+1),T=0;for(let C=w;C<I;C++)T+=Math.pow(m[C],2);T=p*T+u;for(let C=w;C<I;C++){let E=-2*p*l*m[C]*f[b]/T;b===C&&(E+=Math.pow(T,-l)),E*=c[b],g[C]+=E}}return n.makeTensorInfo(i.shape,a.dtype,g)}var H5={kernelName:Dl,backendName:"cpu",kernelFunc:G5};function GN(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n,u=a.shape,p=u.length,l=v.parseAxisParam(s,u),d=l,h=N.getAxesPermutation(d,p),c=o.data.get(a.dataId).values;if(h!=null){let w=new Array(p);for(let I=0;I<w.length;I++)w[I]=u[h[I]];c=px(c,u,a.dtype,h,w),d=N.getInnerMostAxes(d.length,p),u=w}ye(a,"max"),N.assertAxesAreInnerMostDims("max",d,p);let[m,f]=N.computeOutAndReduceShapes(u,d),g=v.sizeFromShape(f),y=cN(c,g,m,a.dtype),b=o.write(y,m,a.dtype),x=m;return i&&(x=N.expandShapeToKeepDim(m,l)),{dataId:b,shape:x,dtype:a.dtype}}var j5={kernelName:Fi,backendName:"cpu",kernelFunc:GN};function q5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ye(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,p=1;v.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,p,o,u),d;if(l.filterWidth===1&&l.filterHeight===1&&v.arraysEqual(l.inShape,l.outShape))d=Hr({inputs:{x:a},backend:n});else{let h=n.data.get(a.dataId).values,c=v.computeStrides(a.shape),m=bx(h,a.shape,a.dtype,c,l,"max");d=n.makeTensorInfo(l.outShape,a.dtype,m.values)}return d}var K5={kernelName:Di,backendName:"cpu",kernelFunc:q5};function X5(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=r;ye(a,"maxPool3d");let l=N.computePool3DInfo(a.shape,s,i,1,o,u,p),d=n.data.get(a.dataId).values,h=BN(d,a.shape,a.dtype,v.computeStrides(a.shape),l,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}var Z5={kernelName:Ml,backendName:"cpu",kernelFunc:X5};function J5(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=r;ye([a,s],"maxPool3DGrad");let l=N.computePool3DInfo(s.shape,i,o,1,u,p),d=n.bufferSync(s),h=P6(d,l),c=l.strideDepth,m=l.strideHeight,f=l.strideWidth,g=l.dilationDepth,y=l.dilationHeight,b=l.dilationWidth,x=l.effectiveFilterDepth,w=l.effectiveFilterHeight,I=l.effectiveFilterWidth,T=x-1-l.padInfo.front,C=I-1-l.padInfo.left,E=w-1-l.padInfo.top,A=Pe(s.shape,"float32"),R=n.bufferSync(a);for(let F=0;F<l.batchSize;++F)for(let S=0;S<l.inChannels;++S)for(let M=0;M<l.inDepth;++M)for(let B=0;B<l.inHeight;++B)for(let U=0;U<l.inWidth;++U){let G=M-T,K=B-E,j=U-C,X=0;for(let ee=0;ee<x;ee+=g){let Z=(G+ee)/c;if(!(Z<0||Z>=l.outDepth||Math.floor(Z)!==Z))for(let re=0;re<w;re+=y){let te=(K+re)/m;if(!(te<0||te>=l.outHeight||Math.floor(te)!==te))for(let ae=0;ae<I;ae+=b){let ie=(j+ae)/f;if(ie<0||ie>=l.outWidth||Math.floor(ie)!==ie)continue;let ve=x*w*I-1-h.get(F,Z,te,ie,S),be=ee*w*I+re*I+ae,de=ve===be?1:0;if(de===0)continue;let Ie=R.get(F,Z,te,ie,S);X+=Ie*de}}}A.set(X,F,M,B,U,S)}return n.makeTensorInfo(A.shape,A.dtype,A.values)}var Y5={kernelName:Cp,backendName:"cpu",kernelFunc:J5};function Q5(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;ye([s,i],"maxPoolGrad");let{filterSize:u,strides:p,pad:l,dimRoundingMode:d}=r,h=N.computePool2DInfo(o.shape,u,p,1,l,d),c=n.data.get(o.dataId).values,m=Pe(h.outShape,o.dtype,PN(c,o.shape,o.dtype,h).values),f=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,I=w-1-h.padInfo.left,T=x-1-h.padInfo.top,C=Pe(o.shape,"float32"),E=n.data.get(a.dataId).values,A=Pe(a.shape,"float32",E);for(let R=0;R<h.batchSize;++R)for(let F=0;F<h.inChannels;++F)for(let S=0;S<h.inHeight;++S)for(let M=0;M<h.inWidth;++M){let B=S-T,U=M-I,G=0;for(let K=0;K<x;K+=y){let j=(B+K)/f;if(!(j<0||j>=h.outHeight||Math.floor(j)!==j))for(let X=0;X<w;X+=b){let ee=(U+X)/g;if(ee<0||ee>=h.outWidth||Math.floor(ee)!==ee)continue;let Z=x*w-1-m.get(R,j,ee,F),re=K*w+X,te=Z===re?1:0;if(te===0)continue;let ae=A.get(R,j,ee,F);G+=ae*te}}C.set(G,R,S,M,F)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var eq={kernelName:Tp,backendName:"cpu",kernelFunc:Q5};function tq(e,t,n,r,a){let s=v.computeStrides(t),i=bx(e,t,n,s,a,"max"),o=PN(e,t,n,a,!0,r);return[i.values,o.values]}var nq={kernelName:_p,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;ye(r,"MaxPoolWithArgmax");let p=u.data.get(r.dataId).values,l=N.computePool2DInfo(r.shape,a,s,[1,1],i),[d,h]=tq(p,r.shape,r.dtype,o,l),c=u.write(d,l.outShape,r.dtype),m=u.write(h,l.outShape,r.dtype);return[{dataId:c,shape:l.outShape,dtype:r.dtype},{dataId:m,shape:l.outShape,dtype:"int32"}]}};function rq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=v.parseAxisParam(s,a.shape),u=N.computeOutAndReduceShapes(a.shape,o)[1],p=v.sizeFromShape(u),l=[],d=n.makeTensorInfo([],"float32",new Float32Array([p]));l.push(d);let h=Ga({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);let c=xx({inputs:{a:h,b:d},backend:n});l.push(c);let m=gd({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var aq={kernelName:Mi,backendName:"cpu",kernelFunc:rq};function sq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;ye(a,"min");let o=v.parseAxisParam(s,a.shape),u=o,p=N.getAxesPermutation(u,a.shape.length),l=a;p!=null&&(l=Rn({inputs:{x:a},backend:n,attrs:{perm:p}}),u=N.getInnerMostAxes(u.length,a.shape.length)),N.assertAxesAreInnerMostDims("min",u,l.shape.length);let[d,h]=N.computeOutAndReduceShapes(l.shape,u),c=v.sizeFromShape(h),m=v.makeZerosTypedArray(v.sizeFromShape(d),l.dtype),f=n.data.get(l.dataId).values;for(let y=0;y<m.length;++y){let b=y*c,x=f[b];for(let w=0;w<c;++w){let I=f[b+w];(Number.isNaN(I)||I<x)&&(x=I)}m[y]=x}p!=null&&n.disposeIntermediateTensorInfo(l);let g=n.makeTensorInfo(d,l.dtype,m);if(i){let y=N.expandShapeToKeepDim(d,o),b=ct({inputs:{x:g},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(g),b}return g}var iq={kernelName:Oi,backendName:"cpu",kernelFunc:sq};function oq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;ye(a,"mirrorPad");let o=s.map((b,x)=>b[0]+a.shape[x]+b[1]),u=s.map(b=>b[0]),p=s.map((b,x)=>b[0]+a.shape[x]),l=i==="reflect"?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,c=v.computeStrides(a.shape),m=v.sizeFromShape(o),f=o.length,g=v.computeStrides(o),y=v.getTypedArrayFromDType(a.dtype,m);for(let b=0;b<m;b++){let x=v.indexToLoc(b,f,g);for(let I=0;I<f;I++)x[I]<u[I]?x[I]=u[I]*2-x[I]-l:x[I]>=p[I]&&(x[I]=(p[I]-1)*2-x[I]+l);x=x.map((I,T)=>I-u[T]);let w=v.locToIndex(x,h,c);y[b]=d[w]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}var lq={kernelName:zi,backendName:"cpu",kernelFunc:oq},uq=Ct((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),pq=Wt(Pi,uq),dq={kernelName:Pi,backendName:"cpu",kernelFunc:pq},hq=qa(Hh());function HN(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length,o=s;if(o===-1&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let u=v.parseAxisParam([o],a.shape),p=GN({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=N.expandShapeToKeepDim(p.shape,u),d=ct({inputs:{x:p},backend:n,attrs:{shape:l}}),h=gx({inputs:{a,b:d},backend:n}),c=tN({inputs:{x:h},backend:n}),m=gd({inputs:{x:c},backend:n,attrs:{axis:u,keepDims:!1}}),f=ct({inputs:{x:m},backend:n,attrs:{shape:l}}),g=xx({inputs:{a:c,b:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),g}var cq={kernelName:lo,backendName:"cpu",kernelFunc:HN};function mq(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;ye(a,"multinomial");let u=o?a:HN({inputs:{logits:a},backend:n,attrs:{dim:-1}}),p=u.shape[0],l=u.shape[1],d=n.data.get(u.dataId).values,h=[p,s],c=v.makeZerosTypedArray(v.sizeFromShape(h),"int32");for(let m=0;m<p;++m){let f=m*l,g=new Float32Array(l-1);g[0]=d[f];for(let x=1;x<g.length;++x)g[x]=g[x-1]+d[f+x];let y=hq.alea(i.toString()),b=m*s;for(let x=0;x<s;++x){let w=y();c[b+x]=g.length;for(let I=0;I<g.length;I++)if(w<g[I]){c[b+x]=I;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",c)}var fq={kernelName:Ol,backendName:"cpu",kernelFunc:mq},gq=Xr.nonMaxSuppressionV3Impl;function yq(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;ye(a,"NonMaxSuppression");let p=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=gq(p,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var bq={kernelName:Pl,backendName:"cpu",kernelFunc:yq},xq=Xr.nonMaxSuppressionV4Impl;function vq(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:p}=r;ye(a,"NonMaxSuppressionPadded");let l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:c}=xq(l,d,i,o,u,p);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var wq={kernelName:Bl,backendName:"cpu",kernelFunc:vq},kq=Xr.nonMaxSuppressionV5Impl;function Iq(e){let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:p}=r;ye(a,"NonMaxSuppressionWithScore");let l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,c=o,m=u,f=p,{selectedIndices:g,selectedScores:y}=kq(l,d,h,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Sq={kernelName:Wl,backendName:"cpu",kernelFunc:Iq};function Nq(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:u}=r;ye(a,"oneHot");let p=v.sizeFromShape(a.shape),l=new Float32Array(p*i);l.fill(u);let d=n.data.get(a.dataId).values;for(let h=0;h<p;++h)d[h]>=0&&d[h]<i&&(l[h*i+d[h]]=o);return n.makeTensorInfo([...a.shape,i],s,l)}var Tq={kernelName:Wi,backendName:"cpu",kernelFunc:Nq};function Oh(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(r.dtype==="complex64"){let a=Vs({inputs:{input:r},backend:n}),s=Oh({inputs:{x:a},backend:n}),i=nl({inputs:{input:r},backend:n}),o=Oh({inputs:{x:i},backend:n}),u=Bn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return vx({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}var Cq={kernelName:iu,backendName:"cpu",kernelFunc:Oh};function jN(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(r.dtype==="complex64"){let a=Vs({inputs:{input:r},backend:n}),s=jN({inputs:{x:a},backend:n}),i=nl({inputs:{input:r},backend:n}),o=Oh({inputs:{x:i},backend:n}),u=Bn({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return vx({backend:n,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}var _q={kernelName:Vl,backendName:"cpu",kernelFunc:jN};function qN(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Mh({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{v.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Mh({inputs:{input:l},backend:n,attrs:{dim:a}});return o.push(d),d}),p=rl({inputs:u,backend:n,attrs:{axis:a}});return o.forEach(l=>n.disposeIntermediateTensorInfo(l)),p}var Eq={kernelName:Ul,backendName:"cpu",kernelFunc:qN};function $q(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;ye(a,"pad");let o=s.map((y,b)=>y[0]+a.shape[b]+y[1]),u=s.map(y=>y[0]),p=n.data.get(a.dataId).values,l=v.sizeFromShape(a.shape),d=a.shape.length,h=v.computeStrides(a.shape),c=v.sizeFromShape(o),m=o.length,f=v.computeStrides(o),g=v.getTypedArrayFromDType(a.dtype,c);i!==0&&g.fill(i);for(let y=0;y<l;y++){let b=v.indexToLoc(y,d,h).map((w,I)=>w+u[I]),x=v.locToIndex(b,m,f);g[x]=p[y]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}var KN={kernelName:Vi,backendName:"cpu",kernelFunc:$q},Aq=Ct((e,t)=>Math.pow(e,t)),Fq=Wt(Ui,Aq),Rq={kernelName:Ui,backendName:"cpu",kernelFunc:Fq};function Dq(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,o=a.map(g=>n.data.get(g.dataId).values),u=a.map(g=>g.shape),p=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values,[d,h,c]=xN(o,u,p,s.shape,s.dtype,l,i.shape),m=d.map(g=>n.makeTensorInfo([g.length],"int32",g)),f=n.makeTensorInfo(c,s.dtype,h);return m.concat([f])}var Mq={kernelName:rc,backendName:"cpu",kernelFunc:Dq};function Oq(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[p,l]=vN(i,r.shape,r.dtype,o,a.shape,u,s.shape),d=n.makeTensorInfo([p.length],"int32",p),h=n.makeTensorInfo([l.length],r.dtype,l);return[d,h]}var Lq={kernelName:ac,backendName:"cpu",kernelFunc:Oq};function zq(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,p=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,d=n.data.get(i.dataId).values,h=o.map(g=>n.data.get(g.dataId).values),c=o.map(g=>g.shape),[m,f]=wN(p,a.shape,l,s.shape,s.dtype,d,i.shape,h,c,u);return n.makeTensorInfo(m,s.dtype,f)}var Pq={kernelName:sc,backendName:"cpu",kernelFunc:zq};function Bq(e){let{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=dx(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}var Wq={kernelName:Ep,backendName:"cpu",kernelFunc:Bq},Vq=tt(ji,e=>1/e),Uq={kernelName:ji,backendName:"cpu",kernelFunc:Vq};function Gq(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ye(a,"resizeBilinear");let u=v.computeStrides(a.shape),[p,l]=o,[d,h,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(v.sizeFromShape([d,p,l,m])),y=[s&&p>1?h-1:h,s&&l>1?c-1:c],b=[s&&p>1?p-1:p,s&&l>1?l-1:l],x=0,w=y[0]/b[0],I=y[1]/b[1];for(let T=0;T<d;T++)for(let C=0;C<p;C++){let E;i?E=w*(C+.5)-.5:E=w*C;let A=Math.max(0,Math.floor(E)),R=E-A,F=Math.min(h-1,Math.ceil(E)),S=T*u[0]+A*u[1],M=T*u[0]+F*u[1];for(let B=0;B<l;B++){let U;i?U=I*(B+.5)-.5:U=I*B;let G=Math.max(0,Math.floor(U)),K=U-G,j=Math.min(c-1,Math.ceil(U)),X=S+G*u[2],ee=M+G*u[2],Z=S+j*u[2],re=M+j*u[2];for(let te=0;te<m;te++){let ae=f[X+te],ie=f[ee+te],ve=f[Z+te],be=f[re+te],de=ae+(ve-ae)*K,Ie=ie+(be-ie)*K,Te=de+(Ie-de)*R;g[x++]=Te}}}return n.makeTensorInfo([d,p,l,m],"float32",g)}var Hq={kernelName:Xi,backendName:"cpu",kernelFunc:Gq};function jq(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ye([s,a],"resizeBilinearGrad");let o=v.computeStrides(a.shape),[u,p,l,d]=a.shape,[,h,c]=s.shape,m=new Float32Array(u*p*l*d),f=[i&&h>1?p-1:p,i&&c>1?l-1:l],g=[i&&h>1?h-1:h,i&&c>1?c-1:c],y=f[0]/g[0],b=f[1]/g[1],x=n.data.get(s.dataId).values,w=0;for(let I=0;I<u;I++){let T=I*o[0];for(let C=0;C<h;C++){let E=C*y,A=Math.floor(E),R=Math.min(Math.ceil(E),p-1),F=T+A*o[1],S=T+R*o[1],M=E-A,B=1-M;for(let U=0;U<c;U++){let G=U*b,K=Math.floor(G),j=Math.min(Math.ceil(G),l-1),X=G-K,ee=1-X,Z=F+K*o[2],re=F+j*o[2],te=S+K*o[2],ae=S+j*o[2],ie=B*ee,ve=B*X,be=M*ee,de=M*X;for(let Ie=0;Ie<d;Ie++){let Te=x[w++];m[Z+Ie]+=Te*ie,m[re+Ie]+=Te*ve,m[te+Ie]+=Te*be,m[ae+Ie]+=Te*de}}}}return n.makeTensorInfo([u,l,p,d],"float32",m)}var qq={kernelName:jl,backendName:"cpu",kernelFunc:jq};function Kq(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;ye(a,"resizeNearestNeighbor");let u=v.computeStrides(a.shape),[p,l]=o,[d,h,c,m]=a.shape,f=n.data.get(a.dataId).values,g=new Float32Array(d*p*l*m),y=[s&&p>1?h-1:h,s&&l>1?c-1:c],b=[s&&p>1?p-1:p,s&&l>1?l-1:l],x=y[0]/b[0],w=y[1]/b[1],I=0;for(let T=0;T<d;T++){let C=T*u[0];for(let E=0;E<p;E++){let A=i?x*(E+.5):x*E,R=Math.min(h-1,s?Math.round(A):Math.floor(A));i&&(R=Math.max(0,R));let F=C+R*u[1];for(let S=0;S<l;S++){let M=i?w*(S+.5):w*S,B=Math.min(c-1,s?Math.round(M):Math.floor(M));i&&(B=Math.max(0,B));let U=F+B*u[2];for(let G=0;G<m;G++){let K=f[U+G];g[I++]=K}}}}return n.makeTensorInfo([d,p,l,m],a.dtype,g)}var Xq={kernelName:Ki,backendName:"cpu",kernelFunc:Kq};function Zq(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;ye([s,a],"resizeNearestNeighborGrad");let o=v.computeStrides(a.shape),u=v.computeStrides(s.shape),[p,l,d,h]=a.shape,[,c,m]=s.shape,f=new Float32Array(p*l*d*h),g=n.data.get(s.dataId).values,y=[i&&c>1?l-1:l,i&&m>1?d-1:d],b=[i&&c>1?c-1:c,i&&m>1?m-1:m],x=y[0]/b[0],w=y[1]/b[1],I=1/x,T=1/w,C=Math.ceil(I)*2+2,E=Math.ceil(T)*2+2;for(let A=0;A<p;A++){let R=A*o[0];for(let F=0;F<l;F++){let S=R+F*o[1],M=Math.floor(F*I),B=Math.floor(M-C/2);for(let U=0;U<d;U++){let G=S+U*o[2],K=Math.floor(U*T),j=Math.floor(K-E/2);for(let X=0;X<h;X++){let ee=0;for(let Z=0;Z<C;Z++){let re=Z+B;if(re<0||re>=c)continue;let te=R+re*u[1],ae=re*x,ie=Math.min(l-1,i?Math.round(ae):Math.floor(ae));if(F===ie)for(let ve=0;ve<E;ve++){let be=ve+j;if(be<0||be>=m)continue;let de=te+be*u[2],Ie=be*w,Te=Math.min(d-1,i?Math.round(Ie):Math.floor(Ie));U===Te&&(ee+=g[de+X])}}f[G+X]=ee}}}}return n.makeTensorInfo(a.shape,a.dtype,f)}var Jq={kernelName:Hl,backendName:"cpu",kernelFunc:Zq};function Yq(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;ye(a,"reverse");let i=a.shape.length,o=v.parseAxisParam(s,a.shape);if(i===0)return Hr({inputs:{x:a},backend:n});let u=new At(a.shape,a.dtype),p=n.bufferSync(a);for(let l=0;l<u.size;l++){let d=u.indexToLoc(l),h=d.slice();o.forEach(c=>h[c]=a.shape[c]-1-h[c]),u.set(p.get(...h),...d)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}var Qq={kernelName:Ji,backendName:"cpu",kernelFunc:Yq},eK={kernelName:ou,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=v.getTypedArrayFromDType(r.dtype,v.sizeFromShape(r.shape)),[p,l,d,h]=r.shape,[c,m]=N.getImageCenter(i,l,d),f=255,g=Math.sin(a),y=Math.cos(a),b=o.data.get(r.dataId).values;for(let x=0;x<p;x++){let w=x*d*l*h;for(let I=0;I<l;I++){let T=I*(d*h);for(let C=0;C<d;C++){let E=C*h;for(let A=0;A<h;A++){let R=[p,I,C,A],F=R[2],S=R[1],M=(F-c)*y-(S-m)*g,B=(F-c)*g+(S-m)*y;M=Math.round(M+c),B=Math.round(B+m);let U=s;if(typeof s!="number"&&(A===3?U=f:U=s[A]),M>=0&&M<d&&B>=0&&B<l){let K=B*(d*h),j=M*h,X=w+K+j+A;U=b[X]}let G=w+T+E+A;u[G]=U}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},tK=tt(Yi,e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1}),nK={kernelName:Yi,backendName:"cpu",kernelFunc:tK};function rK(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:p,strides:l,outputSize:d}=N.calculateShapes(s,a,i),h=!0,c=n.bufferSync(a),m=n.bufferSync(s),f=Is(c,m,i,d,p,u,o,l,0,h);return n.makeTensorInfo(i,f.dtype,f.values)}var aK={kernelName:ql,backendName:"cpu",kernelFunc:rK};function sK(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<t?n=a+1:r=a;return r}function iK(e,t){let n=0,r=e.length,a=0;for(;n<r;)a=Math.floor((n+r)/2),e[a]<=t?n=a+1:r=a;return r}function oK(e,t,n,r,a,s){let i=v.getArrayFromDType("int32",n*a);for(let o=0;o<n;++o){let u=e.slice(o*r,(o+1)*r),p=o*a;for(let l=0;l<a;++l)i[p+l]=s==="left"?sK(u,t[l+p]):iK(u,t[l+p])}return i}function lK(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,p=oK(o,u,a.shape[0],a.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",p)}var uK={kernelName:Xl,backendName:"cpu",kernelFunc:lK};function pK(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;ye([r,a,s],"select");let i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,l=ar(a.dtype,s.dtype),d=v.makeZerosTypedArray(v.sizeFromShape(a.shape),l),h=0,c=i===0||i>1||a.shape.length===1?1:v.sizeFromShape(a.shape.slice(1));for(let m=0;m<o.length;m++)for(let f=0;f<c;f++)o[m]===1?d[h++]=u[m]:d[h++]=p[m];return n.makeTensorInfo(a.shape,l,d)}var dK={kernelName:Zl,backendName:"cpu",kernelFunc:pK},hK=N.SELU_SCALEALPHA,cK=N.SELU_SCALE,mK=tt(eo,e=>e>=0?cK*e:hK*(Math.exp(e)-1)),fK={kernelName:eo,backendName:"cpu",kernelFunc:mK},gK=tt(ro,e=>e<0?-1:e>0?1:0),yK={kernelName:ro,backendName:"cpu",kernelFunc:gK},bK=tt(to,e=>Math.sin(e)),xK={kernelName:to,backendName:"cpu",kernelFunc:bK},vK=tt(no,e=>Math.sinh(e)),wK={kernelName:no,backendName:"cpu",kernelFunc:vK},kK=11920928955078125e-23,Fw=Math.log(kK)+2,IK=tt(so,e=>{let t=e>-Fw,n=e<Fw,r=Math.exp(e),a;return n?a=r:t?a=e:a=Math.log(1+r),a}),SK={kernelName:so,backendName:"cpu",kernelFunc:IK};function NK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;ye([a],"spaceToBatchND");let o=v.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let g=1+s.length;g<a.shape.length;++g)u.push([0,0]);let p=KN.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),l=N.getReshaped(p.shape,s,o,!1),d=N.getPermuted(l.length,s.length,!1),h=N.getReshapedPermuted(p.shape,s,o,!1),c=ct({inputs:{x:p},backend:n,attrs:{shape:l}}),m=Rn({inputs:{x:c},backend:n,attrs:{perm:d}}),f=ct({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),f}var TK={kernelName:Yl,backendName:"cpu",kernelFunc:NK};function CK(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,p=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[d,h,c,m,f]=SN(o,r.shape,r.dtype,u,a.dtype,p,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var _K={kernelName:$p,backendName:"cpu",kernelFunc:CK};function EK(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[p,l,d]=NN(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,p),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}var $K={kernelName:eu,backendName:"cpu",kernelFunc:EK};function AK(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[p,l]=hx(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,p)}var FK={kernelName:Ap,backendName:"cpu",kernelFunc:AK};function RK(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${s.shape}`);if(a.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[p,l]=hx(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,p)}var DK={kernelName:Fp,backendName:"cpu",kernelFunc:RK};function MK(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:p,sliceSize:l,strides:d,outputSize:h}=N.calculateShapes(s,a,o),c=!1,m=n.bufferSync(a),f;switch(s.dtype){case"bool":{let g=n.bufferSync(s),y=!!n.data.get(i.dataId).values[0];f=Is(m,g,o,h,l,p,u,d,y,c);break}case"float32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Is(m,g,o,h,l,p,u,d,y,c);break}case"int32":{let g=n.bufferSync(s),y=n.data.get(i.dataId).values[0];f=Is(m,g,o,h,l,p,u,d,y,c);break}case"string":{let g=n.bufferSync(s),y=v.decodeString(n.data.get(i.dataId).values[0]);f=Is(m,g,o,h,l,p,u,d,y,c);break}default:throw new Error(`Unsupported type ${s.dtype}`)}return n.makeTensorInfo(o,f.dtype,f.values)}var OK={kernelName:tu,backendName:"cpu",kernelFunc:MK};function LK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=v.parseAxisParam(i,a.shape)[0],u=N.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map(d=>{let h=[...l];h[o]=d;let c=Us({inputs:{x:a},backend:n,attrs:{begin:p,size:h}});return p[o]+=d,c})}var zK={kernelName:Ql,backendName:"cpu",kernelFunc:LK},PK={kernelName:Rp,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,r=t;ye(n,"square");let a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let i=0;i<a.length;++i){let o=a[i];s[i]=o*o}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},BK=tt(Ja,(e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),WK={kernelName:Ja,backendName:"cpu",kernelFunc:BK};function VK(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r;ye(a,"stridedSlice");let{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=zt.sliceInfo(a.shape,s,i,o,u,p,l,d,h),I;if(f)I=ct({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let T=zt.computeOutShape(b,x,w),C=Us({inputs:{x:a},backend:n,attrs:{begin:b,size:T}});I=ct({inputs:{x:C},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(C)}else{let T=n.bufferSync(a),C=_N(c,T,w,b);I=n.makeTensorInfo(m,C.dtype,C.values)}return I}var UK={kernelName:nu,backendName:"cpu",kernelFunc:VK};function GK(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:p}=r,{data:l,dataSplits:d}=t,h=n.data.get(l.dataId).values,c=n.data.get(d.dataId).values,[m,f]=cx(h,c,a,s,i,o,u,p);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",f)]}var HK={kernelName:Mp,backendName:"cpu",kernelFunc:GK};function jK(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[p,l,d]=mx(o,u,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",p),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var qK={kernelName:Op,backendName:"cpu",kernelFunc:jK};function KK(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.data.get(s.dataId).values,o=fx(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var XK={kernelName:Lp,backendName:"cpu",kernelFunc:KK},ZK=tt(ho,e=>Math.tan(e)),JK={kernelName:ho,backendName:"cpu",kernelFunc:ZK},YK=tt(co,e=>Math.tanh(e)),QK={kernelName:co,backendName:"cpu",kernelFunc:YK};function e8(e){let{inputs:t,backend:n}=e,{tensor:r,indices:a,updates:s}=t,{sliceRank:i,numUpdates:o,sliceSize:u,strides:p,outputSize:l}=N.calculateShapes(s,a,r.shape),d=!1,h=n.bufferSync(a),c=n.bufferSync(s),m=n.bufferSync(r),f=Is(h,c,r.shape,l,u,o,i,p,m,d);return n.makeTensorInfo(r.shape,f.dtype,f.values)}var t8={kernelName:Kl,backendName:"cpu",kernelFunc:e8};function n8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;ye(a,"tile");let i=$N(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var r8={kernelName:Za,backendName:"cpu",kernelFunc:n8};function a8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;ye(a,"topk");let o=n.data.get(a.dataId).values,[u,p]=FN(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(p.shape,p.dtype,p.values)]}var s8={kernelName:ru,backendName:"cpu",kernelFunc:a8};function i8(e){let{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:p}=n,[l,d,h,c]=a.shape,[m,f]=p!=null?p:[d,h],g=[l,m,f,c],y=v.computeStrides(a.shape),b=y[0],x=y[1],w=y[2],I=v.computeStrides(g),T=I[0],C=I[1],E=I[2],A=v.getTypedArrayFromDType(a.dtype,v.sizeFromShape(g));A.fill(u);let R=r.data.get(a.dataId).values,F=r.data.get(s.dataId).values;for(let S=0;S<l;++S){let M=s.shape[0]===1?F:F.subarray(S*8,S*8+8);for(let B=0;B<m;++B)for(let U=0;U<f;++U)for(let G=0;G<c;++G){let K,j=M[6]*U+M[7]*B+1;if(j===0)continue;let X=(M[0]*U+M[1]*B+M[2])/j,ee=(M[3]*U+M[4]*B+M[5])/j,Z=Rw(X,h,o),re=Rw(ee,d,o);switch(i){case"nearest":K=h8(R,d,h,b,x,w,S,re,Z,G,u);break;case"bilinear":K=c8(R,d,h,b,x,w,S,re,Z,G,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}let te=S*T+B*C+U*E+G;A[te]=K}return r.makeTensorInfo(g,a.dtype,A)}return{dataId:r.write(A,g,a.dtype),shape:a.shape,dtype:a.dtype}}var o8={kernelName:au,backendName:"cpu",kernelFunc:i8};function Rw(e,t,n){switch(n){case"reflect":return l8(e,t);case"wrap":return u8(e,t);case"nearest":return d8(e,t);case"constant":default:return p8(e)}}function l8(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=2*t;n<r&&(n=r*Math.trunc(-n/r)+n),n=n<-t?n+r:-n-1}else if(n>t-1)if(t<=1)n=0;else{let r=2*t;n-=r*Math.trunc(n/r),n>=t&&(n=r-n-1)}return v.clamp(0,n,t-1)}function u8(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let r=t-1;n+=t*(Math.trunc(-n/r)+1)}else if(n>t-1)if(t<=1)n=0;else{let r=t-1;n-=t*Math.trunc(n/r)}return v.clamp(0,n,t-1)}function p8(e,t){return e}function d8(e,t){return v.clamp(0,e,t-1)}function Vu(e,t,n,r,a,s,i,o,u,p,l){let d=i*r+o*a+u*s+p;return 0<=o&&o<t&&0<=u&&u<n?e[d]:l}function h8(e,t,n,r,a,s,i,o,u,p,l){let d=Math.round(o),h=Math.round(u);return Vu(e,t,n,r,a,s,i,d,h,p,l)}function c8(e,t,n,r,a,s,i,o,u,p,l){let d=Math.floor(o),h=Math.floor(u),c=d+1,m=h+1,f=(m-u)*Vu(e,t,n,r,a,s,i,d,h,p,l)+(u-h)*Vu(e,t,n,r,a,s,i,d,m,p,l),g=(m-u)*Vu(e,t,n,r,a,s,i,c,h,p,l)+(u-h)*Vu(e,t,n,r,a,s,i,c,m,p,l);return(c-o)*f+(o-d)*g}function m8(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ye(s,"unique");let i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:p}=yx(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([p.length],"int32",p)]}var f8={kernelName:zp,backendName:"cpu",kernelFunc:m8};function g8(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape.length,o=a.shape[s],u=new Array(i-1),p=0;for(let c=0;c<i;c++)c!==s&&(u[p++]=a.shape[c]);let l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;let h=new Array(o);for(let c=0;c<h.length;c++){l[s]=c;let m=Us({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[c]=ct({inputs:{x:m},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(m)}return h}var y8={kernelName:su,backendName:"cpu",kernelFunc:g8};function b8(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;ye(a,"unsortedSegmentSum");let o=a.shape.length,u=s.shape.length,p=[],l=[],d=o-u,h=s;for(let m=0;m<d;++m){let f=Mh({inputs:{input:h},backend:n,attrs:{dim:m+1}});h=f,l.push(f)}for(let m=0;m<i;++m){let f=v.createScalarValue(m,"int32"),g=n.makeTensorInfo([],"int32",f),y=QS({inputs:{a:g,b:h},backend:n}),b=Ga({inputs:{x:y},backend:n,attrs:{dtype:"float32"}}),x=um({inputs:{a:b,b:a},backend:n}),w=gd({inputs:{x},backend:n,attrs:{axis:0,keepDims:!1}});p.push(w),l.push(g),l.push(y),l.push(b),l.push(x),l.push(w)}let c=qN({inputs:p,backend:n,attrs:{axis:0}});return l.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var x8={kernelName:Pp,backendName:"cpu",kernelFunc:b8},v8=[c6,qG,f6,y6,QG,x6,w6,I6,N6,C6,E6,A6,R6,O6,z6,W6,U6,H6,q6,d6,X6,J6,Q6,tH,tj,JG,rH,rj,KG,sj,oj,lj,pj,hj,mj,gj,bj,vj,kj,Sj,Tj,_j,$j,Fj,Rj,Mj,Lj,Pj,Bj,Wj,Vj,Gj,qj,a6,Xj,aH,r5,sH,a5,oH,p5,d5,c5,uH,dH,f5,y5,x5,w5,cH,fH,XG,I5,ij,N5,C5,E5,s6,yH,xH,A5,wH,R5,O5,z5,W5,U5,H5,j5,IH,K5,Z5,Y5,eq,nq,aq,iq,NH,lq,dq,fq,CH,EH,bq,wq,Sq,AH,Tq,_q,Eq,KN,Rq,o6,DH,Mq,Lq,Pq,Wq,ZG,Ef,Uq,l6,u6,p6,Hq,qq,Xq,Jq,Qq,eK,nK,VH,aK,uK,dK,fK,GH,yK,xK,wK,HH,cq,SK,TK,_K,$K,FK,DK,OK,zK,KH,PK,ZH,YH,WK,UK,HK,qK,XK,n6,Hj,JK,QK,t8,r8,s8,o8,FH,f8,y8,x8,Cq];for(let e of v8)Bp(e);var XN={};Ee(XN,{assertNotComplex:()=>vu,bindCanvasToFramebuffer:()=>A8,bindColorTextureToFramebuffer:()=>ih,bindTextureToProgramUniformSampler:()=>d2,bindTextureUnit:()=>l2,bindVertexBufferToProgramAttribute:()=>Af,callAndCheck:()=>pe,canBeRepresented:()=>JN,createFragmentShader:()=>e2,createFramebuffer:()=>o2,createProgram:()=>t2,createStaticIndexBuffer:()=>a2,createStaticVertexBuffer:()=>r2,createTexture:()=>s2,createVertexShader:()=>QN,getBatchDim:()=>Gs,getExtensionOrThrow:()=>Uu,getFramebufferErrorMessage:()=>h2,getMaxTexturesInShader:()=>g2,getNumChannels:()=>E8,getProgramUniformLocation:()=>p2,getProgramUniformLocationOrThrow:()=>u2,getRowsCols:()=>Hs,getShapeAs3D:()=>Hu,getTextureShapeFromLogicalShape:()=>m2,getWebGLDisjointQueryTimerVersion:()=>y2,getWebGLErrorMessage:()=>YN,getWebGLMaxTextureSize:()=>f2,hasExtension:()=>tr,isCapableOfRenderingToFloatTexture:()=>b2,isDownloadFloatTextureEnabled:()=>x2,isReshapeFree:()=>hp,isWebGLFenceEnabled:()=>v2,isWebGLVersionEnabled:()=>Rf,linkProgram:()=>n2,logShaderSourceAndInfoLog:()=>kx,resetMaxTextureSize:()=>F8,resetMaxTexturesInShader:()=>R8,unbindColorTextureFromFramebuffer:()=>Ff,unbindTextureUnit:()=>$8,validateFramebuffer:()=>Gu,validateProgram:()=>sh,validateTextureSize:()=>i2});var vs={},Xd={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function ZN(e,t){vs[e]=t}function Er(e,t){if(!(e in vs)||t!=null){let r=k8(e,t);if(r!==null)vs[e]=r;else return console.log("Could not get context for WebGL version",e),null}let n=vs[e];return n==null||n.isContextLost()?(delete vs[e],Er(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),vs[e])}function w8(e){if(!H().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&e===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function k8(e,t){if(e!==1&&e!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=t==null?w8(e):t;return n.addEventListener("webglcontextlost",r=>{r.preventDefault(),delete vs[e]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(Xd.failIfMajorPerformanceCaveat=!1),e===1?n.getContext("webgl",Xd)||n.getContext("experimental-webgl",Xd):n.getContext("webgl2",Xd)}var dp;(function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"})(dp||(dp={}));var er;(function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"})(er||(er={}));var tn;(function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(tn||(tn={}));function yd(e,t){return[t,e]}function I8(e,t){return e*t}function Zd(e){let t=v.sizeFromShape(e),n=Math.ceil(t/4);return v.sizeToSquarishShape(n)}function xu(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function S8(e,t){let[n,r]=xu(e,t);return n*r*4}function wx(e,t){let n=e,r,a,s,i,o,u,p,l,d,h;return H().getNumber("WEBGL_VERSION")===2?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,p=4,l=1,d=n.HALF_FLOAT,h=n.FLOAT,u=n.RGBA8):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,p=4,l=4,d=t!=null?t.HALF_FLOAT_OES:null,h=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:p,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}function pe(e,t){let n=t();return H().getBool("DEBUG")&&N8(e),n}function N8(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+YN(e,t))}var T8=596e-10,C8=65504;function JN(e){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||e===0||T8<Math.abs(e)&&Math.abs(e)<C8)}function YN(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function Uu(e,t){return ba(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function QN(e,t){let n=ba(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pe(e,()=>e.shaderSource(n,t)),pe(e,()=>e.compileShader(n)),e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function e2(e,t){let n=ba(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pe(e,()=>e.shaderSource(n,t)),pe(e,()=>e.compileShader(n)),H().get("ENGINE_COMPILE_ONLY"))return n;if(e.getShaderParameter(n,e.COMPILE_STATUS)===!1)throw kx(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var _8=/ERROR: [0-9]+:([0-9]+):/g;function kx(e,t){let n=_8.exec(t);if(n==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(e);return}let r=+n[1],a=e.split(`
`),s=a.length.toString().length+2,i=a.map((d,h)=>v.rightPad((h+1).toString(),s)+d),o=0;for(let d=0;d<i.length;d++)o=Math.max(i[d].length,o);let u=i.slice(0,r-1),p=i.slice(r-1,r),l=i.slice(r);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${v.rightPad(p[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function t2(e){return ba(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}function n2(e,t){if(pe(e,()=>e.linkProgram(t)),!H().get("ENGINE_COMPILE_ONLY")&&e.getProgramParameter(t,e.LINK_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function sh(e,t){if(pe(e,()=>e.validateProgram(t)),e.getProgramParameter(t,e.VALIDATE_STATUS)===!1)throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function r2(e,t){let n=ba(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),pe(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function a2(e,t){let n=ba(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),pe(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}function E8(){return H().getNumber("WEBGL_VERSION")===2?1:4}function s2(e){return ba(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}function i2(e,t){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){let r=`[${e}x${t}]`;throw new Error("Requested texture size "+r+" is invalid.")}if(e>n||t>n){let r=`[${e}x${t}]`,a=`[${n}x${n}]`;throw new Error("Requested texture size "+r+" greater than WebGL maximum on this browser / GPU "+a+".")}}function o2(e){return ba(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Af(e,t,n,r,a,s,i){let o=e.getAttribLocation(t,n);return o===-1?!1:(pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),pe(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),pe(e,()=>e.enableVertexAttribArray(o)),!0)}function l2(e,t,n){c2(e,n),pe(e,()=>e.activeTexture(e.TEXTURE0+n)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,t))}function $8(e,t){c2(e,t),pe(e,()=>e.activeTexture(e.TEXTURE0+t)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function u2(e,t,n){return ba(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}function p2(e,t,n){return e.getUniformLocation(t,n)}function d2(e,t,n,r){pe(e,()=>l2(e,t,r)),pe(e,()=>e.uniform1i(n,r))}function A8(e){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.viewport(0,0,e.canvas.width,e.canvas.height)),pe(e,()=>e.scissor(0,0,e.canvas.width,e.canvas.height))}function ih(e,t,n){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),pe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function Ff(e,t){pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),pe(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function Gu(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+h2(e,t))}function h2(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function ba(e,t,n){let r=pe(e,()=>t());if(r==null)throw new Error(n);return r}function c2(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){let a=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${a}.`)}}function Gs(e,t=2){return v.sizeFromShape(e.slice(0,e.length-t))}function Hs(e){if(e.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Hu(e){let t=[1,1,1];return e.length===0||e.length===1&&e[0]===1||(t=[Gs(e),...Hs(e)]),t}function m2(e,t=!1){let n=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),r=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");r===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(r=n/2),t&&(n=n*2,r=r*2,e=e.map((o,u)=>u>=e.length-2?v.nearestLargerEven(e[u]):e[u]),e.length===1&&(e=[2,e[0]])),e.length!==2&&(e=v.squeezeShape(e).newShape);let a=v.sizeFromShape(e),s=null;e.length<=1&&a<=n?s=[1,a]:e.length===2&&e[0]<=n&&e[1]<=n?s=e:e.length===3&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:e.length===3&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:e.length===4&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:e.length===4&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=s!=null&&Math.max(...s)>r&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(s==null||i)if(t){let o=Gs(e),u=2,p=2;e.length&&([u,p]=Hs(e)),a=o*(u/2)*(p/2),s=v.sizeToSquarishShape(a).map(l=>l*2)}else s=v.sizeToSquarishShape(a);return s}function Jd(e){return e%2===0}function hp(e,t){if(e=e.slice(-2),t=t.slice(-2),v.arraysEqual(e,t)||!e.length||!t.length||e[0]===0||e[1]===0||t[0]===0||t[1]===0)return!0;if(e.length!==t.length){let n=e[e.length-1],r=t[t.length-1];if(n===r||Jd(n)&&Jd(r)&&(e[0]===1||t[0]===1))return!0}return e[1]===t[1]&&Jd(e[0])&&Jd(t[0])}var oh,lh;function f2(e){if(oh==null){let t=Er(e);oh=t.getParameter(t.MAX_TEXTURE_SIZE)}return oh}function F8(){oh=null}function R8(){lh=null}function g2(e){if(lh==null){let t=Er(e);lh=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,lh)}function y2(e){if(e===0)return 0;let t,n=Er(e);return tr(n,"EXT_disjoint_timer_query_webgl2")&&e===2?t=2:tr(n,"EXT_disjoint_timer_query")?t=1:t=0,t}function tr(e,t){return e.getExtension(t)!=null}function Rf(e){try{if(Er(e)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function b2(e){if(e===0)return!1;let t=Er(e);if(e===1){if(!tr(t,"OES_texture_float"))return!1}else if(!tr(t,"EXT_color_buffer_float"))return!1;return Df(t)}function x2(e){if(e===0)return!1;let t=Er(e);if(e===1){if(!tr(t,"OES_texture_float")||!tr(t,"WEBGL_color_buffer_float"))return!1}else{if(tr(t,"EXT_color_buffer_float"))return Df(t);let n="EXT_color_buffer_half_float";if(tr(t,n)){let r=t.getExtension(n);return D8(t,r)}return!1}return Df(t)}function Df(e){let t=wx(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);let r=1,a=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,r,a,0,t.textureFormatFloat,t.textureTypeFloat,null);let s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let i=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),i}function D8(e,t){let n=wx(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);let a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);let o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}function v2(e){return e!==2?!1:Er(e).fenceSync!=null}function vu(e,t){Array.isArray(e)||(e=[e]),e.forEach(n=>{n!=null&&v.assert(n.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}var xe=H();xe.registerFlag("HAS_WEBGL",()=>xe.getNumber("WEBGL_VERSION")>0);xe.registerFlag("WEBGL_VERSION",()=>Rf(2)?2:Rf(1)?1:0);xe.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);xe.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>xe.get("WEBGL_VERSION")===2);xe.registerFlag("WEBGL_CPU_FORWARD",()=>!0);xe.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);xe.registerFlag("WEBGL_PACK",()=>xe.getBool("HAS_WEBGL"));xe.registerFlag("WEBGL_PACK_NORMALIZATION",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_CLIP",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_PACK_REDUCE",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_LAZILY_UNPACK",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_CONV_IM2COL",()=>xe.getBool("WEBGL_PACK"));xe.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>f2(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>g2(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{let e=xe.getNumber("WEBGL_VERSION");return e===0?0:y2(e)});xe.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>xe.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Up.isMobile());xe.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>b2(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>xe.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:xe.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));xe.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>x2(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_FENCE_API_ENABLED",()=>v2(xe.getNumber("WEBGL_VERSION")));xe.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>xe.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);xe.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)});xe.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>Up.isMobile()?1:-1,e=>{if(e<0&&e!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)});xe.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);xe.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);xe.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);xe.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);xe.registerFlag("WEBGL_EXP_CONV",()=>!1);xe.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>xe.getBool("IS_TEST"));xe.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);xe.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);xe.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);xe.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);function In(){let e,t,n,r,a,s,i,o,u,p;return H().getNumber("WEBGL_VERSION")===2?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",p=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,p=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:p}}function wo(e,t,n="index"){let r=v.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / ${a}`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${a}`:`index -= ${e[s]} * ${a}`;return`${i}; ${o};`}).join("")}function pm(e,t,n="index"){let r=v.computeStrides(t);return r.map((a,s)=>{let i=`int ${e[s]} = ${n} / outShapeStrides[${s}]`,o=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`;return`${i}; ${o};`}).join("")}function M8(e,t){let n=e.length,r=e.map(s=>`${t}[${s}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let s=n-3;s>=0;--s)a[s]=`(${a[s+1]} * ${r[s+1]})`;return a}function O8(e,t,n="index"){let r=e.map((s,i)=>i),a=M8(r,t);return a.map((s,i)=>{let o=`int ${e[i]} = ${n} / ${a[i]}`,u=i===a.length-1?`int ${e[i+1]} = ${n} - ${e[i]} * ${a[i]}`:`index -= ${e[i]} * ${a[i]}`;return`${o}; ${u};`}).join("")}function Ix(e){let t=v.computeStrides(e).map(n=>n.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function Sx(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}var w2=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`,{getBroadcastDims:k2}=N;function L8(e,t,n){let r=[];if(e.forEach(h=>{let c=v.sizeFromShape(h.shapeInfo.logicalShape);if(h.shapeInfo.isUniform?r.push(`uniform float ${h.name}${c>1?`[${c}]`:""};`):(r.push(`uniform sampler2D ${h.name};`),r.push(`uniform int offset${h.name};`)),n.enableShapeUniforms){let{uniformShape:m}=Nx(n.packedInputs,h.shapeInfo.logicalShape,h.shapeInfo.texShape);switch(m.length){case 1:r.push(`uniform int ${h.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${h.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${h.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${h.name}Shape;`);break}r.push(`uniform ivec2 ${h.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;");break}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(h=>{r.push(`uniform ${h.type} ${h.name}${h.arrayIndex?`[${h.arrayIndex}]`:""};`)});let a=r.join(`
`),s=e.map(h=>z8(h,t,n.packedInputs,n.enableShapeUniforms)).join(`
`),i=t.texShape,o=In(),u=W8(o),p,l,d=G8(o);return t.isPacked?(p=P8(t.logicalShape,i,n.enableShapeUniforms),l=U8(o)):(p=B8(t.logicalShape,i,n.enableShapeUniforms),l=V8(o)),n.packedInputs&&(d+=K8),[d,u,l,a,p,s,n.userCode].join(`
`)}function wu(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return iX(e,t);case 1:return lX(e,t);case 2:return pX(e,t);case 3:return hX(e,t);case 4:return mX(e,t);case 5:return fX(e);case 6:return gX(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function I2(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return sX(e);case 1:return oX(e,t);case 2:return uX(e,t);case 3:return dX(e,t);default:return cX(e,t)}}function z8(e,t,n=!1,r){let a="";n?a+=I2(e,r):a+=wu(e,r);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(n?a+=yX(e,t):a+=bX(e,t)),a}function P8(e,t,n){switch(e.length){case 0:return S2();case 1:return X8(e,t,n);case 2:return rX(e,t,n);case 3:return J8(e,t,n);default:return Q8(e,t,n)}}function B8(e,t,n){switch(e.length){case 0:return S2();case 1:return Z8(e,t,n);case 2:return aX(e,t,n);case 3:return Y8(e,t,n);case 4:return eX(e,t,n);case 5:return tX(e,t);case 6:return nX(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function W8(e){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${e.texture2D}(textureSampler, uv).r;
    }
  `}function V8(e){return`
    void setOutput(float val) {
      ${e.output} = vec4(val, 0, 0, 0);
    }
  `}function U8(e){return`
    void setOutput(vec4 val) {
      ${e.output} = val;
    }
  `}function G8(e){return`${e.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${e.varyingFs} vec2 resultUV;
    ${e.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${e.defineSpecialNaN}
    ${e.defineSpecialInf}
    ${e.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${H8}
    ${j8}
    ${q8}
  `}var H8=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,j8=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,q8=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,K8=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function S2(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function X8(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return r[0]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${r[1]}.0);
      }
    `:r[1]===1?n?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${r[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);
    }
  `}function Z8(e,t,n){return t[0]===1?n?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?n?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:n?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function J8(e,t,n){if(n)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function Y8(e,t,n){if(n)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${pm(["r","c","d"],e)}
    return ivec3(r, c, d);
  }
`;let r=wo(["r","c","d"],e);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec3(r, c, d);
    }
  `}function Q8(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2),i=s,o="",u="b, r, c";for(let p=2;p<e.length-1;p++)i*=e[e.length-p-1],o=`
      int b${p} = index / ${i};
      index -= b${p} * ${i};
    `+o,u=`b${p}, `+u;return`
    ivec${e.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));
      int index = resTexRC.x * ${r[1]} + resTexRC.y;

      ${o}

      int b = index / ${s};
      index -= b * ${s};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${e.length}(${u});
    }
  `}function eX(e,t,n){if(n)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${pm(["r","c","d","d2"],e)}
      return ivec4(r, c, d, d2);
    }
  `;let r=wo(["r","c","d","d2"],e);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${r}
      return ivec4(r, c, d, d2);
    }
  `}function tX(e,t){let n=wo(["r","c","d","d2","d3"],e);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function nX(e,t){let n=wo(["r","c","d","d2","d3","d4"],e);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${n}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function rX(e,t,n){let r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(v.arraysEqual(e,t))return n?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));
      }
    `;let a=Math.ceil(e[1]/2);return n?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${r[0]}, ${r[1]}));

      int index = resTexRC.x * ${r[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function aX(e,t,n){return v.arraysEqual(e,t)?n?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:e[1]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:e[0]===1?n?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:n?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${e[1]};
      int c = index - r * ${e[1]};
      return ivec2(r, c);
    }
  `}function ko(e){return`offset${e}`}function sX(e){let t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=In();return`
    vec4 ${n}() {
      return ${r.texture2D}(${t}, halfCR);
    }
  `}function iX(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;let[a,s]=e.shapeInfo.texShape;if(a===1&&s===1)return`
      float ${r}() {
        return sampleTexture(${n}, halfCR);
      }
    `;let i=ko(n);if(t)return`
    float ${r}() {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});
      return sampleTexture(${n}, uv);
    }
  `;let[o,u]=e.shapeInfo.texShape;return`
    float ${r}() {
      vec2 uv = uvFromFlat(${o}, ${u}, ${i});
      return sampleTexture(${n}, uv);
    }
  `}function oX(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=In();if(t)return`
    vec4 ${r}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${s.texture2D}(${n}, uv);
    }
  `;let i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${r}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${s.texture2D}(${n}, uv);
    }
  `}function lX(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`
      float ${r}(int index) {
        ${ku(e)}
      }
    `;let a=e.shapeInfo.texShape,s=a[0],i=a[1];if(i===1&&s===1)return`
      float ${r}(int index) {
        return sampleTexture(${n}, halfCR);
      }
    `;let o=ko(n);return i===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);
        return sampleTexture(${n}, uv);
      }
    `:s===1?t?`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);
        return sampleTexture(${n}, uv);
      }
    `:`
      float ${r}(int index) {
        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${n}, uv);
      }
    `:t?`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});
      return sampleTexture(${n}, uv);
    }
  `:`
    float ${r}(int index) {
      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});
      return sampleTexture(${n}, uv);
    }
  `}function uX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=In();if(s!=null&&v.arraysEqual(n,s))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);

        return ${u.texture2D}(${r}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);

        return ${u.texture2D}(${r}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `;let p=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],l=Math.ceil(n[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${p[0]}, ${p[1]}, row, col);
      return ${u.texture2D}(${r}, uv);
    }
  `}function pX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(s!=null&&v.arraysEqual(n,s)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `;let h=s[0],c=s[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${c}.0, ${h}.0);
      return sampleTexture(${r}, uv);
    }
  `}let{newShape:i,keptDims:o}=v.squeezeShape(n),u=i;if(u.length<n.length){let h=Iu(e,u),c=["row","col"];return`
      ${wu(h,t)}
      float ${a}(int row, int col) {
        return ${a}(${Su(c,o)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));
        ${ku(e)}
      }
    `;let p=s[0],l=s[1],d=ko(r);return l===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${p}.0);
      return sampleTexture(${r}, uv);
    }
  `:p===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${r}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
        return sampleTexture(${r}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${n[1]} + col + ${d};
    vec2 uv = uvFromFlat(${p}, ${l}, index);
    return sampleTexture(${r}, uv);
  }
`}function dX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(n[0]===1){let h=n.slice(1),c=[1,2],m=Iu(e,h),f=["b","row","col"];return`
        ${I2(m,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${Su(f,c)});
        }
      `}let o=In();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `;let u=i[0],p=i[1],l=Math.ceil(n[2]/2),d=l*Math.ceil(n[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${p}, ${d}, ${l}, b, row, col);
      return ${o.texture2D}(${r}, uv);
    }
  `}function hX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=v.squeezeShape(n),p=o;if(p.length<n.length){let f=Iu(e,p),g=["row","col","depth"];return`
        ${wu(f,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${Su(g,u)});
        }
      `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${s}, ${i}, 1)));
        ${ku(e)}
      }
    `;let l=e.shapeInfo.texShape,d=l[0],h=l[1],c=e.shapeInfo.flatOffset;if(h===s&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${r}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${r}, uv);
        }
      `;if(h===i&&c==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${r}, uv);
    }
  `;let m=ko(r);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${r}Shape[1] * ${r}Shape[2];
      int stride1 = ${r}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${m};
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);
      return sampleTexture(${r}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s} + col * ${i} + depth + ${m};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${r}, uv);
      }
  `}function cX(e,t){let n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=In();if(t)return`
    vec4 ${r}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${n}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);
    }
  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],p=u[0],l=u[1],d=Math.ceil(s[i-1]/2),h=d*Math.ceil(s[i-2]/2),c="int b, int row, int col",m=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let f=2;f<i-1;f++)c=`int b${f}, `+c,h*=s[i-f-1],m=`b${f} * ${h} + `+m;return`
    vec4 ${r}(${c}) {
      int index = ${m};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${p});
      return ${a.texture2D}(${n}, uv);
    }
  `}function mX(e,t){let n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:p}=v.squeezeShape(n);if(u.length<n.length){let b=Iu(e,u),x=["row","col","depth","depth2"];return`
      ${wu(b,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${Su(x,p)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${o}, ${i}, ${s}, 1)));
        ${ku(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],c=d[1],m=`int stride2 = ${r}Shape[3];`,f=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(c===o&&l==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${m}
        ${f}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${s}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;if(c===s&&l==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${r}TexShape[1], ${r}TexShape[0]);
        return sampleTexture(${r}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${n[1]*n[2]}, ${n[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${h}.0);
        return sampleTexture(${r}, uv);
      }
    `;let y=ko(r);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${m}
      ${f}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});
      return sampleTexture(${r}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} +
          depth * ${s} + depth2;
      vec2 uv = uvFromFlat(${h}, ${c}, index + ${y});
      return sampleTexture(${r}, uv);
    }
  `}function fX(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:p}=v.squeezeShape(t);if(u.length<t.length){let f=Iu(e,u),g=["row","col","depth","depth2","depth3"];return`
      ${wu(f)}
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        return ${r}(${Su(g,p)});
      }
    `}if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${o}, ${i}, ${s}, ${a})) +
          depth3;
        ${ku(e)}
      }
    `;let l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],c=d[1];if(c===o&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${s}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${c}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(c===a&&l==null)return`
      float ${r}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${c}.0, ${h}.0);
        return sampleTexture(${n}, uv);
      }
    `;let m=ko(n);return`
    float ${r}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${o} + col * ${i} + depth * ${s} +
          depth2 * ${a} + depth3 + ${m};
      vec2 uv = uvFromFlat(${h}, ${c}, index);
      return sampleTexture(${n}, uv);
    }
  `}function gX(e){let t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=v.squeezeShape(t);if(a.length<t.length){let g=Iu(e,a),y=["row","col","depth","depth2","depth3","depth4"];return`
      ${wu(g)}
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${r}(${Su(y,s)});
      }
    `}let i=t[5],o=t[4]*i,u=t[3]*o,p=t[2]*u,l=t[1]*p;if(e.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${p}, ${u}, ${o})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${ku(e)}
      }
    `;let d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,c=h[0],m=h[1];if(m===l&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${p}, ${u}, ${o}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;if(m===i&&d==null)return`
      float ${r}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${m}.0, ${c}.0);
        return sampleTexture(${n}, uv);
      }
    `;let f=ko(n);return`
    float ${r}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${p} + depth * ${u} +
          depth2 * ${o} + depth3 * ${i} + depth4 + ${f};
      vec2 uv = uvFromFlat(${c}, ${m}, index);
      return sampleTexture(${n}, uv);
    }
  `}function ku(e){let t=e.name,n=v.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`
    for (int i = 0; i < ${n}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function yX(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=k2(e.shapeInfo.logicalShape,t.logicalShape),u=it(i),p=i-s,l,d=["x","y","z","w","u","v"];s===0?l="":i<2&&o.length>=1?l="coords = 0;":l=o.map(g=>`coords.${d[g+p]} = 0;`).join(`
`);let h="";i<2&&s>0?h="coords":h=e.shapeInfo.logicalShape.map((g,y)=>`coords.${d[y+p]}`).join(", ");let c="return outputValue;",m=v.sizeFromShape(e.shapeInfo.logicalShape)===1,f=v.sizeFromShape(t.logicalShape)===1;if(s===1&&!m&&!f)c=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!f)i===1?c=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:c=`
        return vec4(outputValue.x);
      `;else if(o.length){let g=s-2,y=s-1;o.indexOf(g)>-1&&o.indexOf(y)>-1?c="return vec4(outputValue.x);":o.indexOf(g)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(y)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${u} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${r}(${h});
      ${c}
    }
  `}function bX(e,t){let n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&e.shapeInfo.flatOffset==null&&v.arraysEqual(i,s))return`
      float ${a}() {
        return sampleTexture(${n}, resultUV);
      }
    `;let p=it(u),l=k2(e.shapeInfo.logicalShape,t.logicalShape),d=u-o,h,c=["x","y","z","w","u","v"];o===0?h="":u<2&&l.length>=1?h="coords = 0;":h=l.map(f=>`coords.${c[f+d]} = 0;`).join(`
`);let m="";return u<2&&o>0?m="coords":m=e.shapeInfo.logicalShape.map((f,g)=>`coords.${c[g+d]}`).join(", "),`
    float ${a}() {
      ${p} coords = getOutputCoords();
      ${h}
      return get${r}(${m});
    }
  `}function it(e){if(e<=1)return"int";if(e===2)return"ivec2";if(e===3)return"ivec3";if(e===4)return"ivec4";if(e===5)return"ivec5";if(e===6)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Nx(e,t,n){let{newShape:r,keptDims:a}=v.squeezeShape(t),s=t.length,i=e&&s===3&&t[0]===1,o=i?t.slice(1):r,u=!e&&s>1&&!v.arraysEqual(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function Iu(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Su(e,t){return t.map(n=>e[n]).join(", ")}function xX(e,t,n,r){let a=n.map((l,d)=>{let h={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(h.flatOffset=l.texData.slice.flatOffset),{name:t.variableNames[d],shapeInfo:h}}),s=a.map(l=>l.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=L8(a,i,t),u=e2(e.gl,o),p=e.createProgram(u);return H().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:o,webGLProgram:p,inShapeInfos:s,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(p),Object.assign({program:t,fragmentShader:u,source:o,webGLProgram:p,inShapeInfos:s,outShapeInfo:i},N2(e,t,p)))}function N2(e,t,n){let r=[],a=[],s,i,o,u=null,p=null;p=e.getUniformLocation(n,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(u=e.getUniformLocation(n,"INFINITY",!1));let l=!1;for(let d of t.variableNames){let h={name:d,uniform:e.getUniformLocation(n,d,l),offset:e.getUniformLocation(n,`offset${d}`,l)};t.enableShapeUniforms&&(h.shape=e.getUniformLocation(n,`${d}Shape`,l),h.texShape=e.getUniformLocation(n,`${d}TexShape`,l)),r.push(h)}if(t.enableShapeUniforms&&(s=e.getUniformLocation(n,"outShape",l),o=e.getUniformLocation(n,"outShapeStrides",l),i=e.getUniformLocation(n,"outTexShape",l)),t.customUniforms)for(let d of t.customUniforms)a.push(e.getUniformLocation(n,d.name,l));return{variablesLocations:r,customUniformLocations:a,infLoc:u,nanLoc:p,outShapeLocation:s,outShapeStridesLocation:o,outTexShapeLocation:i}}function Dw(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((n,r)=>{let a=n.logicalShape,s=t[r],i=s.shape;if(!v.arraysEqual(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(n.isUniform&&s.isUniform)return;let o=n.texShape,u=s.isUniform?null:s.texData.texShape;if(!v.arraysEqual(o,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${u} must match`)})}function vX(e,t,n,r,a){t.program.enableShapeUniforms||(Dw(t.inShapeInfos,n),Dw([t.outShapeInfo],[r]));let s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),H().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&e.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&e.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<n.length;++u){let p=n[u],{uniform:l,offset:d,shape:h,texShape:c}=t.variablesLocations[u];if(h){let{uniformShape:m}=Nx(t.program.packedInputs,p.shape,p.texData.texShape);switch(m.length){case 1:e.gl.uniform1iv(h,new Int32Array(m));break;case 2:e.gl.uniform2iv(h,new Int32Array(m));break;case 3:e.gl.uniform3iv(h,new Int32Array(m));break;case 4:e.gl.uniform4iv(h,new Int32Array(m));break}}if(c&&e.gl.uniform2i(c,p.texData.texShape[0],p.texData.texShape[1]),l!=null){if(p.isUniform){if(v.sizeFromShape(p.shape)<2)e.gl.uniform1f(l,p.uniformValues[0]);else{let m=p.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),e.gl.uniform1fv(l,m)}continue}p.texData.slice!=null&&d!=null&&e.gl.uniform1i(d,p.texData.slice.flatOffset),e.setInputMatrixTexture(p.texData.texture.texture,l,u)}}let o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape));break}if(t.outShapeStridesLocation){let u=v.computeStrides(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a)for(let u=0;u<t.program.customUniforms.length;++u){let p=t.program.customUniforms[u],l=t.customUniformLocations[u],d=a[u];if(p.type==="float")e.gl.uniform1fv(l,d);else if(p.type==="vec2")e.gl.uniform2fv(l,d);else if(p.type==="vec3")e.gl.uniform3fv(l,d);else if(p.type==="vec4")e.gl.uniform4fv(l,d);else if(p.type==="int")e.gl.uniform1iv(l,d);else if(p.type==="ivec2")e.gl.uniform2iv(l,d);else if(p.type==="ivec3")e.gl.uniform3iv(l,d);else if(p.type==="ivec4")e.gl.uniform4iv(l,d);else throw Error(`uniform type ${p.type} is not supported yet.`)}e.executeProgram()}function wX(e,t,n){let r="";t.concat(n).forEach(i=>{let o=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!i.isUniform){let u=i.texData.texShape,{useSqueezeShape:p,uniformShape:l,keptDims:d}=Nx(e.packedInputs,i.shape,u),h="",c="",m="";if(l.length===1&&e.packedInputs){let I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];h=`${I[0]>1}_${I[1]>1}`}else if(l.length===2&&!e.packedInputs)c=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!e.packedInputs){let I=v.computeStrides(l);m=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}let f=i.shape.length,g=l.length===2&&v.arraysEqual(i.shape,u),y=v.sizeFromShape(i.shape)===1,b=N.getBroadcastDims(i.shape,n.shape),x=!e.packedInputs&&f===n.shape.length&&v.arraysEqual(u,n.texData.texShape),w=e.packedInputs||l.length>2?"":`${u[0]>1}_${u[1]>1}`;r+=`${f}_${x}_${p?d:""}_${l.length}_${y}_${b}_${g}_${h}_${c}_${m}_${w}_${o}`}else{let u=i.isUniform?"uniform":i.texData.texShape;r+=`${i.shape}_${u}_${o}`}});let a=e.userCode,s=e.constructor.name;return s+="_"+r+"_"+a+`${H().getNumber("WEBGL_VERSION")}`,s}function ln(e){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var kX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=dp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=In();this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?pm(["r","c","d"],e):wo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}},IX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=dp.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=In();this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?pm(["r","c","d"],e):wo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}},SX=class{constructor(e){this.variableNames=["A"],this.outTexUsage=er.DOWNLOAD;let t=In();this.outputShape=e,this.userCode=`
      ${w2}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}},NX=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=er.DOWNLOAD;let t=In();this.outputShape=e,this.userCode=`
      ${w2}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}},TX={R:0,G:1,B:2,A:3},Mw=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let r=In();this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);let a="result";t&&(a="floor(result * 255. + 0.5)");let s="";for(let i=0;i<n.length;i++){let o=n[i];s+=`
          if(offset == ${i}) {
            result = values[${TX[o]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Sx():Ix(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${n.length});

        flatIndex = idiv(flatIndex, ${n.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${s}
        }
        ${r.output} = vec4(${a}, 0., 0., 0.);
      }
    `}},CX=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=In();this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let s=0;s<=1;s++)for(let i=0;i<=1;i++){let o=s*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${s} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${s};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${n.texture2D}(A, uv);

            if (offset == 0) {
              result[${o}] = values[0];
            } else if (offset == 1) {
              result[${o}] = values[1];
            } else if (offset == 2) {
              result[${o}] = values[2];
            } else {
              result[${o}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Sx():Ix(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${n.output} = ${a};
        }
    `}},T2={};Ee(T2,{bindVertexProgramAttributeStreams:()=>M2,createBufferFromOutputTexture:()=>z2,createFloat16MatrixTexture:()=>A2,createFloat16PackedMatrixTexture:()=>D2,createFloat32MatrixTexture:()=>$2,createIndexBuffer:()=>E2,createPackedMatrixTexture:()=>R2,createUnsignedBytesMatrixTexture:()=>F2,createVertexBuffer:()=>_2,createVertexShader:()=>C2,downloadByteEncodedFloatMatrixFromOutputTexture:()=>B2,downloadFloat32MatrixFromBuffer:()=>P2,downloadMatrixFromPackedOutputTexture:()=>V2,downloadPackedMatrixFromBuffer:()=>W2,getInternalFormatForFloat16MatrixTexture:()=>Cx,getInternalFormatForFloat16PackedMatrixTexture:()=>$x,getInternalFormatForFloat32MatrixTexture:()=>Tx,getInternalFormatForPackedMatrixTexture:()=>Ex,getInternalFormatForUnsignedBytesMatrixTexture:()=>_x,uploadDenseMatrixToTexture:()=>O2,uploadPixelDataToTexture:()=>L2});function C2(e){let t=In(),n=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return QN(e,n)}function _2(e){let t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return r2(e,t)}function E2(e){let t=new Uint16Array([0,1,2,2,1,3]);return a2(e,t)}function bd(e,t,n,r,a,s){i2(t,n);let i=s2(e),o=e.TEXTURE_2D;return pe(e,()=>e.bindTexture(o,i)),pe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),pe(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),pe(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),pe(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),H().getNumber("WEBGL_VERSION")===1?pe(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)):pe(e,()=>e.texStorage2D(o,1,r,t,n)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null)),{texture:i,texShape:[n,t]}}function Tx(e){return e.internalFormatFloat}function $2(e,t,n,r){let[a,s]=yd(t,n);return bd(e,a,s,Tx(r),r.textureFormatFloat,e.FLOAT)}function Cx(e){return e.internalFormatHalfFloat}function A2(e,t,n,r){let[a,s]=yd(t,n);return bd(e,a,s,Cx(r),r.textureFormatFloat,r.textureTypeHalfFloat)}function _x(e){return e.downloadTextureFormat}function F2(e,t,n,r){let[a,s]=yd(t,n);return bd(e,a,s,_x(r),e.RGBA,e.UNSIGNED_BYTE)}function Ex(e){return e.internalFormatPackedFloat}function R2(e,t,n,r){let[a,s]=xu(t,n);return bd(e,a,s,Ex(r),e.RGBA,e.FLOAT)}function $x(e){return e.internalFormatPackedHalfFloat}function D2(e,t,n,r){let[a,s]=xu(t,n);return bd(e,a,s,$x(r),e.RGBA,r.textureTypeHalfFloat)}function M2(e,t,n){return pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),Af(e,t,"clipSpacePos",n,3,20,0)&&Af(e,t,"uv",n,2,20,12)}function O2(e,t,n,r,a,s){pe(e,()=>e.bindTexture(e.TEXTURE_2D,t));let i,o,u;a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),H().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function L2(e,t,n){pe(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):H().getNumber("WEBGL_VERSION")===2?pe(e,()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n)):pe(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),pe(e,()=>e.bindTexture(e.TEXTURE_2D,null))}function z2(e,t,n,r){let a=e.createBuffer();pe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a));let s=4*4*t*n;return pe(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ)),pe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),pe(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),a}function P2(e,t,n){let r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}function B2(e,t,n,r){let[a,s]=yd(t,n),i=4,o=new Uint8Array(I8(t*n,i));return pe(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,o)),new Float32Array(o.buffer)}function W2(e,t,n,r,a,s,i,o){let u=e,p=new Float32Array(S8(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,p),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),p}function V2(e,t,n){let r=new Float32Array(t*n*4);return pe(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}var uh=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=H().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,ZN(t,e)):this.gl=Er(t),e=this.gl,H().getNumber("WEBGL_VERSION")===2){let a=e;this.createVertexArray=()=>pe(a,()=>a.createVertexArray()),this.bindVertexArray=s=>pe(a,()=>a.bindVertexArray(s)),this.deleteVertexArray=s=>pe(a,()=>a.deleteVertexArray(s)),this.getVertexArray=()=>pe(a,()=>a.getParameter(a.VERTEX_ARRAY_BINDING))}else if(e!=null){let a=e.getExtension("OES_vertex_array_object");if(a==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pe(e,()=>a.createVertexArrayOES()),this.bindVertexArray=s=>pe(e,()=>a.bindVertexArrayOES(s)),this.deleteVertexArray=s=>pe(e,()=>a.deleteVertexArrayOES(s)),this.getVertexArray=()=>pe(e,()=>e.getParameter(a.VERTEX_ARRAY_BINDING_OES))}let n="WEBGL_color_buffer_float",r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){let a="OES_texture_float",s="OES_texture_half_float";if(this.textureFloatExtension=Uu(this.gl,a),tr(this.gl,s))this.textureHalfFloatExtension=Uu(this.gl,s);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),tr(this.gl,r))this.colorBufferHalfFloatExtension=Uu(this.gl,r);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",tr(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else if(tr(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=_2(this.gl),this.indexBuffer=E2(this.gl),this.framebuffer=o2(this.gl),this.textureConfig=wx(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;pe(e,()=>e.finish()),pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.deleteFramebuffer(this.framebuffer)),pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),pe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),$2(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),A2(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),F2(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),L2(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),O2(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),D2(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),R2(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Ff(this.gl,this.framebuffer),this.outputTexture=null),pe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>B2(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return W2(this.gl,e,t,n,r,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return P2(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let r=z2(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(H().getBool("WEBGL_FENCE_API_ENABLED")){let r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let s=r.clientWaitSync(a,0,0);return s===r.ALREADY_SIGNALED||s===r.CONDITION_SATISFIED},t=a}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>V2(this.gl,t,n))}createProgram(e){this.throwIfDisposed();let t=this.gl;this.vertexShader==null&&(this.vertexShader=C2(t));let n=t2(t);pe(t,()=>t.attachShader(n,this.vertexShader)),pe(t,()=>t.attachShader(n,e)),n2(t,n);let r=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&sh(t,r),r}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);let t=this.gl;pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),M2(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(pe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&this.debug&&sh(this.gl,this.program),pe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?u2(this.gl,e,t):p2(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),pe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),d2(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[r,a]=xu(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&sh(this.gl,this.program),Gu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Uu(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.createQuery();return n.beginQuery(r.TIME_ELAPSED_EXT,a),a}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){let t=this.gl,n=this.getQueryTimerExtensionWebGL2();t.endQuery(n.TIME_ELAPSED_EXT);return}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await v.repeatedTry(()=>this.disposed||this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){let n=this.gl;return n.getQueryParameter(e,n.QUERY_RESULT)/1e6}else{let n=this.getQueryTimerExtensionWebGL1();return n.getQueryObjectEXT(e,n.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){let n=this.gl,r=this.getQueryTimerExtensionWebGL2(),a=n.getQueryParameter(e,n.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),a&&!this.disjoint}else{let n=this.getQueryTimerExtensionWebGL1(),r=n.getQueryObjectEXT(e,n.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){let e=_X(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){let{resolveFn:n}=this.itemsToPoll[t];n()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in H().platform&&(n=H().platform.setTimeoutCustom.bind(H().platform)),v.repeatedTry(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ih(this.gl,e,this.framebuffer),this.debug&&Gu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ih(this.gl,this.outputTexture,this.framebuffer),this.debug&&Gu(this.gl)):Ff(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let r=this.gl;ih(r,e,this.framebuffer),this.debug&&Gu(r),this.outputTexture=e,pe(r,()=>r.viewport(0,0,t,n)),pe(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),pe(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}};function _X(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:EX,bincountImpl:U2,bincountReduceImpl:$X,bitwiseAndImpl:AX,castImpl:FX,ceilImpl:RX,concatImpl:DX,equalImpl:MX,expImpl:OX,expm1Impl:LX,floorImpl:zX,gatherNdImpl:PX,gatherV2Impl:BX,greaterImpl:WX,greaterEqualImpl:VX,lessImpl:UX,lessEqualImpl:GX,linSpaceImpl:HX,logImpl:jX,maxImpl:qX,maximumImpl:KX,minimumImpl:XX,multiplyImpl:ZX,negImpl:JX,notEqualImpl:YX,prodImpl:QX,raggedGatherImpl:e7,raggedRangeImpl:t7,raggedTensorToTensorImpl:n7,rangeImpl:r7,rsqrtImpl:a7,scatterImpl:s7,sigmoidImpl:i7,simpleAbsImpl:G2,sliceImpl:o7,sparseFillEmptyRowsImpl:l7,sparseReshapeImpl:u7,sparseSegmentReductionImpl:H2,sqrtImpl:p7,staticRegexReplaceImpl:d7,stridedSliceImpl:h7,stringNGramsImpl:c7,stringSplitImpl:m7,stringToHashBucketFastImpl:f7,subImpl:g7,tileImpl:y7,topKImpl:b7,transposeImpl:Ax,uniqueImpl:x7}=sx;function j2(e,t){return["x","y","z","w","u","v"].slice(0,t).map(n=>`${e}.${n}`)}function hn(e,t){return t===1?[e]:j2(e,t)}function v7(e,t){if(e===1)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}var w7=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=ln(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{let t=hn("rc",this.rank),n=it(this.rank),r=this.getOutOfBoundsCondition(t),a=this.getSetup(t),s=this.getOutput(t);this.userCode=`
        void main() {
          ${n} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${a}

            setOutput(vec4(${s}));
          }
        }
      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let a=`${n===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let s=2;s<this.rank;s++)a=`${e[e.length-1-s]},`+a;t.push(a)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${n};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){let t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}},q2=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);let n="";for(let r=0;r<4;r++){let a="thisRC = rc;";r%2===1&&(a+="thisRC.z += 1;"),r>1&&(a+="thisRC.y += 1;"),n+=`
        ${a}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${k7(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Sx():Ix(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${n}

        setOutput(result);
      }
    `}};function k7(e,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?O8(["r","c","d"],"inputShape"):wo(["r","c","d"],e)}
      return ivec3(r, c, d);
    }
  `}var I7=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){let r=Lw(t,n),a=zw(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);let s=Ow(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();let o=this.freeTextures[a].pop();return this.usedTextures[a].push(o),o}let i;return r===tn.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===tn.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===tn.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===tn.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===tn.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(this.freeTextures==null)return;let a=Lw(n,r),s=zw(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);let i=Ow(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=H().get("WEBGL_DELETE_TEXTURE_THRESHOLD");o!==-1&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let u=this.usedTextures[s],p=u&&u.indexOf(e);if(p==null||p<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u[p]=u[u.length-1],u.pop(),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(let e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(let e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function S7(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F||t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function Ow(e,t,n,r,a){let s=N7(t,r),i;if(a){let[u,p]=xu(e[0],e[1]);i=u*p}else{let[u,p]=yd(e[0],e[1]);i=u*p}let o=S7(n,s);return i*o}function N7(e,t){switch(e){case tn.PACKED_2X2_FLOAT32:return Ex(t);case tn.PACKED_2X2_FLOAT16:return $x(t);case tn.UNPACKED_FLOAT32:return Tx(t);case tn.UNPACKED_FLOAT16:return Cx(t);case tn.PACKED_4X1_UNSIGNED_BYTE:return _x(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function T7(e){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?tn.PACKED_2X2_FLOAT32:tn.UNPACKED_FLOAT32:e?tn.PACKED_2X2_FLOAT16:tn.UNPACKED_FLOAT16}function Lw(e,t){if(e===er.UPLOAD)return tn.PACKED_2X2_FLOAT32;if(e===er.RENDER||e==null)return T7(t);if(e===er.DOWNLOAD||e===er.PIXELS)return tn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function zw(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Pr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}},xr="if (isnan(x)) return x;",C7="return x;",Pw="return abs(x);",_7="return (x >= 0.0) ? x : (exp(x) - 1.0);",E7=xr+`
  return (x < 0.0) ? 0.0 : x;
`,$7=xr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,Ta="return x;",A7="return 1.0 / (1.0 + exp(-1.0 * x));",F7="return x;",R7=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,D7=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,M7=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,O7="return 1.0 / (1.0 + exp(-1.0 * x));",Aa=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}},L7=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);let t=e.length,n=hn("rc",t),r=it(t),a=v7(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${a});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}},z7=Xr.whereImpl,P7=1e-7,B7=1e-4,Pm={};function W7(e){return e in Pm||(Pm[e]={}),Pm[e]}var V7=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),U7=600;function G7(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*U7/1024/1024}var dm=class extends yp{nextDataId(){return dm.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof uh)t=e;else{let n=Er(H().getNumber("WEBGL_VERSION"),e);t=new uh(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let n=Er(H().getNumber("WEBGL_VERSION"));t=new uh(n),this.binaryCache=W7(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new I7(this.gpgpu),this.numMBBeforeWarning=G7(),this.texData=new jh(this,hr())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,r,a,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[r,a]},o.texShape=[r,a];let u=Hu(t),p=new Mw(u,!1,s),l=this.runWebGLProgram(p,[i],n,[[r,a]]);return l.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),l.dataId}write(e,t,n){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(e),n==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:er.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){let t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){let t=this.texData.get(e);t.refCount--}}move(e,t,n,r,a){if(H().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:er.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(s!=null){let d;o?d=new Aa(i,Ta):d=new Pr(i,Ta);let h=this.runWebGLProgram(d,[{dataId:e,shape:i,dtype:r}],r),c=this.readSync(h.dataId);return this.disposeIntermediateTensorInfo(h),c}if(n!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return n;let u=this.activeTimers!=null,p;u&&(p=v.now());let l;if(r==="complex64"){let d=this.readSync(a.real.dataId),h=this.readSync(a.imag.dataId);l=N.mergeRealAndImagArrays(d,h)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=v.now()-p),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){let c=this.pendingRead.get(e);return new Promise(m=>c.push(m))}let t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(a!=null){let c;o?c=new Aa(r,Ta):c=new Pr(r,Ta);let m=this.runWebGLProgram(c,[{dataId:e,shape:r,dtype:s}],s),f=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),f}if(n!=null)return this.convertAndCacheOnCPU(e);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,p;if(s!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){p=this.decode(e);let c=this.texData.get(p.dataId);u=this.gpgpu.createBufferFromTexture(c.texture.texture,...Zd(r))}this.pendingRead.set(e,[]),s!=="complex64"&&await this.gpgpu.createAndWaitForFence();let l;if(s==="complex64"){let c=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=c[0],f=c[1];l=N.mergeRealAndImagArrays(m,f)}else if(u==null)l=this.getValuesFromTexture(e);else{let c=v.sizeFromShape(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(u,c)}if(p!=null&&this.disposeIntermediateTensorInfo(p),u!=null){let c=this.gpgpu.gl;pe(c,()=>c.deleteBuffer(u))}let d=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(c=>c(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&hr().removeDataId(e,this),this.pendingDeletes--),d}readToGPU(e,t={}){let n=this.texData.get(e),{values:r,shape:a,slice:s,dtype:i,isPacked:o,texture:u}=n;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(s!=null){let h;o?h=new Aa(a,Ta):h=new Pr(a,Ta);let c=this.runWebGLProgram(h,[{dataId:e,shape:a,dtype:i}],i),m=this.readToGPU(c,t);return this.disposeIntermediateTensorInfo(c),m}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let p=this.decode(e,t.customTexShape),l=hr().makeTensorFromTensorInfo(p),d=this.texData.get(p.dataId);return Object.assign({tensorRef:l},d.texture)}bufferSync(e){let t=this.readSync(e.dataId);if(e.dtype==="string")try{let n=t.map(r=>v.decodeString(r));return Pe(e.shape,e.dtype,n)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Pe(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){let n=e[t];if(!JN(n))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=v.sizeFromShape(t);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let d=this.decode(e),h=this.texData.get(d.dataId),c=this.gpgpu.downloadMatrixFromPackedTexture(h.texture.texture,...Zd(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(d),c}let s=H().getBool("WEBGL_PACK")&&r===!0,i=s?Hu(t):t,o=s?new NX(i):new SX(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),p=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(p.texture.texture,p.texShape[0],p.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],r=!1;this.programTimersStack==null?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();let a=v.flatten(this.activeTimers.map(o=>o.query)).filter(o=>o!=null),s=v.flatten(this.activeTimers.map(o=>o.name)).filter(o=>o!=null);this.activeTimers=t,r&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let o=await Promise.all(a);i.kernelMs=v.sum(o),i.getExtraProfileInfo=()=>o.map((u,p)=>({name:s[p],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:v.now(),endMs:null}}endTimer(e){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=v.now(),e)}async getQueryTime(e){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return n!=null&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));let p=this.texData.get(e);p.texture=null,p.texShape=null,p.isPacked=!1,p.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=V7){return H().getBool("WEBGL_CPU_FORWARD")&&e.every(n=>this.texData.get(n.dataId).texture==null&&v.sizeFromShape(n.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){N.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return z7(e.shape,t)}packedUnaryOp(e,t,n){let r=new Aa(e.shape,t),a=this.compileAndRun(r,[e],n);return hr().makeTensorFromTensorInfo(a)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){let r=G2(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Pw,e.dtype);let t=new Pr(e.shape,Pw),n=this.compileAndRun(t,[e]);return hr().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let r;if(t==="string"&&n!=null&&n.length>0&&v.isString(n[0])){let a=n.map(s=>v.encodeString(s));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){return hr().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new L7(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new w7(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){let n=[Gs(e.shape),...Hs(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Gs(t),...Hs(t)],s=new q2(a,n),i=!0,o=[n],u=this.runWebGLProgram(s,[r],e.dtype,o,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:r,shape:a,dtype:s}=n;if(t!=null){let d=v.sizeFromShape(a),h=t[0]*t[1]*4;v.assert(d<=h,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}let i=Hu(a),o;r?o=new IX(i):o=new kX(i);let u=!0,p=[t!=null?t:Zd(i)],l=this.runWebGLProgram(o,[{shape:i,dtype:s,dataId:e}],s,p,u,t);return{dtype:s,shape:a,dataId:l.dataId}}runWebGLProgram(e,t,n,r,a=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===dp.DENSE){let g=s!=null?s:Zd(e.outputShape);o.texShape=g.map(y=>y*2)}if(e.outTexUsage!=null&&(o.usage=e.outTexUsage),v.sizeFromShape(i.shape)===0)return o.values=v.getTypedArrayFromDType(i.dtype,0),i;let u=[],p=t.map(g=>{if(g.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let y=this.texData.get(g.dataId);if(y.texture==null){if(!e.packedInputs&&v.sizeFromShape(g.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:g.shape,texData:null,isUniform:!0,uniformValues:y.values};e.packedInputs&&(y.isPacked=!0,y.shape=g.shape)}if(this.uploadToGPU(g.dataId),!!y.isPacked!=!!e.packedInputs)g=y.isPacked?this.unpackTensor(g):this.packTensor(g),u.push(g),y=this.texData.get(g.dataId);else if(y.isPacked&&!hp(y.shape,g.shape)){let b=g,x=g.shape;g.shape=y.shape,g=this.packedReshape(g,x),u.push(g),y=this.texData.get(g.dataId),b.shape=x}return{shape:g.shape,texData:y,isUniform:!1}});this.uploadToGPU(i.dataId);let l={shape:i.shape,texData:o,isUniform:!1},d=wX(e,p,l),h=this.getAndSaveBinary(d,()=>xX(this.gpgpu,e,p,l)),c=this.activeTimers!=null,m;c&&(m=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||vX(this.gpgpu,h,p,l,r),u.forEach(g=>this.disposeIntermediateTensorInfo(g)),c&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));let f=H().get("WEBGL_FLUSH_THRESHOLD");if(f>0){let g=v.now();g-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=g)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&a===!1){let g=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),g}return i}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=W(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=H().getBool("DEBUG");H().set("DEBUG",!1);let t=this.abs(we(1e-8)).dataSync()[0];if(H().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?P7:B7}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(s!=null)return;let u=this.activeTimers!=null,p;u&&(p=v.now());let l=t.texShape;if(l==null&&(l=m2(n,o),t.texShape=l),a!=null){let d=Hu(n),h,c=l[1],m=l[0],f=a instanceof Uint8Array||a instanceof Uint8ClampedArray;(o||!f)&&([c,m]=xu(l[0],l[1])),o?h=new CX(d,f):h=new Mw(d,f);let g=f?[m,c]:l,y=this.makeTensorInfo(g,r),b=this.texData.get(y.dataId);f?b.usage=er.PIXELS:b.usage=er.UPLOAD,b.texShape=g,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),c,m,a);let x=[[m,c]],w=!0,I=this.runWebGLProgram(h,[y],r,x,w),T=this.texData.get(I.dataId);t.texShape=T.texShape,t.isPacked=T.isPacked,t.usage=T.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(I.dataId):(t.texture=T.texture,t.values=null,this.texData.delete(I.dataId)),this.disposeIntermediateTensorInfo(y),u&&(this.uploadWaitMs+=v.now()-p)}else{let d=this.acquireTexture(l,i,r,o);t.texture=d}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:r}=n;return t!=null&&(n.values=H7(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){let a=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${a} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*v.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(a){throw a}});e.push(n)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await ky(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(kx(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);let{variablesLocations:t,customUniformLocations:n,infLoc:r,nanLoc:a,outShapeLocation:s,outShapeStridesLocation:i,outTexShapeLocation:o}=N2(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=r,e.nanLoc=a,e.outShapeLocation=s,e.outShapeStridesLocation=i,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";let{texture:r,height:a,width:s,channels:i}=e,o=hr().backend;if(!o.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let u=o.writeTexture(r,t,n,a,s,i);return hr().makeTensorFromDataId(u,t,n,o)}};dm.nextDataId=0;function H7(e,t){if(t==="float32"||t==="complex64")return e;if(t==="int32"||t==="bool"){let n=t==="int32"?new Int32Array(e.length):new Uint8Array(e.length);for(let r=0;r<n.length;++r)n[r]=Math.round(e[r]);return n}else throw new Error(`Unknown dtype ${t}`)}var j7="4.7.0";function K2(){H().set("WEBGL_FORCE_F16_TEXTURES",!0)}Up.isBrowser()&&uc("webgl",()=>new dm,2);var q7={forceHalfFloat:K2},Fx=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`,js=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=ln(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}},Io=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`,Nu=class{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=N.assertAndGetBroadcastShape(t,n);let a=this.outputShape.length;this.enableShapeUniforms=ln(a);let s="";if(r)if(a===0||v.sizeFromShape(this.outputShape)===1)s=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(s=`
          ${it(a)} coords = getOutputCoords();
        `,a===1)this.enableShapeUniforms?s+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:s+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{let i=hn("coords",a);this.enableShapeUniforms?s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= outShape[${a} - 2];
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= outShape[${a} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:s+=`
            bool nextRowOutOfBounds =
              (${i[a-2]} + 1) >= ${this.outputShape[a-2]};
            bool nextColOutOfBounds =
              (${i[a-1]} + 1) >= ${this.outputShape[a-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${s}

        setOutput(result);
      }
    `}};function qn(e){let{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}var K7={kernelName:Si,backendName:"webgl",kernelFunc:qn};function as(e){let{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=qn({inputs:{x:r},backend:n}),u=qn({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}var X7={kernelName:Xh,backendName:"webgl",kernelFunc:as},X2="return (a < 0.) ? b * a : a;",Z2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Z7(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",v.createScalarValue(s,"float32")),o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nu(Z2,a.shape,i.shape):new js(X2,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}var J7={kernelName:_i,backendName:"webgl",kernelFunc:Z7},J2="return (a < 0.) ? b * a : a;",Y2=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function Y7(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nu(Y2,r.shape,a.shape):new js(J2,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}var Q7={kernelName:Gi,backendName:"webgl",kernelFunc:Y7},Tu="if (isnan(x)) return x;";function Ke({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{let{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&n!=null){let d=o.texData.get(i.dataId),h=n(d.values,u);return o.makeTensorInfo(i.shape,u,h)}let p=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null,l;return p?l=new Aa(i.shape,t):l=new Pr(i.shape,e),o.runWebGLProgram(l,[i],u)}}function an({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{let{a:u,b:p}=i,l=o;if(r&&u.dtype==="complex64"){let m=l.texData.get(u.dataId),f=l.texData.get(p.dataId),[g,y]=[[m.complexTensorInfos.real,f.complexTensorInfos.real],[m.complexTensorInfos.imag,f.complexTensorInfos.imag]].map(x=>{let[w,I]=x,T={dataId:w.dataId,dtype:w.dtype,shape:u.shape},C={dataId:I.dataId,dtype:I.dtype,shape:p.shape},E=new js(e,u.shape,p.shape);return l.runWebGLProgram(E,[T,C],ar(w.dtype,I.dtype))}),b=as({inputs:{real:g,imag:y},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(y),b}let d=s||ar(u.dtype,p.dtype);if((u.dtype==="string"||p.dtype==="string"||l.shouldExecuteOnCPU([u,p]))&&a!=null){let m=l.texData.get(u.dataId).values,f=l.texData.get(p.dataId).values,g=u.dtype==="string"?N.fromUint8ToStringArray(m):m,y=u.dtype==="string"?N.fromUint8ToStringArray(f):f,[b,x]=a(u.shape,p.shape,g,y,d),w=l.makeTensorInfo(x,d),I=l.texData.get(w.dataId);return I.values=b,w}let h=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null,c;return h?c=new Nu(t,u.shape,p.shape,n):c=new js(e,u.shape,p.shape),l.runWebGLProgram(c,[u,p],d)}}function cp(e,t=!1){if(e==="linear")return t?F7:C7;if(e==="relu")return t?D7:E7;if(e==="elu")return t?R7:_7;if(e==="relu6")return t?M7:$7;if(e==="prelu")return t?Y2:J2;if(e==="leakyrelu")return t?Z2:X2;if(e==="sigmoid")return t?O7:A7;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var Q2=class{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=ln(this.outputShape.length);let p=r?e[1]:e[2],l=Math.ceil(p/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",c=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],f="",g="";i&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:f=`vec4 activation(vec4 x) {
          ${i}
        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(x=`imod(rc.x, ${t[0]})`),this.userCode=`
      ${f}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${l}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${b};
        int batchB = ${x};
        for (int i = 0; i < ${l}; i++) {
          vec4 a = getMatrixA(batchA, ${d});
          vec4 b = getMatrixB(batchB, ${h});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${c[0]} * ${m[0]});
          result += (${c[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${y}

        ${g}

        setOutput(result);
      }
    `}},Bw={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},Ww=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=N.assertAndGetBroadcastShape(t,n),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}},Vw="return a * b;";function Rx(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=N.upcastType(r.dtype,a.dtype);if(r.dtype==="complex64"){let o=n.texData.get(r.dataId),u=n.texData.get(a.dataId),p=new Ww(Bw.REAL,r.shape,a.shape),l=new Ww(Bw.IMAG,r.shape,a.shape),d=[{dataId:o.complexTensorInfos.real.dataId,dtype:o.complexTensorInfos.real.dtype,shape:r.shape},{dataId:o.complexTensorInfos.imag.dataId,dtype:o.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:a.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:a.shape}],h=n.runWebGLProgram(p,d,"float32"),c=n.runWebGLProgram(l,d,"float32"),m=as({inputs:{real:h,imag:c},backend:n});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),m}if(n.shouldExecuteOnCPU([r,a])){let o=n.texData.get(r.dataId),u=n.texData.get(a.dataId),[p,l]=ZX(r.shape,a.shape,o.values,u.values,s),d=n.makeTensorInfo(l,s),h=n.texData.get(d.dataId);return h.values=p,d}let i;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new Nu(Vw,r.shape,a.shape):i=new js(Vw,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}var eZ={kernelName:Bi,backendName:"webgl",kernelFunc:Rx};function tZ(e,t,n){let r=[Gs(e.shape),...Hs(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Gs(t),...Hs(t)],i=new q2(s,r),o=!0,u=[r],p=n.runWebGLProgram(i,[a],e.dtype,u,o);return{dataId:p.dataId,shape:t,dtype:p.dtype}}function ue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=v.sizeFromShape(a.shape),u=v.inferFromImplicitShape(s,o),p=v.sizeFromShape(u);v.assert(o===p,()=>`The new shape (${u}) has ${p} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);let l=i.texData.get(a.dataId);return l.isPacked&&!hp(a.shape,u)&&!(l.texture!==null&&hp(l.shape,u))?tZ(a,u,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype})}var nZ={kernelName:Gl,backendName:"webgl",kernelFunc:ue},Uw=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i=Math.floor(n/4)*4,o=n%4,u="sumValue += dot(values, ones);";if(t!=null){let l=1/t;u=`sumValue += dot(values * ${v.isInt(l)?l.toPrecision(2):l}, ones);`}let p="";a%n>0&&(p=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${o===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${o===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${o===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}},rZ=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",o="min"):t==="max"&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");let p=Math.floor(n/4)*4,l=n%4,d=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${o}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${o}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,h="vec4";t==="all"?(i="1.0",d=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,h="bvec4"):t==="any"&&(i="0.0",d=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,h="bvec4");let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${c}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${n};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${d}
        }

        int inIdx = inOffset + ${p};
        if (${l===1}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===2}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${d}
        } else if (${l===3}) {
          ${h} values = ${h}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function aZ(e){let t=[];for(;t.length===0||t[t.length-1].outSize!==1;){let n=t.length?t[t.length-1].outSize:e[1],r=N.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}function So(e,t,n,r){let a=aZ(e.shape),s=e;for(let i=0;i<a.length;i++){let{inSize:o,windowSize:u,outSize:p}=a[i],l,d;n==="mean"?l=i===0?new Uw({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:p},o):new Uw({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:p}):l=new rZ({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:p},n),d=s,s=r.runWebGLProgram(l,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}var sZ=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;let r=it(this.rank),a=iZ(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${a}));
    }
    `}};function iZ(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let a=0;a<e.length;a++)r[e[a]]=n[a];return r.join()}var oZ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let p=0;p<n.length;p++)n[p]=e[t[p]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let r=it(this.rank),a=j2("rc",this.rank),s=new Array(this.rank);for(let p=0;p<t.length;p++)s[t[p]]=a[p];let i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${o}) {
        result[1] = ${u};
      }
      --${a[this.rank-1]};
      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {
        result[2] = ${u};
        if(${o}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}};function hm(e,t,n){let r=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oZ(e.shape,t):new sZ(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function lZ(e,t,n,r){let a=t,s=e.shape.length,i=v.parseAxisParam(a,e.shape),o=i,u=N.getAxesPermutation(o,s),p=u!=null,l=e;p&&(l=hm(e,u,r),o=N.getInnerMostAxes(o.length,s)),N.assertAxesAreInnerMostDims("sum",o,s);let[d,h]=N.computeOutAndReduceShapes(l.shape,o),c=d;n&&(c=N.expandShapeToKeepDim(d,i));let m=v.sizeFromShape(h),f=v.sizeFromShape(e.shape)/m,g=ue({inputs:{x:l},attrs:{shape:[f,m]},backend:r}),y=lc(e.dtype),b=So(g,y,"sum",r),x=ue({inputs:{x:b},attrs:{shape:c},backend:r});return r.disposeIntermediateTensorInfo(g),r.disposeIntermediateTensorInfo(b),p&&r.disposeIntermediateTensorInfo(l),x}function cm(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return lZ(a,s,i,n)}var uZ={kernelName:oo,backendName:"webgl",kernelFunc:cm};function yn(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let l=0;l<u.length;l++)u[l]=a.shape[s[l]];let p;if(i.shouldExecuteOnCPU([a])){let l=i.texData.get(a.dataId).values,d=Ax(l,a.shape,a.dtype,s,u);p=i.makeTensorInfo(u,a.dtype);let h=i.texData.get(p.dataId);h.values=d}else p=hm(a,s,i);return p}var pZ={kernelName:oa,backendName:"webgl",kernelFunc:yn},eT=1e3;function Lh({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){let p=e.shape.length,l=t.shape.length,d=n?e.shape[p-2]:e.shape[p-1],h=r?t.shape[l-1]:t.shape[l-2],c=n?e.shape[p-1]:e.shape[p-2],m=r?t.shape[l-2]:t.shape[l-1],f=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=v.sizeFromShape(f),b=v.sizeFromShape(g),x=lu.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,m]);v.assert(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);let w=n?[y,d,c]:[y,c,d],I=r?[b,m,h]:[b,h,m],T=ue({inputs:{x:e},backend:a,attrs:{shape:w}}),C=ue({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[T,C],A=Math.max(y,b),R=n?T.shape[1]:T.shape[2],F=s!=null,S=i!=null,M=u==="leakyrelu",B=u!=null?cp(u,!0):null,U=F||S||M||B!=null,G;if((c===1||m===1)&&R>eT&&U===!1){let j=T,X=C;n&&(j=yn({inputs:{x:T},backend:a,attrs:{perm:[0,2,1]}}),E.push(j)),r&&(X=yn({inputs:{x:C},backend:a,attrs:{perm:[0,2,1]}}),E.push(X));let ee=m!==1,Z=m===1,re=j;ee&&(re=ue({inputs:{x:j},backend:a,attrs:{shape:[A,R,1]}}),E.push(re));let te=m===1?2:1,ae=X;Z&&(ae=ue({inputs:{x:X},backend:a,attrs:{shape:[A,1,R]}}),E.push(ae));let ie=Rx({inputs:{a:re,b:ae},backend:a});G=cm({inputs:{x:ie},backend:a,attrs:{axis:te,keepDims:!0}}),E.push(ie)}else{let j=ar(e.dtype,t.dtype),X=new Q2(w,I,[A,c,m],n,r,F,B,S,M),ee=[T,C];if(s!=null&&ee.push(s),S&&ee.push(i),M){let Z=a.makeTensorInfo([],"float32",v.createScalarValue(o,"float32"));ee.push(Z),E.push(Z)}G=a.runWebGLProgram(X,ee,j)}let K=ue({inputs:{x:G},backend:a,attrs:{shape:x}});E.push(G);for(let j of E)a.disposeIntermediateTensorInfo(j);return K}function dZ(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:d}=r;return Lh({a,b:s,transposeA:u,transposeB:p,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}var hZ={kernelName:Es,backendName:"webgl",kernelFunc:dZ},Gw="return abs(x);";function cZ(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&r.dtype!=="complex64"){let s=n.texData.get(r.dataId),i=G2(s.values);return n.makeTensorInfo(r.shape,r.dtype,i)}let a;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Aa(r.shape,Gw):a=new Pr(r.shape,Gw),n.runWebGLProgram(a,[r],r.dtype)}var mZ={kernelName:il,backendName:"webgl",kernelFunc:cZ},fZ=xr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,gZ=Ke({opSnippet:fZ}),yZ={kernelName:Xs,backendName:"webgl",kernelFunc:gZ},bZ=xr+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,xZ=Ke({opSnippet:bZ}),vZ={kernelName:Zs,backendName:"webgl",kernelFunc:xZ},Hw="return a + b;",wZ=an({opSnippet:Hw,packedOpSnippet:Hw,supportsComplex:!0,cpuKernelImpl:EX}),kZ={kernelName:Ka,backendName:"webgl",kernelFunc:wZ},IZ=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`float v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}},SZ=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((a,s)=>`T${s}`);let n=[];this.variableNames.forEach(a=>{n.push(`vec4 v${a} = get${a}AtOutCoords();`)});let r=this.variableNames.map(a=>`v${a}`).join(" + ");this.userCode=`
      void main() {
        ${n.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}};function ph(e){let{inputs:t,backend:n}=e,r=t;if(r.length===1)return qn({inputs:{x:r[0]},backend:n});if(r.length>H().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let o=Math.floor(r.length/2),u=ph({inputs:r.slice(0,o),backend:n}),p=ph({inputs:r.slice(o),backend:n});return ph({inputs:[u,p],backend:n})}let a=r.map(o=>o.dtype).reduce((o,u)=>ar(o,u)),s=r.map(o=>o.shape),i=H().getBool("WEBGL_PACK")?new SZ(r[0].shape,s):new IZ(r[0].shape,s);return n.runWebGLProgram(i,r,a)}var NZ={kernelName:Js,backendName:"webgl",kernelFunc:ph};function TZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=v.parseAxisParam(s,a.shape),p=u,l=N.getAxesPermutation(p,o),d=a;l!=null&&(d=yn({inputs:{x:a},backend:n,attrs:{perm:l}}),p=N.getInnerMostAxes(p.length,o)),N.assertAxesAreInnerMostDims("all",p,o);let[h,c]=N.computeOutAndReduceShapes(d.shape,p),m=v.sizeFromShape(c),f=ue({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=So(f,f.dtype,"all",n),y;if(i){let b=N.expandShapeToKeepDim(h,u);y=ue({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),y}var CZ={kernelName:ol,backendName:"webgl",kernelFunc:TZ};function _Z(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=v.parseAxisParam(s,a.shape),p=u,l=N.getAxesPermutation(p,o),d=a;l!=null&&(d=yn({inputs:{x:a},backend:n,attrs:{perm:l}}),p=N.getInnerMostAxes(p.length,o)),N.assertAxesAreInnerMostDims("any",p,o);let[h,c]=N.computeOutAndReduceShapes(d.shape,p),m=v.sizeFromShape(c),f=ue({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=So(f,f.dtype,"any",n),y;if(i){let b=N.expandShapeToKeepDim(h,u);y=ue({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),y}var EZ={kernelName:ll,backendName:"webgl",kernelFunc:_Z},$Z=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];let i=t==="max"?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${o};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}},AZ=class{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v.assert(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);let a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");let i=this.outputShape,o=i.length,u=it(o),p=hn("coords",o),l,d;if(s===1){d=o+1;let C=it(d);l=`
        ${C} sourceLocR = ${C}(${p.join()}, 0);
        ++${p[o-1]};
        ${C} sourceLocG = ${C}(${p.join()}, 0);
        ++${p[o-2]};
        ${C} sourceLocA = ${C}(${p.join()}, 0);
        --${p[o-1]};
        ${C} sourceLocB = ${C}(${p.join()}, 0);
        --${p[o-2]};`}else d=o,l=`
        ${u} sourceLocR = coords;
        ++${p[o-1]};
        ${u} sourceLocG = coords;
        ++${p[o-2]};
        ${u} sourceLocA = coords;
        --${p[o-1]};
        ${u} sourceLocB = coords;
        --${p[o-2]};`;let h=["x","y","z","w","u","v"].slice(0,d),c="."+h[d-1],m=h.map(C=>"int "+C),f=hn("sourceLocR",d-1).concat("inIdx.r"),g=hn("sourceLocG",d-1).concat("inIdx.g"),y=hn("sourceLocB",d-1).concat("inIdx.b"),b=hn("sourceLocA",d-1).concat("inIdx.a"),x=n==="max"?"greaterThan":"lessThan",w=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${f.join()}),
                             getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${y.join()}),
                             getBestIndicesAChannel(${b.join()})));`,I=`vec4(
            getAChannel(${f.join()}),
            hasNextCol ? getAChannel(${g.join()}) : 0.,
            hasNextRow ? getAChannel(${y.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,T=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${h.join()}),
                                          vec2(${h.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${h.join()}),
                               vec2(${h.slice(-2).join()}));
      }
      ${T}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${p[o-1]} < ${i[o-1]-1};
        bool hasNextRow = ${p[o-2]} < ${i[o-2]-1};
        ${l}
        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},
          sourceLocB${c}, sourceLocA${c}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${I};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${w}
          vec4 candidate = ${I};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}};function tT(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];r!=null&&(a=r.shape[0],s=r.shape[1]);let i=N.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new $Z(o,n,r==null),p=[t];r!=null&&p.push(r);let l=e.runWebGLProgram(u,p,"int32");if(l.shape[1]===1)return l;let d=tT(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function nT(e,t,n,r=null){let a=r!=null?r.shape:t.shape,s=a[a.length-1],i=N.computeOptimalWindowSize(s),o=new AZ(a,i,n,r==null),u=r==null?[t]:[t,r],p=e.runWebGLProgram(o,u,"int32");if(p.shape.length===t.shape.length){let l=nT(e,t,n,p);return e.disposeIntermediateTensorInfo(p),l}return p}function rT(e,t,n,r){let a=[n];if(N.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let s=[],i=e.texData.get(t.dataId),o=i!==null&&i.isPacked,u=t;o&&(u=e.unpackTensor(t),s.push(u));let[p,l]=N.computeOutAndReduceShapes(u.shape,a),d=v.sizeFromShape(l),h=ue({inputs:{x:u},backend:e,attrs:{shape:[-1,d]}});s.push(h);let c=tT(e,h,r);s.push(c);let m=ue({inputs:{x:c},backend:e,attrs:{shape:p}});return s.forEach(f=>e.disposeIntermediateTensorInfo(f)),m}return nT(e,t,r)}function FZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=v.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),u=a,p=[];o!=null&&(u=yn({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),N.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);let l=rT(n,u,i[0],"max");return p.forEach(d=>n.disposeIntermediateTensorInfo(d)),l}var RZ={kernelName:ul,backendName:"webgl",kernelFunc:FZ};function DZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r,i=v.parseAxisParam(s,a.shape),o=N.getAxesPermutation(i,a.shape.length),u=a,p=[];o!=null&&(u=yn({inputs:{x:a},backend:n,attrs:{perm:o}}),p.push(u),i=N.getInnerMostAxes(i.length,u.shape.length)),N.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);let l=rT(n,u,i[0],"min");return p.forEach(d=>n.disposeIntermediateTensorInfo(d)),l}var MZ={kernelName:pl,backendName:"webgl",kernelFunc:DZ},OZ=xr+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,LZ=Ke({opSnippet:OZ}),zZ={kernelName:Ys,backendName:"webgl",kernelFunc:LZ},PZ=xr+"return log(x + sqrt(x * x + 1.0));",BZ=Ke({opSnippet:PZ}),WZ={kernelName:Qs,backendName:"webgl",kernelFunc:BZ},VZ=xr+`
  return atan(x);
`,UZ=Ke({opSnippet:VZ}),GZ={kernelName:ei,backendName:"webgl",kernelFunc:UZ},HZ=Fx+`
  return atan(a, b);
`,jZ=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Io+`
  return result;
`,qZ=an({opSnippet:HZ,packedOpSnippet:jZ}),KZ={kernelName:ni,backendName:"webgl",kernelFunc:qZ},XZ=xr+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,ZZ=Ke({opSnippet:XZ}),JZ={kernelName:ti,backendName:"webgl",kernelFunc:ZZ},mp=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let m=t==="avg",f=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(m||(y="-1.0 / 1e-20"),n){let C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${o});
        const ivec2 pads = ivec2(${h}, ${c});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${l};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${d};
                wC += ${p}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?a?f:g:`wR * ${d} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let b="max",x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(x="avgValue / max(count, 1.0)");let w=Math.floor(s/4)*4,I=s%4,T=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${b}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${o});
      const ivec2 pads = ivec2(${h}, ${c});
      const float initializationValue = ${y};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${y});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${l};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${w}; wC += 4) {
            int xC = xCCorner + wC * ${p};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              getValue(batch, xR, xC + 3 * ${p}, d)
            );

            ${T}
          }

          int xC = xCCorner + ${w};
          if (${I===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${I===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              initializationValue,
              initializationValue
            );

            ${T}
          } else if (${I===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${p}, d),
              getValue(batch, xR, xC + 2 * ${p}, d),
              initializationValue
            );

            ${T}
          }
        }
        setOutput(${x});
      }
    `}},Dx=class{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],t==="avg"&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,p=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,c=e.effectiveFilterHeight,m=e.effectiveFilterWidth,f=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b=t==="avg",x="0.0";if(b||(x="-1.0 / 1e-20"),n){let A=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${o}, ${u});
        const ivec3 pads = ivec3(${f}, ${g}, ${y});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${h};
              wD += ${p}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${c};
                wR += ${l}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${d}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${A} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}let w="max",I=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(I="avgValue / max(count, 1.0)");let T=Math.floor(s/4)*4,C=s%4,E=`
      if (${b}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${w}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${o}, ${u});
      const ivec3 pads = ivec3(${f}, ${g}, ${y});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${h};
            wD += ${p}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${c};
            wR += ${l}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${T}; wC += 4) {
              int xC = xCCorner + wC * ${d};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                getValue(batch, xD, xR, xC + 3 * ${d}, ch)
              );

              ${E}
            }

            int xC = xCCorner + ${T};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                initializationValue,
                initializationValue
              );

              ${E}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${d}, ch),
                getValue(batch, xD, xR, xC + 2 * ${d}, ch),
                initializationValue
              );

              ${E}
            }
          }
        }
        setOutput(${I});
      }
    `}};function YZ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;vu(a,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,p=1;v.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,p,o,u);if(l.filterWidth===1&&l.filterHeight===1&&v.arraysEqual(l.inShape,l.outShape))return qn({inputs:{x:a},backend:n});let d=new mp(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}var QZ={kernelName:ri,backendName:"webgl",kernelFunc:YZ};function eJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=r,l=[1,1,1],d=N.computePool3DInfo(a.shape,s,i,l,o,u,p),h=new Dx(d,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}var tJ={kernelName:dl,backendName:"webgl",kernelFunc:eJ},nJ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`
      const ivec2 pads = ivec2(${p}, ${l});
      const float avgMultiplier = float(${d});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
            wR += ${s}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}},rJ=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,p=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,c=l-1-e.padInfo.front,m=d-1-e.padInfo.top,f=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`
      const ivec3 pads = ivec3(${c}, ${m}, ${f});
      const float avgMultiplier = float(${g});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${l};
            wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${a}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${h};
                wC += ${p}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function aJ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:p,dimRoundingMode:l}=r,d=[1,1,1],h=N.computePool3DInfo(i.shape,o,u,d,p,l),c=new rJ(h);return n.runWebGLProgram(c,[a],i.dtype)}var sJ={kernelName:vp,backendName:"webgl",kernelFunc:aJ};function iJ(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;vu([a,s],"avgPoolGrad");let{filterSize:o,strides:u,pad:p}=r,l=N.computePool2DInfo(i.shape,o,u,1,p),d=new nJ(l);return n.runWebGLProgram(d,[a],i.dtype)}var oJ={kernelName:xp,backendName:"webgl",kernelFunc:iJ};function lJ(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return Lh({a,b:s,transposeA:i,transposeB:o,backend:n})}var uJ={kernelName:ai,backendName:"webgl",kernelFunc:lJ},pJ=class{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="0.0";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";a!=null&&(N.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${o};
        float inv = scale * inversesqrt(variance + float(${s}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}},dJ=class{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],N.assertAndGetBroadcastShape(e,t),N.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";r!=null&&(N.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";a!=null&&(N.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${o};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${s}));

        setOutput((x - mean) * inv + offset);
      }
    `}},hJ=({inputs:e,backend:t,attrs:n})=>{let{x:r,mean:a,variance:s,offset:i,scale:o}=e;v.assert(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v.assert(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v.assert(o==null||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;u==null&&(u=.001);let p=[r,a,s],l=null;i!=null&&(l=i.shape,p.push(i));let d=null;o!=null&&(d=o.shape,p.push(o));let h=H().getBool("WEBGL_PACK_NORMALIZATION")?new dJ(r.shape,a.shape,s.shape,l,d,u):new pJ(r.shape,a.shape,s.shape,l,d,u);return t.runWebGLProgram(h,p,p[0].dtype)},cJ={kernelName:ki,backendName:"webgl",kernelFunc:hJ},mJ=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=it(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n=fJ(this.rank),r,a=e.map((s,i)=>`sourceLoc.${Mf[i]} = start[${i}] + coords.${Mf[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${a.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${n}));
      }
    `}},Mf=["x","y","z","w","u","v"];function fJ(e){if(e===1)return"sourceLoc";if(e<=6)return Mf.slice(0,e).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var gJ=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=it(this.rank),n=hn("coords",this.rank),r=hn("sourceLoc",this.rank),a=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`
      result.x = ${s};
      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${s};
        --${r[this.rank-1]};
      }
    `,o=this.rank===1?"":`
      --${n[this.rank-1]};
      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${s};
        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${s};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((p,l)=>`start[${l}]`).join()});`:e.map((p,l)=>`${r[l]} = ${n[l]} + start[${l}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${o}
        setOutput(result);
      }
    `}};function yJ(e,t,n,r){let a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=zt.computeFlatOffset(t,v.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};let u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}function Cu(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=zt.parseSliceParams(a,s,i);if(zt.assertParamsValid(a,o,u),v.sizeFromShape(u)===0)return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||a.dtype==="string"){let d=n.texData.get(a.dataId),h=o7(d.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,h)}let{isPacked:p}=n.texData.get(a.dataId),l=zt.isSliceContinous(a.shape,o,u);if(p||!l){let d=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gJ(u):new mJ(u),h=[o];return n.runWebGLProgram(d,[a],a.dtype,h)}return n.uploadToGPU(a.dataId),yJ(a,o,u,n)}var bJ={kernelName:Jl,backendName:"webgl",kernelFunc:Cu},xJ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;v.assert(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((b,x)=>b*x),u=N.getReshaped(a.shape,s,o),p=N.getPermuted(u.length,s.length),l=N.getReshapedPermuted(a.shape,s,o),d=N.getSliceBeginCoords(i,s.length),h=N.getSliceSize(l,i,s.length),c=[],m=ue({inputs:{x:a},backend:n,attrs:{shape:u}}),f=yn({inputs:{x:m},backend:n,attrs:{perm:p}}),g=ue({inputs:{x:f},backend:n,attrs:{shape:l}}),y=Cu({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return c.push(m),c.push(f),c.push(g),c.forEach(b=>n.disposeIntermediateTensorInfo(b)),y},vJ={kernelName:hl,backendName:"webgl",kernelFunc:xJ};function wJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),p=U2(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,p)}var kJ={kernelName:cl,backendName:"webgl",kernelFunc:wJ},IJ=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,SJ=`
  return float(int(a.r) & int(b.r));
`;function NJ(e){let{inputs:t,backend:n}=e,{a:r,b:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=H().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([r,a])||i===1){let u=n.texData.get(r.dataId).values,p=n.texData.get(a.dataId).values,[l,d]=AX(r.shape,a.shape,u,p,r.dtype),h=n.makeTensorInfo(d,r.dtype),c=n.texData.get(h.dataId);return c.values=l,h}let o;return s?o=new Nu(IJ,r.shape,a.shape,!1):o=new js(SJ,r.shape,a.shape),n.runWebGLProgram(o,[r,a],r.dtype)}var TJ={kernelName:ml,backendName:"webgl",kernelFunc:NJ};function CJ(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var _J={kernelName:wp,backendName:"webgl",kernelFunc:CJ},EJ="return float(a != b);",aT=an({opSnippet:EJ,cpuKernelImpl:YX,dtype:"bool"}),$J={kernelName:zl,backendName:"webgl",kernelFunc:aT};function xd(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return qn({inputs:{x:a.complexTensorInfos.real},backend:n})}var AJ={kernelName:ic,backendName:"webgl",kernelFunc:xd},FJ="return float(int(x));";function RJ(e,t){let n=new Pr(e.shape,FJ),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function Of(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if(s==="complex64"){if(a.dtype==="complex64")return qn({inputs:{x:a},backend:n});let i=vt(a.shape),o=Of({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=as({inputs:{real:o,imag:i},backend:n});return i.dispose(),n.disposeIntermediateTensorInfo(o),u}if(a.dtype==="complex64"){let i=xd({inputs:{input:a},backend:n}),o=Of({inputs:{x:i},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(i),o}if(!v.hasEncodingLoss(a.dtype,s)){let i=qn({inputs:{x:a},backend:n});return{dataId:i.dataId,shape:i.shape,dtype:s}}if(n.shouldExecuteOnCPU([a])){let i=n.texData.get(a.dataId).values,[o,u,p]=FX(i,a.shape,a.dtype,s);return n.makeTensorInfo(o,u,p)}if(s==="int32")return RJ(a,n);if(s==="bool"){let i=n.makeTensorInfo([],"bool",v.getTypedArrayFromDType("bool",1)),o=aT({inputs:{a,b:i},backend:n});return n.disposeIntermediateTensorInfo(i),o}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}var DJ={kernelName:si,backendName:"webgl",kernelFunc:Of},jw="return ceil(x);",MJ=Ke({opSnippet:jw,packedOpSnippet:jw,cpuKernelImpl:RX}),OJ={kernelName:ii,backendName:"webgl",kernelFunc:MJ},LJ=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}},zJ=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}};function PJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o;H().getBool("WEBGL_PACK_CLIP")?o=new zJ(a.shape):o=new LJ(a.shape);let u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}var BJ={kernelName:Xa,backendName:"webgl",kernelFunc:PJ},WJ=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}};function qw(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function VJ(e){let{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new WJ(r.shape),i=[qw(r,a.complexTensorInfos.real),qw(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var UJ={kernelName:kp,backendName:"webgl",kernelFunc:VJ},GJ=class{constructor(e){this.outputShape=[],this.outputShape=N.computeOutShape(e,1),this.variableNames=e.map((s,i)=>`T${i}`);let t=new Array(e.length-1);t[0]=e[0][1];for(let s=1;s<t.length;s++)t[s]=t[s-1]+e[s][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let s=1;s<t.length;s++){let i=t[s-1];n.push(`else if (yC < ${t[s]}) setOutput(getT${s}(yR, yC-${i}));`)}let r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${n.join(`
        `)}
      }
    `}},HJ=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=N.computeOutShape(e,t);let n=this.outputShape,r=n.length,a=it(r),s=hn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,f)=>`T${f}`);let o=new Array(e.length-1);o[0]=e[0][t];for(let m=1;m<o.length;m++)o[m]=o[m-1]+e[m][t];let u=i[t],p=i.slice(-2),l=i.join(),d=`if (${u} < ${o[0]}) {
        return getChannel(
            getT0(${l}), vec2(${p.join()}));
        }`;for(let m=1;m<o.length;m++){let f=o[m-1];d+=`
        if (${u} < ${o[m]}  && ${u} >= ${o[m-1]}) {
          return getChannel(
            getT${m}(${Yd(i,u,f)}),
            vec2(${Yd(p,u,f)}));
        }`}let h=o.length,c=o[o.length-1];d+=`
        return getChannel(
          getT${h}(${Yd(i,u,c)}),
          vec2(${Yd(p,u,c)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${d}
      }

      void main() {
        ${a} coords = getOutputCoords();
        vec4 result = vec4(getValue(${s}), 0., 0., 0.);

        ${s[r-1]} = ${s[r-1]} + 1;
        if (${s[r-1]} < ${n[r-1]}) {
          result.g = getValue(${s});
        }

        ${s[r-2]} = ${s[r-2]} + 1;
        if (${s[r-2]} < ${n[r-2]}) {
          result.a = getValue(${s});
        }

        ${s[r-1]} = ${s[r-1]} - 1;
        if (${s[r-2]} < ${n[r-2]} &&
            ${s[r-1]} < ${n[r-1]}) {
          result.b = getValue(${s});
        }
        setOutput(result);
      }
    `}};function Yd(e,t,n){let r=e.indexOf(t);return e.map((a,s)=>s===r?`${a} - ${n}`:a).join()}function mm(e){let{inputs:t,backend:n}=e,{input:r}=t,a=n.texData.get(r.dataId);return qn({inputs:{x:a.complexTensorInfos.imag},backend:n})}var jJ={kernelName:nc,backendName:"webgl",kernelFunc:mm};function ju(e,t,n){let r=e[0].dtype;if(r==="complex64"){let c=e.map(b=>xd({inputs:{input:b},backend:n})),m=e.map(b=>mm({inputs:{input:b},backend:n})),f=ju(c,t,n),g=ju(m,t,n),y=as({inputs:{real:f,imag:g},backend:n});return c.forEach(b=>n.disposeIntermediateTensorInfo(b)),m.forEach(b=>n.disposeIntermediateTensorInfo(b)),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),y}let a=n.shouldExecuteOnCPU(e);if(r==="string"&&(a=!0),a){let c=e.map(w=>{let I=[-1,v.sizeFromShape(w.shape.slice(t))];return ue({inputs:{x:w},backend:n,attrs:{shape:I}})}),m=c.map(w=>({vals:n.readSync(w.dataId),shape:w.shape})),f=N.computeOutShape(c.map(w=>w.shape),1),g=c[0].shape[0]===1,y=DX(m,f,r,g),b=N.computeOutShape(e.map(w=>w.shape),t),x=n.makeTensorInfo(b,r,y);return c.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}let s=e.filter(c=>v.sizeFromShape(c.shape)>0),i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(s.length===1){let c=i?new Pr(e[0].shape,Ta):new Aa(e[0].shape,Ta);return n.runWebGLProgram(c,e,r)}let o=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let c=[];for(let f=0;f<s.length;f+=o){let g=s.slice(f,f+o);c.push(ju(g,t,n))}let m=ju(c,t,n);for(let f of c)n.disposeIntermediateTensorInfo(f);return m}if(i){let c=new HJ(s.map(m=>m.shape),t);return n.runWebGLProgram(c,s,r)}let{tensors2D:u,outShape:p}=qJ(s,t,n),l=new GJ(u.map(c=>c.shape)),d=n.runWebGLProgram(l,u,r);u.forEach(c=>n.disposeIntermediateTensorInfo(c));let h=ue({inputs:{x:d},attrs:{shape:p},backend:n});return n.disposeIntermediateTensorInfo(d),h}function qJ(e,t,n){let r=N.computeOutShape(e.map(a=>a.shape),t);return{tensors2D:e.map(a=>ue({inputs:{x:a},attrs:{shape:[-1,v.sizeFromShape(a.shape.slice(t))]},backend:n})),outShape:r}}function sT(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=v.parseAxisParam(a,t[0].shape)[0],i=t.map(p=>p.shape);N.assertParamsConsistent(i,s);let o=N.computeOutShape(t.map(p=>p.shape),s);if(v.sizeFromShape(o)===0)return n.makeTensorInfo(o,t[0].dtype,[]);let u=t.filter(p=>v.sizeFromShape(p.shape)>0);return u.length===1?qn({inputs:{x:u[0]},backend:n}):ju(u,s,n)}var KJ={kernelName:fl,backendName:"webgl",kernelFunc:sT},iT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,p=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,f=e.dataFormat==="channelsLast",g=f?1:2,y=f?2:3,b=f?3:1,x="",w="";n&&(r?x=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?x=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:x=`
          float activation(float x) {
            ${n}
          }
        `,w="result = activation(result);");let I=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${x}

      const ivec2 strides = ivec2(${o}, ${u});
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${b}];

        ivec2 xRCCorner =
            ivec2(coords[${g}], coords[${y}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${d}; wR++) {
          int xR = xRCorner + wR * ${p};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${h}; wC++) {
            int xC = xCCorner + wC * ${l};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${c}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${f}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${f}) {
                dotProd +=
                    getX(batch, xR, xC, ${c}) *
                    getW(wR, wC, ${c}, d2);
              } else {
                dotProd +=
                    getX(batch, ${c}, xR, xC) *
                    getW(wR, wC, ${c}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2)
              );

              if (${f}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${c}, d2),
                getW(wR, wC, ${c} + 1, d2),
                getW(wR, wC, ${c} + 2, d2)
              );

              if (${f}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${c}),
                  getX(batch, xR, xC, ${c} + 1),
                  getX(batch, xR, xC, ${c} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${c}, xR, xC),
                  getX(batch, ${c} + 1, xR, xC),
                  getX(batch, ${c} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${I}
        ${w}
        setOutput(result);
      }
    `}},XJ=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,p=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,c=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${a}, ${s}, ${i});
      const ivec3 pads = ivec3(${t}, ${n}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${l}; wF++) {
          int xF = xFCorner + wF * ${o};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${d}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h}; wC++) {
              int xC = xCCorner + wC * ${p};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${c}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${c}) *
                  getW(wF, wR, wC, ${c}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${c}),
                  getX(batch, xF, xR, xC, ${c} + 1),
                  getX(batch, xF, xR, xC, ${c} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${c}, d2),
                  getW(wF, wR, wC, ${c} + 1, d2),
                  getW(wF, wR, wC, ${c} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},oT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ln(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,l=p,d=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let f=0;f<p;f++)d+=`
           vec4 xTexelC${f*2};
           int xTexelC${f*2}Ready;
           vec4 xTexelC${f*2+1};
           int xTexelC${f*2+1}Ready;
           vec4 xC${f};`;d+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let f=0;f<p;f++)d+=`
           xTexelC${f*2} = vec4(0.0);
           xTexelC${f*2}Ready = 0;
           xTexelC${f*2+1} = vec4(0.0);
           xTexelC${f*2+1}Ready = 0;
           xC${f} = vec4(0.0);`;d+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let f=0;f<(l+1)/2;f++){let g=f*2;if(d+=`
           xC = xCCorner + ${g*o};
           `,i===1){if(g<p&&(s%2===1?(d+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }
               `,o===1&&g>0?d+=`
                 xC${g} = vec4(xTexelC${g-2}.zw, xTexelC${g}.xy);
                 `:d+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${g} = vec4(previous.zw, xTexelC${g}.xy);
                   } else {
                     xC${g} = vec4(0.0, 0.0, xTexelC${g}.xy);
                   }
                   `):d+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xC${g} = xTexelC${g};
                 `,g+1<p)){let y=s%2===0?v.nearestLargerEven(o):o;o%2===0&&s%2===1||o%2!==0&&s%2!==1?(d+=`
                   xCOffset = xC + imod(pads[1], 2) + ${y};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                     xTexelC${g+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${g+1}.zw = vec2(0.0);
                     }
                     xTexelC${g+1}Ready = 1;
                   }
                   `,o>1?d+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${g+1} = vec4(previous.zw, xTexelC${g+1}.xy);
                     } else {
                      xC${g+1} = vec4(0.0, 0.0, xTexelC${g+1}.xy);
                     }
                     `:d+=`
                     xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.xy);
                     `):y===1?d+=`
                     xC${g+1} = xTexelC${g};
                     `:d+=`
                     xCOffset = xC + ${y};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                       xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${g+1}.zw = vec2(0.0);
                       }
                       xTexelC${g+1}Ready = 1;
                     }

                     xC${g+1} = xTexelC${g+1};
                     `}}else g<p&&(s%2===1?(d+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.0);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
               `,g+1<p&&(d+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${g+1} = vec4(xTexelC${g+1}.xy, final.xy);
                 `)):(d+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${g}Ready == 0) {
                   xTexelC${g} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${g}.zw = vec2(0.0);
                   }
                   xTexelC${g}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${g+1}Ready == 0) {
                   xTexelC${g+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${g+1}.zw = vec2(0.);
                   }
                   xTexelC${g+1}Ready = 1;
                 }

                 xC${g} = vec4(
                   xTexelC${g}.xy, xTexelC${g+1}.xy);
               `,g+1<p&&(d+=`
                   xC${g+1} = vec4(xTexelC${g}.zw, xTexelC${g+1}.zw);
                 `)));g<p&&(d+=`
             wTexel = getW(r, ${g}, d1, d2);
             dotProd += xC${g}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${g}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,g+1<p&&(d+=`
               wTexel = getW(r, ${g+1}, d1, d2);
               dotProd += xC${g+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${g+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}d+=`
     }
   `,d+=`
     }
   `,d+=`
     }
   `;let h="",c="";n&&(r?h=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${n}
         }`:a?h=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${n}
         }`:h=`vec4 activation(vec4 x) {
           ${n}
         }`,c="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${h}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${d}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${c}
         setOutput(result);
       }
     `}},ZJ=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=ln(this.outputShape.length);let{dataFormat:n}=t,r=In(),a=n==="channelsLast",s=a?1:2,i=a?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,u="";for(let p=0;p<=1;p++)for(let l=0;l<=1;l++)u+=`
          blockIndex = rc.z + ${l};
          pos = rc.y + ${p};

          ${o}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${s}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${a}) {
                  innerDims = vec2(d1, ch);
                  result[${p*2+l}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${p*2+l}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}};function zh(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&n===1&&e[0]>1?[e[0],1]:null}function lT({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let u=e.shape,p=r.texData.get(e.dataId),l=n.inChannels,d=u[0]*u[1]*u[2],h=n.outChannels,c=n.dataFormat==="channelsLast",m=!1,f=!1,g,y=[];if(s!=null){let b=zh(s.shape,c);b!=null&&(s=ue({inputs:{x:s},backend:r,attrs:{shape:b}}),y.push(s))}if(a!=null){let b=zh(a.shape,c);b!=null&&(a=ue({inputs:{x:a},backend:r,attrs:{shape:b}}),y.push(a))}if(!((d===1||h===1)&&l>eT)&&p.isPacked&&c&&p.texture!=null&&u[2]%2!==0&&v.arraysEqual(p.shape.slice(-3),u.slice(-3))){let b=u[0]*u[1]*(u[2]+1),x={dataId:e.dataId,shape:[1,b,n.inChannels],dtype:e.dtype},w=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,v.assert(hp(p.shape,x.shape),()=>`packed reshape ${p.shape} to ${x.shape} isn't free`);let I=ue({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(I);let T=Lh({a:x,b:I,backend:r,transposeA:m,transposeB:f,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),C=r.texData.get(T.dataId);v.assert(C.isPacked,()=>"batchMatMul result is expected to be packed"),p.shape=w,C.shape=n.outShape,g=qn({inputs:{x:T},backend:r}),g.shape=n.outShape,y.push(T)}else{let b=n.outHeight*n.outWidth,x=ue({inputs:{x:e},backend:r,attrs:{shape:c?[n.batchSize,b,n.inChannels]:[n.batchSize,n.inChannels,b]}}),w=ue({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),I=Lh({a:c?x:w,b:c?w:x,transposeA:!c,transposeB:f,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=ue({inputs:{x:I},backend:r,attrs:{shape:n.outShape}}),y.push(x),y.push(w),y.push(I)}for(let b of y)r.disposeIntermediateTensorInfo(b);return g}function uT({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:u,filterHeight:p,inChannels:l,outWidth:d,outHeight:h,dataFormat:c}=n,m=c==="channelsLast",f=u*p*l,g=h*d,y=[n.batchSize,f,g],b=!0,x=!1,w=[];if(s!=null){let j=zh(s.shape,m);j!=null&&(s=ue({inputs:{x:s},backend:r,attrs:{shape:j}}),w.push(s))}if(a!=null){let j=zh(a.shape,m);j!=null&&(a=ue({inputs:{x:a},backend:r,attrs:{shape:j}}),w.push(a))}let I=ue({inputs:{x:t},backend:r,attrs:{shape:[1,f,v.sizeFromShape(t.shape)/f]}});w.push(I);let T=new ZJ(y,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],E=r.runWebGLProgram(T,[e],"float32",C),A=ue({inputs:{x:E},backend:r,attrs:{shape:y}});w.push(E),w.push(A);let R=a!=null,F=s!=null,S=o==="leakyrelu",M=o?cp(o,!0):null,B=new Q2(m?A.shape:I.shape,m?I.shape:A.shape,m?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],b,x,R,M,F,S),U=m?[A,I]:[I,A];if(a&&U.push(a),F&&U.push(s),S){let j=r.makeTensorInfo([],"float32",v.createScalarValue(i,"float32"));U.push(j),w.push(j)}let G=r.runWebGLProgram(B,U,"float32"),K=ue({inputs:{x:G},backend:r,attrs:{shape:n.outShape}});w.push(G);for(let j of w)r.disposeIntermediateTensorInfo(j);return K}function JJ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:p,dimRoundingMode:l}=r,d=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(a.shape,s.shape,i,p,o,l,!1,d),c;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))c=lT({x:a,filter:s,convInfo:h,backend:n});else if(h.strideWidth<=2&&d==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){let f=new oT(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];c=n.runWebGLProgram(f,[a,s],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))c=uT({x:a,filter:s,convInfo:h,backend:n});else{let f=new iT(h);c=n.runWebGLProgram(f,[a,s],"float32")}let m=ue({inputs:{x:c},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(c),m}var YJ={kernelName:oi,backendName:"webgl",kernelFunc:JJ},QJ=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              ${s?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}},e9=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,p=s?2:3,l=s?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${l}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${p}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${s}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}},t9=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${a};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${n} - ${s};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}},n9=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,p=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${o}, ${u}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${a}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${n}; wR++) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${n} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function r9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:p,filterShape:l}=r,d=N.convertConv2DDataFormat(u),h=N.computeConv2DInfo(a.shape,l,i,1,o,p,!1,d),c=new QJ(h);return n.runWebGLProgram(c,[a,s],"float32")}var a9={kernelName:Zh,backendName:"webgl",kernelFunc:r9},s9=class{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=ln(this.outputShape.length);let t=e.filterHeight,n=e.filterWidth,r=t-1-e.padInfo.top,a=n-1-e.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${r}, ${a});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            int wCPerm = ${n} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}};function i9(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:p,dimRoundingMode:l}=r,d=N.convertConv2DDataFormat(p),h=N.computeConv2DInfo(i,s.shape,o,1,u,l,!1,d);if(H().getBool("WEBGL_PACK")&&d==="channelsLast"){let c=[[h.strideHeight,h.strideWidth]],m=new s9(h);return n.runWebGLProgram(m,[a,s],"float32",c)}else{let c=new e9(h);return n.runWebGLProgram(c,[a,s],"float32")}}var o9={kernelName:li,backendName:"webgl",kernelFunc:i9};function l9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,p=N.computeConv3DInfo(a.shape,s.shape,i,u,o),l=new XJ(p);return n.runWebGLProgram(l,[a,s],"float32")}var u9={kernelName:ui,backendName:"webgl",kernelFunc:l9};function p9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,p=N.computeConv3DInfo(a.shape,u,i,1,o),l=new t9(p);return n.runWebGLProgram(l,[a,s],"float32")}var d9={kernelName:gl,backendName:"webgl",kernelFunc:p9};function h9(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,p=N.computeConv3DInfo(u,s.shape,o,1,i),l=new n9(p);return n.runWebGLProgram(l,[a,s],"float32")}var c9={kernelName:yl,backendName:"webgl",kernelFunc:h9},m9=Tu+`
  return cos(x);
`,f9=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Io}
  return result;
`,g9=Ke({opSnippet:m9,packedOpSnippet:f9}),y9={kernelName:pi,backendName:"webgl",kernelFunc:g9},b9=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,x9=Ke({opSnippet:b9}),v9={kernelName:di,backendName:"webgl",kernelFunc:x9},w9=class{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,u]=e,[p]=t,[l,d]=n;this.outputShape=[p,l,d,u];let h=r==="bilinear"?1:0,[c,m]=[`${i-1}.0`,`${o-1}.0`],[f,g,y]=l>1?[`${(i-1)/(l-1)}`,"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,w]=d>1?[`${(o-1)/(d-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${f});
      const float width_ratio = float(${b});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${s}) {
          return;
        }

        float height_scale = ${g};
        float width_scale = ${x};

        float in_y = ${y};
        if( in_y < 0.0 || in_y > ${c} ) {
          setOutput(float(${a}));
          return;
        }
        float in_x = ${w};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${a}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${h} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}},k9=e=>{let{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:p}=r,l=new w9(a.shape,s.shape,o,u,p);return n.runWebGLProgram(l,[a,s,i],"float32")},I9={kernelName:xl,backendName:"webgl",kernelFunc:k9},fp;(function(e){e.Prod="*",e.Sum="+"})(fp||(fp={}));var Kw=class{constructor(e,t,n,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let a=this.outputShape.length,s=this.op===fp.Prod?"1.0":"0.0",i=n?s:`getX(${Xw(a,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],u="",p="";n?(u=r?`end != ${o-1}`:"end != 0",p=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${o}`:"end >= pow2",p=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${it(a)} coords = getOutputCoords();
        int end = ${Zw(a,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${p};
          ${Zw(a,"coords",this.op)} = idx;
          val ${this.op}= getX(${Xw(a,"coords",this.op)});
        }
        setOutput(val);
      }
    `}};function Xw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.x, ${t}.y`;if(e===3)return`${t}.x, ${t}.y, ${t}.z`;if(e===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Zw(e,t,n){if(e===1)return`${t}`;if(e===2)return`${t}.y`;if(e===3)return`${t}.z`;if(e===4)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function pT(e,t,n,r,a,s){let i=t.shape.length,o=N.getAxesPermutation([r],i),u=t;o!=null&&(u=yn({inputs:{x:t},backend:n,attrs:{perm:o}}));let p=N.getInnerMostAxes(1,i)[0];if(p!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${r}`);let l=u.shape[p],d=qn({inputs:{x:u},backend:n});for(let h=0;h<=Math.ceil(Math.log2(l))-1;h++){let c=new Kw(e,u.shape,!1,s),m=[[h]],f=d;d=n.runWebGLProgram(c,[d],d.dtype,m),n.disposeIntermediateTensorInfo(f)}if(a){let h=new Kw(e,u.shape,a,s),c=d;d=n.runWebGLProgram(h,[d],d.dtype),n.disposeIntermediateTensorInfo(c)}if(o!=null){let h=N.getUndoAxesPermutation(o),c=yn({inputs:{x:d},backend:n,attrs:{perm:h}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(u),c}return d}function S9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return pT(fp.Prod,a,n,s,i,o)}var N9={kernelName:bl,backendName:"webgl",kernelFunc:S9};function T9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;return pT(fp.Sum,a,n,s,i,o)}var C9={kernelName:hi,backendName:"webgl",kernelFunc:T9};function _9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(a.shape.length===1){let u=n.readSync(a.dataId),p=n.readSync(s.dataId),l=U2(u,p,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}else if(a.shape.length===2){let u=n.bufferSync(a),p=n.bufferSync(s),l=$X(u,p,i,o);return n.makeTensorInfo(l.shape,s.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}var E9={kernelName:Ip,backendName:"webgl",kernelFunc:_9},$9=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function A9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=i==="NHWC"?a.shape[1]:a.shape[2],p=i==="NHWC"?a.shape[2]:a.shape[3],l=i==="NHWC"?a.shape[3]:a.shape[1],d=u*s,h=p*s,c=l/(s*s),m=i==="NHWC"?[o,d,h,c]:[o,c,d,h],f=new $9(m,s,i);return n.runWebGLProgram(f,[a],a.dtype)}var F9={kernelName:vl,backendName:"webgl",kernelFunc:A9},dT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ln(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,u="",p="";n&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:u=`
          float activation(float x) {
            ${n}
          }
        `,p="result = activation(result);");let l=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${o};
        int q = d2 - d1 * ${o};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${s}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${l}
        ${p}
        setOutput(result);
      }
    `}},hT=class{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=ln(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,p=e.filterHeight,l=e.filterWidth,d=l,h=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)h+=`
          vec4 xTexelC${g*2};
          int xTexelC${g*2}Ready;
          vec4 xTexelC${g*2+1};
          int xTexelC${g*2+1}Ready;
          vec4 xC${g};`;h+=`
    for (int r = 0; r < ${p}; r++) {
      `;for(let g=0;g<l;g++)h+=`
          xTexelC${g*2} = vec4(0.0);
          xTexelC${g*2}Ready = 0;
          xTexelC${g*2+1} = vec4(0.0);
          xTexelC${g*2+1}Ready = 0;
          xC${g} = vec4(0.0);`;h+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let g=0;g<(d+1)/2;g++){let y=g*2;if(h+=`
          xC = xCCorner + ${y*u};
          `,o===1){if(y<l&&(i%2===1?(h+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }
              `,u===1&&y>0?h+=`
                xC${y} = vec4(xTexelC${y-2}.zw, xTexelC${y}.xy);
                `:h+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${y} = vec4(previous.zw, xTexelC${y}.xy);
                  } else {
                    xC${y} = vec4(0.0, 0.0, xTexelC${y}.xy);
                  }
                  `):h+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xC${y} = xTexelC${y};
                `,y+1<l)){let b=i%2===0?v.nearestLargerEven(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(h+=`
                  xCOffset = xC + imod(pads[1], 2) + ${b};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                    xTexelC${y+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${y+1}.zw = vec2(0.0);
                    }
                    xTexelC${y+1}Ready = 1;
                  }
                  `,u>1?h+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${y+1} = vec4(previous.zw, xTexelC${y+1}.xy);
                    } else {
                     xC${y+1} = vec4(0.0, 0.0, xTexelC${y+1}.xy);
                    }
                    `:h+=`
                    xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.xy);
                    `):b===1?h+=`
                    xC${y+1} = xTexelC${y};
                    `:h+=`
                    xCOffset = xC + ${b};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                      xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${y+1}.zw = vec2(0.0);
                      }
                      xTexelC${y+1}Ready = 1;
                    }

                    xC${y+1} = xTexelC${y+1};
                    `}}else y<l&&(i%2===1?(h+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.0);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
              `,y+1<l&&(h+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${y+1} = vec4(xTexelC${y+1}.xy, final.xy);
                `)):(h+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${y}Ready == 0) {
                  xTexelC${y} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${y}.zw = vec2(0.0);
                  }
                  xTexelC${y}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${y+1}Ready == 0) {
                  xTexelC${y+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${y+1}.zw = vec2(0.);
                  }
                  xTexelC${y+1}Ready = 1;
                }

                xC${y} = vec4(
                  xTexelC${y}.xy, xTexelC${y+1}.xy);
              `,y+1<l&&(h+=`
                  xC${y+1} = vec4(xTexelC${y}.zw, xTexelC${y+1}.zw);
                `)));y<l&&(h+=`
            wTexel = getW(r, ${y}, d1, q);
            dotProd += xC${y} * vec4(wTexel.xz, wTexel.xz);
          `,y+1<l&&(h+=`
              wTexel = getW(r, ${y+1}, d1, q);
              dotProd += xC${y+1} * vec4(wTexel.xz, wTexel.xz);
            `))}h+=`
    }
  `,h+=`
      }
    `;let c="",m="";n&&(r?c=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${n}
        }`:a?c=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${n}
        }`:c=`vec4 activation(vec4 x) {
          ${n}
        }`,m="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${c}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${s};
        int q = d2 - d1 * ${s};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${h}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${f}
        ${m}
        setOutput(result);
      }
    `}};function R9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:p}=r,l=u;l==null&&(l=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(i,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`);let d=N.computeConv2DInfo(a.shape,s.shape,i,l,o,p,!0),h;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new hT(d):h=new dT(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",c)}var D9={kernelName:ci,backendName:"webgl",kernelFunc:R9},M9=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${s} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${n} - ${a};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}},O9=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${s}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${n}; wC++) {
            float dyC = float(dyCCorner + wC) / ${a}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${n} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${o}; dm++) {
              int d2 = d1 * ${o} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function L9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:p,filterShape:l}=r,d=N.computeConv2DInfo(a.shape,l,i,o,u,p,!0),h=new M9(d);return n.runWebGLProgram(h,[a,s],"float32")}var z9={kernelName:Jh,backendName:"webgl",kernelFunc:L9};function P9(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:p,inputShape:l}=r,d=N.computeConv2DInfo(l,s.shape,i,o,u,p,!0),h=new O9(d);return n.runWebGLProgram(h,[a,s],"float32")}var B9={kernelName:Yh,backendName:"webgl",kernelFunc:P9},W9=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}};function V9(e){let{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=v.sizeFromShape(r.shape),i=ue({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new W9(s),u=n.runWebGLProgram(o,[i],i.dtype),p=ue({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),p}var U9={kernelName:Sp,backendName:"webgl",kernelFunc:V9},G9=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:p}=e,{top:l,left:d}=r;this.userCode=`
      const ivec2 strides = ivec2(${a}, ${s});
      const ivec2 pads = ivec2(${l}, ${d});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${o}; w++) {
              int wIn = wBeg + w * ${p};

              if (wIn >= 0 && wIn < ${n}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}};function H9(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,p=N.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),l,d=new G9(p);l=n.runWebGLProgram(d,[a,s],"float32");let h=ue({inputs:{x:l},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(l),h}var j9={kernelName:mi,backendName:"webgl",kernelFunc:H9};function q9(e){let{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=N.decodeEinsumEquation(a,s.length);N.checkEinsumDimSizes(i.length,u,s);let{path:p,steps:l}=N.getEinsumComputePath(o,u),d=l.length,h=null,c=i.length,m=[];for(let f=0;f<d;++f){for(let g of l[f]){let{permutationIndices:y,expandDims:b}=N.getEinsumPermutation(c,u[g]),x;N.isIdentityPermutation(y)?x=s[g]:(x=yn({inputs:{x:s[g]},backend:n,attrs:{perm:y}}),m.push(x));let w=x.shape.slice();for(let I=0;I<b.length;++I)w.splice(b[I],0,1);v.arraysEqual(x.shape,w)||(x=ue({inputs:{x},backend:n,attrs:{shape:w}}),m.push(x)),h===null?h=x:(h=Rx({inputs:{a:x,b:h},backend:n}),m.push(h))}f<d-1&&(p[f]>=0&&(h=cm({inputs:{x:h},backend:n,attrs:{axis:p[f]-(i.length-c),keepDims:!1}}),m.push(h)),c--)}for(let f of m)f!==h&&n.disposeIntermediateTensorInfo(f);return h}var K9={kernelName:Qh,backendName:"webgl",kernelFunc:q9},X9="return (x >= 0.0) ? x : (exp(x) - 1.0);",Z9=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,J9=Ke({opSnippet:X9,packedOpSnippet:Z9}),Y9={kernelName:gi,backendName:"webgl",kernelFunc:J9},Q9="return (b >= 0.0) ? a : a * (b + 1.0);",eY=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,tY=e=>{let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Nu(eY,r.shape,a.shape):new js(Q9,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)},nY={kernelName:wl,backendName:"webgl",kernelFunc:tY},rY=`
  return vec4(equal(a, b));
`,aY="return float(a == b);",sY=an({opSnippet:aY,packedOpSnippet:rY,dtype:"bool",cpuKernelImpl:MX}),iY={kernelName:kl,backendName:"webgl",kernelFunc:sY},oY=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${N.ERF_P};
  float a1 = ${N.ERF_A1};
  float a2 = ${N.ERF_A2};
  float a3 = ${N.ERF_A3};
  float a4 = ${N.ERF_A4};
  float a5 = ${N.ERF_A5};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,lY=Ke({opSnippet:oY}),uY={kernelName:yi,backendName:"webgl",kernelFunc:lY},pY=Tu+`
  return exp(x);
`,dY=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cT=Ke({opSnippet:pY,packedOpSnippet:dY,cpuKernelImpl:OX,dtype:"float32"}),hY={kernelName:bi,backendName:"webgl",kernelFunc:cT};function Lf(e){let{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),u=a;return a<0&&(v.assert(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),ue({inputs:{x:s},backend:r,attrs:{shape:o}})}var cY={kernelName:Il,backendName:"webgl",kernelFunc:Lf},Jw="return exp(x) - 1.0;",mY=Ke({opSnippet:Jw,packedOpSnippet:Jw,cpuKernelImpl:LX}),fY={kernelName:xi,backendName:"webgl",kernelFunc:mY},Yw=class{constructor(e,t,n){this.variableNames=["real","imag"];let r=t[1];this.outputShape=t;let a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0",i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${a};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${s};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}};function mT(e,t,n){let r=n.texData.get(e.dataId),a=v.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=a/s,o=ue({inputs:{x:e},backend:n,attrs:{shape:[i,s]}}),u=o.shape,p=new Yw("real",u,t),l=new Yw("imag",u,t),d=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:u},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:u}],h=n.runWebGLProgram(p,d,"float32"),c=n.runWebGLProgram(l,d,"float32"),m=as({inputs:{real:h,imag:c},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c);let f=ue({inputs:{x:m},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(m),f}function gY(e){let{inputs:t,backend:n}=e,{input:r}=t;return mT(r,!1,n)}var yY={kernelName:ec,backendName:"webgl",kernelFunc:gY},bY=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}};function vd(e){let{backend:t,attrs:n}=e,{shape:r,value:a}=n,{dtype:s}=n;if(s=s||v.inferDtype(a),s==="string"){let i=v.getArrayFromDType(s,v.sizeFromShape(r));return i.fill(a),t.makeTensorInfo(r,s,i)}else{let i=new bY(r,a),o=[[a]];return t.runWebGLProgram(i,[],s,o)}}var xY={kernelName:Np,backendName:"webgl",kernelFunc:vd},vY=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}},wY={kernelName:Sl,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,r=t,a=new vY(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Qw="return floor(x);",kY=Ke({opSnippet:Qw,packedOpSnippet:Qw,cpuKernelImpl:zX}),IY={kernelName:vi,backendName:"webgl",kernelFunc:kY},SY=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,NY=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,TY=an({opSnippet:SY,packedOpSnippet:NY,dtype:"int32"}),CY={kernelName:wi,backendName:"webgl",kernelFunc:TY},_Y=class{constructor(e){this.variableNames=["A"];let t=In(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}},EY=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=In(),[n,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${n}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}},$Y={kernelName:mh,backendName:"webgl",kernelFunc:AY},$o,Bm=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function AY(e){let{inputs:t,backend:n,attrs:r}=e,{pixels:a}=t,{numChannels:s}=r,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,o=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[u,p]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[p,u],d=[p,u,s];if(o||i){let f=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");($o==null||f!==Bm)&&(Bm=f,$o=document.createElement("canvas").getContext("2d",{willReadFrequently:Bm})),$o.canvas.width=u,$o.canvas.height=p,$o.drawImage(a,0,0,u,p),a=$o.canvas}let h=n.makeTensorInfo(l,"int32");n.texData.get(h.dataId).usage=er.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);let c=H().getBool("WEBGL_PACK")?new EY(d):new _Y(d),m=n.runWebGLProgram(c,[h],"int32");return n.disposeData(h.dataId),m}function FY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dataFormat:l,dilations:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=r,f=N.convertConv2DDataFormat(l),g=N.computeConv2DInfo(a.shape,s.shape,u,d,p,h,!1,f),y,b=[],x=i!=null,w=o!=null,I=c==="leakyrelu",T=()=>{let E=[a,s],A=(R,F)=>{if(F==="NCHW"&&R.shape.length===1&&R.shape[0]!==1){let S=ue({inputs:{x:R},backend:n,attrs:{shape:[R.shape[0],1,1]}});return b.push(S),S}return R};if(x&&E.push(A(i,l)),w&&E.push(A(o,l)),I){let R=n.makeTensorInfo([],"float32",v.createScalarValue(m,"float32"));E.push(R),b.push(R)}return E};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))y=lT({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else if(g.strideWidth<=2&&f==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){let E=c?cp(c,!0):null,A=new oT(g,x,E,w,I),R=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],F=T();y=n.runWebGLProgram(A,F,"float32",R)}else if(H().getBool("WEBGL_CONV_IM2COL"))y=uT({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:c,preluActivationWeights:o,leakyreluAlpha:m});else{let E=c?cp(c,!1):null,A=new iT(g,x,E,w,I),R=T();y=n.runWebGLProgram(A,R,"float32")}let C=ue({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(E=>n.disposeIntermediateTensorInfo(E)),C}var RY={kernelName:$s,backendName:"webgl",kernelFunc:FY};function DY(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:c}=r,m=[],f=l;f==null&&(f=[1,1]),v.assert(N.eitherStridesOrDilationsAreOne(u,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${f}'`);let g=N.computeConv2DInfo(a.shape,s.shape,u,f,p,d,!0),y=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?cp(h,y):null,x=[a,s],w=i!=null,I=o!=null,T=h==="leakyrelu";if(w&&x.push(i),I&&x.push(o),T){let R=n.makeTensorInfo([],"float32",v.createScalarValue(c,"float32"));x.push(R),m.push(R)}let C;y?C=new hT(g,w,b,I,T):C=new dT(g,w,b,I,T);let E=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],A=n.runWebGLProgram(C,x,"float32",E);return m.forEach(R=>n.disposeIntermediateTensorInfo(R)),A}var MY={kernelName:As,backendName:"webgl",kernelFunc:DY},OY=class{constructor(e,t,n,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=n;let a=it(n.length),s=`
    int index;`;for(let i=0;i<this.sliceDim;i++)s+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${a} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${s}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}};function LY(e){let{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=v.sizeFromShape(r.shape),[u,p,l,d]=N.prepareAndValidate(r,a),h=ue({inputs:{x:a},backend:n,attrs:{shape:[p,i]}}),c=ue({inputs:{x:r},backend:n,attrs:{shape:[v.sizeFromShape(r.shape)/l,l]}});if(n.shouldExecuteOnCPU([r,a])||r.dtype==="string"){let y=n.readSync(a.dataId),b=n.bufferSync(r),x=PX(y,b,r.dtype,p,i,l,d,r.shape,o);return n.makeTensorInfo(u,r.dtype,x.values)}let m=new OY(i,d,[p,l],r.shape),f=n.runWebGLProgram(m,[c,h],c.dtype),g=ue({inputs:{x:f},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),g}var zY={kernelName:Tl,backendName:"webgl",kernelFunc:LY},PY=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=it(this.rank),r=BY(e);this.userCode=`
      void main() {
        ${n} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}};function BY(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let a=0;a<e.length;a++)a===2?r.push("index"):r.push(`${n[a]}`);return r.join()}function fT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=v.parseAxisParam(i,a.shape)[0];if(H().get("DEBUG")){let b=n.readSync(s.dataId),x=a.shape[u];for(let w=0;w<b.length;++w){let I=b[w];v.assert(I<=x-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${x-1}]`)}}let p=N.segment_util.collectGatherOpShapeInfo(a,s,u,o),l=v.sizeFromShape(s.shape),d=[],h=ue({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),c=ue({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,l/p.batchSize]}});d.push(h),d.push(c);let m=[p.batchSize,p.outerSize,l/p.batchSize,p.sliceSize];if(n.shouldExecuteOnCPU([a,s])||a.dtype==="string"){let b=n.bufferSync(c),x=n.bufferSync(h),w=BX(x,b,m);return d.forEach(I=>n.disposeIntermediateTensorInfo(I)),n.makeTensorInfo(p.outputShape,w.dtype,w.values)}let f=new PY(h.shape,m),g=n.runWebGLProgram(f,[h,c],h.dtype);d.push(g);let y=ue({inputs:{x:g},backend:n,attrs:{shape:p.outputShape}});return d.forEach(b=>n.disposeIntermediateTensorInfo(b)),y}var WY={kernelName:Nl,backendName:"webgl",kernelFunc:fT},VY="return float(a > b);",UY=`
  return vec4(greaterThan(a, b));
`,GY=an({opSnippet:VY,packedOpSnippet:UY,cpuKernelImpl:WX,dtype:"bool"}),HY={kernelName:Cl,backendName:"webgl",kernelFunc:GY},jY="return float(a >= b);",qY=`
  return vec4(greaterThanEqual(a, b));
`,KY=an({opSnippet:jY,packedOpSnippet:qY,dtype:"bool",cpuKernelImpl:VX}),XY={kernelName:Ii,backendName:"webgl",kernelFunc:KY};function ZY(e){let{inputs:t,backend:n}=e,{input:r}=t;return mT(r,!0,n)}var JY={kernelName:tc,backendName:"webgl",kernelFunc:ZY},YY="return float(!isnan(x) && !isinf(x));",QY=Ke({opSnippet:YY,dtype:"bool"}),eQ={kernelName:Ni,backendName:"webgl",kernelFunc:QY},tQ="return float(isinf(x));",nQ=Ke({opSnippet:tQ,dtype:"bool"}),rQ={kernelName:Ti,backendName:"webgl",kernelFunc:nQ},aQ="return float(isnan(x));",sQ=Ke({opSnippet:aQ,dtype:"bool"}),iQ={kernelName:Ci,backendName:"webgl",kernelFunc:sQ},oQ="return float(a < b);",lQ=`
  return vec4(lessThan(a, b));
`,uQ=an({opSnippet:oQ,packedOpSnippet:lQ,cpuKernelImpl:UX,dtype:"bool"}),pQ={kernelName:_l,backendName:"webgl",kernelFunc:uQ},dQ="return float(a <= b);",hQ=`
  return vec4(lessThanEqual(a, b));
`,cQ=an({opSnippet:dQ,packedOpSnippet:hQ,cpuKernelImpl:GX,dtype:"bool"}),mQ={kernelName:El,backendName:"webgl",kernelFunc:cQ};function fQ(e){let{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=HX(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}var gQ={kernelName:$l,backendName:"webgl",kernelFunc:fQ},yQ=Tu+`
  return x < 0.0 ? 0./0. : log(x);
`,bQ=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,xQ=Ke({opSnippet:yQ,packedOpSnippet:bQ,cpuKernelImpl:jX}),vQ={kernelName:Ei,backendName:"webgl",kernelFunc:xQ},wQ=Tu+`
  return log(1.0 + x);
`,kQ=Ke({opSnippet:wQ}),IQ={kernelName:$i,backendName:"webgl",kernelFunc:kQ},SQ="return float(a >= 1.0 && b >= 1.0);",NQ=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,TQ=an({opSnippet:SQ,packedOpSnippet:NQ,dtype:"bool"}),CQ={kernelName:Al,backendName:"webgl",kernelFunc:TQ},_Q="return float(!(x >= 1.0));",EQ=Ke({opSnippet:_Q}),$Q={kernelName:Fl,backendName:"webgl",kernelFunc:EQ},AQ="return float(a >= 1.0 || b >= 1.0);",FQ=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,RQ=an({opSnippet:AQ,packedOpSnippet:FQ,dtype:"bool"}),DQ={kernelName:Rl,backendName:"webgl",kernelFunc:RQ},MQ=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${u})`:a===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${s}; j <= ${s}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${o};
        setOutput(val);
      }
    `}},OQ=class{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,u=`float(${n}) + float(${r}) * sum`;a===.5?o=`inversesqrt(${u})`:a===1?o=`1.0/(${u})`:o=`exp(log(${u}) * float(-${a}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${s};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${s}; j <= ${s}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${o};
        setOutput(result);
      }
    `}},LQ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,p=H().getBool("WEBGL_PACK_NORMALIZATION")?new OQ(a.shape,s,i,o,u):new MQ(a.shape,s,i,o,u);return n.runWebGLProgram(p,[a],a.dtype)},zQ={kernelName:Ai,backendName:"webgl",kernelFunc:LQ},PQ=class{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${n});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${a})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${a});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}},BQ=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:p,beta:l}=r,d=new PQ(a.shape,o,u,p,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)},WQ={kernelName:Dl,backendName:"webgl",kernelFunc:BQ};function VQ(e,t,n,r){let a=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/a,i=ue({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=So(i,e.dtype,"max",r),u=ue({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}function gT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=v.parseAxisParam(s,a.shape),p=u,l=N.getAxesPermutation(p,o),d=l!=null,h=n.shouldExecuteOnCPU([a]),c=a;if(d){if(h){let b=n.texData.get(c.dataId).values,x=new Array(o);for(let T=0;T<x.length;T++)x[T]=a.shape[l[T]];let w=Ax(b,a.shape,a.dtype,l,x);c=n.makeTensorInfo(x,a.dtype);let I=n.texData.get(c.dataId);I.values=w}else c=hm(a,l,n);p=N.getInnerMostAxes(p.length,o)}N.assertAxesAreInnerMostDims("max",p,o);let[m,f]=N.computeOutAndReduceShapes(c.shape,p),g=m;i&&(g=N.expandShapeToKeepDim(m,u));let y;if(h){let b=n.texData.get(c.dataId).values,x=qX(b,v.sizeFromShape(f),g,a.dtype);y=n.makeTensorInfo(g,a.dtype);let w=n.texData.get(y.dataId);w.values=x}else y=VQ(c,f,g,n);return d&&n.disposeIntermediateTensorInfo(c),y}var UQ={kernelName:Fi,backendName:"webgl",kernelFunc:gT},GQ=Fx+`
  return max(a, b);
`,HQ=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Io+`
  return result;
`,jQ=an({opSnippet:GQ,packedOpSnippet:HQ,cpuKernelImpl:KX}),qQ={kernelName:Ri,backendName:"webgl",kernelFunc:jQ};function KQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;vu(a,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r,p=1;v.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,p,o,u);if(l.filterWidth===1&&l.filterHeight===1&&v.arraysEqual(l.inShape,l.outShape))return qn({inputs:{x:a},backend:n});let d=new mp(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}var XQ={kernelName:Di,backendName:"webgl",kernelFunc:KQ};function ZQ(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:p}=r,l=[1,1,1],d=N.computePool3DInfo(a.shape,s,i,l,o,p,u),h=new Dx(d,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}var JQ={kernelName:Ml,backendName:"webgl",kernelFunc:ZQ},YQ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${o});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${a};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${n}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${s} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}},QQ=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,p=e.effectiveFilterWidth,l=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=p-1-e.padInfo.left,c=o*u*p-1;this.userCode=`
      const ivec3 pads = ivec3(${l}, ${d}, ${h});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${o};
           wD += ${a}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${s}) {
            float dyR = float(dyRCorner + wR) / ${n}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${c} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${p} +
                  wR * ${p} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}};function eee(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:p,dimRoundingMode:l}=r,d=[1,1,1],h=N.computePool3DInfo(i.shape,o,u,d,p,l),c=new Dx(h,"max",!0),m=n.runWebGLProgram(c,[i],i.dtype),f=new QQ(h),g=n.runWebGLProgram(f,[a,m],i.dtype);return n.disposeIntermediateTensorInfo(m),g}var tee={kernelName:Cp,backendName:"webgl",kernelFunc:eee};function nee(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;vu([s,i],"maxPoolGrad");let{filterSize:u,strides:p,pad:l,dimRoundingMode:d}=r,h=N.computePool2DInfo(o.shape,u,p,1,l,d),c=!0,m=new mp(h,"max",c),f=n.runWebGLProgram(m,[o],o.dtype),g=new YQ(h),y=n.runWebGLProgram(g,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),y}var ree={kernelName:Tp,backendName:"webgl",kernelFunc:nee};function aee(e,t,n,r){let a=new mp(n,"max",!1),s=r.runWebGLProgram(a,[e],"float32");a=new mp(n,"max",!0,!0,t);let i=r.runWebGLProgram(a,[e],"float32");return[s,i]}var see={kernelName:_p,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;v.assert(r.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);let p=[1,1];v.assert(N.eitherStridesOrDilationsAreOne(s,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${p}'`);let l=N.computePool2DInfo(r.shape,a,s,p,i),[d,h]=aee(r,o,l,u);return[d,h]}};function iee(e,t,n,r){let a=v.sizeFromShape(t),s=v.sizeFromShape(e.shape)/a,i=ue({inputs:{x:e},attrs:{shape:[s,a]},backend:r}),o=So(i,"float32","mean",r),u=ue({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),u}var oee={kernelName:Mi,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=v.parseAxisParam(s,r.shape),p=u,l=N.getAxesPermutation(p,o),d=l!=null,h=i.shouldExecuteOnCPU([r]),c=[],m=r;if(d){if(h){let x=i.texData.get(m.dataId).values,w=new Array(o);for(let C=0;C<w.length;C++)w[C]=r.shape[l[C]];let I=Ax(x,r.shape,r.dtype,l,w);m=i.makeTensorInfo(w,r.dtype);let T=i.texData.get(m.dataId);T.values=I}else m=hm(r,l,i);c.push(m),p=N.getInnerMostAxes(p.length,o)}N.assertAxesAreInnerMostDims("sum",p,o);let[f,g]=N.computeOutAndReduceShapes(m.shape,p),y=f;a&&(y=N.expandShapeToKeepDim(f,u));let b=iee(m,g,y,i);for(let x of c)i.disposeIntermediateTensorInfo(x);return b}};function lee(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=v.parseAxisParam(s,a.shape),p=u,l=N.getAxesPermutation(p,o),d=a;l!=null&&(d=yn({inputs:{x:a},backend:n,attrs:{perm:l}}),p=N.getInnerMostAxes(p.length,a.shape.length)),N.assertAxesAreInnerMostDims("min",p,o);let[h,c]=N.computeOutAndReduceShapes(d.shape,p),m=v.sizeFromShape(c),f=ue({inputs:{x:d},backend:n,attrs:{shape:[-1,m]}}),g=So(f,f.dtype,"min",n),y;if(i){let b=N.expandShapeToKeepDim(h,u);y=ue({inputs:{x:g},backend:n,attrs:{shape:b}})}else y=ue({inputs:{x:g},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),l!=null&&n.disposeIntermediateTensorInfo(d),y}var uee={kernelName:Oi,backendName:"webgl",kernelFunc:lee},pee=Fx+`
  return min(a, b);
`,dee=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Io+`
  return result;
`,hee=an({opSnippet:pee,packedOpSnippet:dee,cpuKernelImpl:XX}),cee={kernelName:Li,backendName:"webgl",kernelFunc:hee},mee=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((p,l)=>p[0]+e[l]+p[1]);let r=e.length,a=it(r),s=t.map(p=>p[0]).join(","),i=t.map((p,l)=>p[0]+e[l]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=n==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${a} coords = outC - start;
        setOutput(getX(${o}));
      }
    `}},fee=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((c,m)=>c[0]+e[m]+c[1]);let r=e.length,a=it(r),s=t.map(c=>c[0]).join(","),i=t.map((c,m)=>c[0]+e[m]).join(","),o=hn("rc",r),u=hn("source",r),p=`${o[r-1]} < ${this.outputShape[r-1]}`,l=r===1?"source":`vec2(${u.slice(-2).join()})`,d=n==="reflect"?0:1,h="";if(r===1){let c=`
        ${a} source = rc;
        if (source < start) {
          source = start * 2 - source - ${d};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${d};
        }
        source -= start;
      `;h=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${o[r-1]} += 1;
        if(${p}) {
          ${c}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
      `}else{let c=`
        ${a} source = rc;
        ${a} lt = ${a}(lessThan(source, start));
        ${a} gte = ${a}(greaterThanEqual(source, end));
        ${a} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${d}) +
                gte * ((end - 1) * 2 - source + ${d});
        source -= start;
      `;h=`
        ${a} rc = outputLoc;
        ${c}
        result[0] = getChannel(getX(${u.join()}), ${l});
        ${o[r-1]} += 1;
        if(${p}) {
          ${c}
          result[1] = getChannel(getX(${u.join()}), ${l});
        }
        rc = outputLoc;
        ${o[r-2]} += 1;
        if(${o[r-2]} < ${this.outputShape[r-2]}) {
          ${c}
          result[2] = getChannel(getX(${u.join()}), ${l});
          ${o[r-1]} += 1;
          if(${p}) {
            ${c}
            result[3] = getChannel(getX(${u.join()}), ${l});
          }
        }
      `}this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${h}
        setOutput(result);
      }
    `}},gee=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{paddings:a,mode:s}=n,i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new fee(r.shape,a,s):new mee(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)},yee={kernelName:zi,backendName:"webgl",kernelFunc:gee},bee=`if (b == 0.0) return NAN;
  return mod(a, b);`,xee=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Io+`
  return result;
`,vee=an({opSnippet:bee,packedOpSnippet:xee}),wee={kernelName:Pi,backendName:"webgl",kernelFunc:vee},kee=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}},Iee=`
if (a == b) {
  return 1.0;
};
return a / b;`,See=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,yT=an({opSnippet:Iee,packedOpSnippet:See,checkOutOfBounds:!0}),Nee={kernelName:fi,backendName:"webgl",kernelFunc:yT},e0="return a - b;",bT=an({opSnippet:e0,packedOpSnippet:e0,supportsComplex:!0,cpuKernelImpl:g7}),Tee={kernelName:po,backendName:"webgl",kernelFunc:bT};function xT(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=v.parseAxisParam([s],a.shape),o=gT({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=N.expandShapeToKeepDim(o.shape,i),p=ue({inputs:{x:o},backend:n,attrs:{shape:u}}),l=bT({inputs:{a,b:p},backend:n}),d=cT({inputs:{x:l},backend:n}),h=cm({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),c=ue({inputs:{x:h},backend:n,attrs:{shape:u}}),m=yT({inputs:{a:d,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(c),m}var Cee={kernelName:lo,backendName:"webgl",kernelFunc:xT};function _ee(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:xT({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),p=u.shape[0],l=u.shape[1],d=new kee(p,l,s),h=[[i]],c=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),c}var Eee={kernelName:Ol,backendName:"webgl",kernelFunc:_ee},$ee=xr+`
  return -x;
`,Aee=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Fee(e){let{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){let s=n.texData.get(r.dataId),[i,o]=JX(s.values,r.shape,r.dtype);return n.makeTensorInfo(o,r.dtype,i)}let a;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new Aa(r.shape,Aee):a=new Pr(r.shape,$ee),n.runWebGLProgram(a,[r],r.dtype)}var Ree={kernelName:Ll,backendName:"webgl",kernelFunc:Fee},Dee=Xr.nonMaxSuppressionV3Impl;function Mee(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,p=n.readSync(a.dataId),l=n.readSync(s.dataId),{selectedIndices:d}=Dee(p,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}var Oee={kernelName:Pl,backendName:"webgl",kernelFunc:Mee},Lee=Xr.nonMaxSuppressionV4Impl;function zee(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:p}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:c}=Lee(l,d,i,o,u,p);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var Pee={kernelName:Bl,backendName:"webgl",kernelFunc:zee},Bee=Xr.nonMaxSuppressionV5Impl;function Wee(e){N.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:p}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,c=o,m=u,f=p,{selectedIndices:g,selectedScores:y}=Bee(l,d,h,c,m,f);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var Vee={kernelName:Wl,backendName:"webgl",kernelFunc:Wee},Uee=class{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${n}),
                      float(index == coords.y)));
      }
    `}},Gee=e=>{let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:u}=r,p=v.sizeFromShape(a.shape),l=new Uee(p,i,o,u),d=ue({inputs:{x:a},backend:n,attrs:{shape:[p]}}),h=n.runWebGLProgram(l,[d],s);n.disposeIntermediateTensorInfo(d);let c=[...a.shape,i],m=ue({inputs:{x:h},backend:n,attrs:{shape:c}});return n.disposeIntermediateTensorInfo(h),m},Hee={kernelName:Wi,backendName:"webgl",kernelFunc:Gee};function Ph(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="complex64"){let a=xd({inputs:{input:r},backend:n}),s=Ph({inputs:{x:a},backend:n}),i=mm({inputs:{input:r},backend:n}),o=Ph({inputs:{x:i},backend:n}),u=as({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return vd({attrs:{shape:r.shape,dtype:r.dtype,value:r.dtype==="string"?"":0},backend:n})}var jee={kernelName:iu,backendName:"webgl",kernelFunc:Ph};function vT(e){let{inputs:t,backend:n}=e,{x:r}=t;if(r.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(r.dtype==="complex64"){let a=xd({inputs:{input:r},backend:n}),s=vT({inputs:{x:a},backend:n}),i=mm({inputs:{input:r},backend:n}),o=Ph({inputs:{x:i},backend:n}),u=as({inputs:{real:s,imag:o},backend:n});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}else return vd({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:n})}var qee={kernelName:Vl,backendName:"webgl",kernelFunc:vT};function Kee(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Lf({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{v.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Lf({inputs:{input:l},backend:n,attrs:{dim:a}});return o.push(d),d}),p=sT({inputs:u,backend:n,attrs:{axis:a}});return o.forEach(l=>n.disposeIntermediateTensorInfo(l)),p}var Xee={kernelName:Ul,backendName:"webgl",kernelFunc:Kee},Zee=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,p)=>u[0]+e[p]+u[1]);let r=e.length,a=it(r),s=t.map(u=>u[0]).join(","),i=t.map((u,p)=>u[0]+e[p]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${s};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${a} start = ${a}(${s});
      ${a} end = ${a}(${i});

      void main() {
        ${a} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${a} coords = outC - start;
          setOutput(getX(${o}));
        }
      }
    `}},Jee=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,f)=>m[0]+e[f]+m[1]);let r=e.length,a=it(r),s=t.map(m=>m[0]).join(","),i=t.map((m,f)=>m[0]+e[f]).join(","),o=hn("rc",r),u=hn("source",r),p=`${o[r-1]} < ${this.outputShape[r-1]}`,l=r===1?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;
       if(${p}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${o[r-2]} += 1;
       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${o[r-1]} += 1;
         if(${p}) {`],h=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let m=0,f=r===1?2:4;m<f;m++)c+=`
        ${d[m]}
        if (${h}) {
          result[${m}] = float(value);
        } else {
          ${a} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${l});
        }
      `;c+=r===1?"} ":"}}",this.userCode=`
      const ${a} start = ${a}(${s});
      const ${a} end = ${a}(${i});

      void main() {
        ${a} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${c}
        setOutput(result);
      }
    `}},wT=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(v.sizeFromShape(a.shape)===0){let p=s.map((l,d)=>l[0]+a.shape[d]+l[1]);return vd({backend:n,attrs:{shape:p,value:i,dtype:a.dtype}})}let o=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jee(a.shape,s,i):new Zee(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},Yee={kernelName:Vi,backendName:"webgl",kernelFunc:wT},Qee=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,ete=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Io+`
  return result;
`,tte=an({opSnippet:Qee,packedOpSnippet:ete}),nte={kernelName:Ui,backendName:"webgl",kernelFunc:tte};function rte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],p=v.parseAxisParam(s,a.shape),l=p,d=N.getAxesPermutation(l,o),h=a;d!=null&&(h=yn({inputs:{x:a},backend:n,attrs:{perm:d}}),l=N.getInnerMostAxes(l.length,o),u.push(h)),N.assertAxesAreInnerMostDims("prod",l,o);let c;if(n.shouldExecuteOnCPU([h])){let m=n.texData.get(h.dataId).values,{outVals:f,outShape:g,outDtype:y}=QX(h.shape,h.dtype,m,l);c=n.makeTensorInfo(g,y,f)}else{let[m,f]=N.computeOutAndReduceShapes(h.shape,l),g=v.sizeFromShape(f),y=ue({inputs:{x:h},backend:n,attrs:{shape:[-1,g]}}),b=lc(a.dtype),x=So(y,b,"prod",n);c=ue({inputs:{x},backend:n,attrs:{shape:m}}),u.push(y),u.push(x)}if(i){u.push(c);let m=N.expandShapeToKeepDim(c.shape,p);c=ue({inputs:{x:c},backend:n,attrs:{shape:m}})}return u.forEach(m=>n.disposeIntermediateTensorInfo(m)),c}var ate={kernelName:Hi,backendName:"webgl",kernelFunc:rte};function ste(e){let{inputs:t,backend:n,attrs:r}=e,{paramsNestedSplits:a,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=r,u=a.map(y=>n.readSync(y.dataId)),p=a.map(y=>y.shape),l=n.readSync(s.dataId),d=n.readSync(i.dataId),[h,c,m]=e7(u,p,l,s.shape,s.dtype,d,i.shape,o),f=h.map(y=>n.makeTensorInfo([y.length],"int32",y)),g=n.makeTensorInfo(m,s.dtype,c);return f.concat([g])}var ite={kernelName:rc,backendName:"webgl",kernelFunc:ste};function ote(e){let{inputs:t,backend:n}=e,{starts:r,limits:a,deltas:s}=t,i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[p,l]=t7(i,r.shape,r.dtype,o,a.shape,u,s.shape),d=n.makeTensorInfo([p.length],"int32",p),h=n.makeTensorInfo([l.length],r.dtype,l);return[d,h]}var lte={kernelName:ac,backendName:"webgl",kernelFunc:ote};function ute(e){let{inputs:t,backend:n,attrs:r}=e,{shape:a,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:u}=r,p=n.readSync(a.dataId),l=n.readSync(s.dataId),d=n.readSync(i.dataId),h=o.map(g=>n.readSync(g.dataId)),c=o.map(g=>g.shape),[m,f]=n7(p,a.shape,l,s.shape,s.dtype,d,i.shape,h,c,u);return n.makeTensorInfo(m,s.dtype,f)}var pte={kernelName:sc,backendName:"webgl",kernelFunc:ute},kT=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=r7(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},dte={kernelName:Ep,backendName:"webgl",kernelFunc:kT},hte="return 1.0 / x;",cte=Ke({opSnippet:hte}),mte={kernelName:ji,backendName:"webgl",kernelFunc:cte},fte=xr+`
  return (x < 0.0) ? 0.0 : x;
`,gte=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,yte=Ke({opSnippet:fte,packedOpSnippet:gte}),bte={kernelName:qi,backendName:"webgl",kernelFunc:yte},xte=xr+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,vte=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,wte=Ke({opSnippet:xte,packedOpSnippet:vte}),kte={kernelName:Zi,backendName:"webgl",kernelFunc:wte},Ite=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,n,u];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;a?d="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":d="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/l[0]},
          ${p[1]/l[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}},Ste=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,n,u];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d;a?d="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":d="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/l[0]},
          ${p[1]/l[1]},
          ${p[1]/l[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${d};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}};function Nte(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,p]=o,l=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ste(a.shape,u,p,s,i):new Ite(a.shape,u,p,s,i);return n.runWebGLProgram(l,[a],"float32")}var Tte={kernelName:Xi,backendName:"webgl",kernelFunc:Nte},Cte=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],p=o[0]/u[0],l=o[1]/u[1],d=1/p,h=1/l,c=Math.ceil(d)*2+2,m=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function _te(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Cte(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Ete={kernelName:jl,backendName:"webgl",kernelFunc:_te},$te=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,n,u];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",h;a?h="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${p[0]/l[0]},
          ${p[1]/l[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}},Ate=class{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,u]=e;this.outputShape=[s,t,n,u];let p=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0",h;a?h="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${p[0]/l[0]},
          ${p[1]/l[1]},
          ${p[1]/l[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,
                                     ${o}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${n-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}};function Fte(e){let{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,p]=o,l=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Ate(a.shape,u,p,s,i):new $te(a.shape,u,p,s,i);return n.runWebGLProgram(l,[a],a.dtype)}var Rte={kernelName:Ki,backendName:"webgl",kernelFunc:Fte},Dte=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],p=o[0]/u[0],l=o[1]/u[1],d=1/p,h=1/l,c=Math.ceil(d)*2+2,m=Math.ceil(h)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${p});
        const float widthScale = float(${l});

        const float invHeightScale = float(${d});
        const float invWidthScale = float(${h});

        const int winHeight = int(${c});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${s}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${o[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${o[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${n} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${a}) - 1),
                ${n} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}};function Mte(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Dte(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var Ote={kernelName:Hl,backendName:"webgl",kernelFunc:Mte},Lte=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,n===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}let r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,a=e.map((i,o)=>r(o)).join(","),s=it(n);this.userCode=`
      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${a}));
      }
    `}},zte=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let r=hn("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=it(n);n===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${a}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${o(r.slice())};
          if(${a}){
            result.g = ${u(r.slice())};
          }
          if(${s}) {
            result.b = ${p(r.slice())};
            if(${a}) {
              result.a = ${l(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function o(c){return d(c)}function u(c){return c[n-1]="("+c[n-1]+" + 1)",d(c)}function p(c){return c[n-2]="("+c[n-2]+" + 1)",d(c)}function l(c){return c[n-1]="("+c[n-1]+" + 1)",c[n-2]="("+c[n-2]+" + 1)",d(c)}function d(c){let m=e.map((y,b)=>h(b,c)),f=m.join(","),g=m.slice(-2).join(",");return`getChannel(getX(${f}), vec2(${g}))`}function h(c,m){return t.indexOf(c)!==-1&&e[c]!==1?`${e[c]} - ${m[c]} - 1`:`${m[c]}`}}};function Pte(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=v.parseAxisParam(s,a.shape);if(i===0)return qn({inputs:{x:a},backend:n});let u=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new zte(a.shape,o):new Lte(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}var Bte={kernelName:Ji,backendName:"webgl",kernelFunc:Pte},Wte=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],r=e[2];this.outputShape=e;let a="";typeof t=="number"?a=`float outputValue = ${t.toFixed(2)};`:a=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${a}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}},Vte={kernelName:ou,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new Wte(r.shape,s),[p,l]=N.getImageCenter(i,r.shape[1],r.shape[2]),d=[[p,l,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,d)}},Ute=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Gte=Ke({opSnippet:Ute}),Hte={kernelName:Yi,backendName:"webgl",kernelFunc:Gte},jte="return inversesqrt(x);",qte=Ke({opSnippet:jte,cpuKernelImpl:a7}),Kte={kernelName:Qi,backendName:"webgl",kernelFunc:qte},Mx=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let u=it(a.length),p=it(s.length),l="";n===1?l="i":n===2&&(l="i, j");let d=`getIndices(${l})`,h="";r===1?h="i":r===2&&(h="i, coords[1]");let c=`getUpdates(${h})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides";this.userCode=`
        ${u} strides = ${u}(${a});

        void main() {
          ${p} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${g};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${c};
              found = true;
            }
          }
          setOutput(mix(${f}, sum, float(found)));
        }
      `}},Xte=class{constructor(e,t,n,r,a,s,i=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s;let u=it(a.length),p=it(s.length),l="";n===1?l="i":n===2&&(l="i, j");let d=`getIndices(${l})`,h="";r===1?h="i":r===2&&(h="i, coords[1]");let c=`getUpdates(${h})`,m="";o&&(m="coords[0], coords[1]");let f=`getDefaultValue(${m})`,g=t>1?"strides[j]":"strides",y=t>1?"strides[j + 1]":"strides";this.userCode=`
        ${u} strides = ${u}(${a});

        void main() {
          ${p} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${e}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${t}; j+=2) {
              ivec4 index = round(${d});
              flattenedIndex += index.xz * ${g};
              if (j + 1 < ${t}) {
                flattenedIndex += index.yw * ${y};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${c};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${f}, sum, found));
        }
      `}};function Zte(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:p,strides:l,outputSize:d}=N.calculateShapes(s,a,i),h=[d/p,p];if(d===0)return n.makeTensorInfo(i,a.dtype);let c=ue({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),m=ue({inputs:{x:s},backend:n,attrs:{shape:[u,p]}}),f=n.makeTensorInfo([],"float32",new Float32Array([0])),g;H().getBool("WEBGL_PACK")?g=new Xte(u,o,c.shape.length,m.shape.length,l,h):g=new Mx(u,o,c.shape.length,m.shape.length,l,h);let y=n.runWebGLProgram(g,[m,c,f],m.dtype),b=ue({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(f),b}var Jte={kernelName:ql,backendName:"webgl",kernelFunc:Zte},Yte=class{constructor(e,t,n,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let a="while (left < right) {",s=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=H().getNumber("WEBGL_VERSION")===2?a:s,o=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${o} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}};function Qte(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r,o=new Yte(a.shape[0],a.shape[1],s.shape[1],i),u=[[a.shape[1]]];return n.runWebGLProgram(o,[a,s],"int32",u)}var ene={kernelName:Xl,backendName:"webgl",kernelFunc:Qte},tne=class{constructor(e,t,n){this.variableNames=["c","a","b"],this.outputShape=t;let r,a;if(n>4)throw Error(`Where for rank ${n} is not yet supported`);if(n===1)a="resRC",r="resRC";else{let i=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],u=[];for(let p=0;p<t.length;p++)u.push(`${i[p]}`),p<e&&o.push(`${i[p]}`);r=o.join(),a=u.join()}let s=it(n);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${a}));
        } else {
          setOutput(getB(${a}));
        }
      }
    `}};function nne(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new tne(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],ar(a.dtype,s.dtype))}var rne={kernelName:Zl,backendName:"webgl",kernelFunc:nne},ane=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${N.SELU_SCALEALPHA};
  float scale = ${N.SELU_SCALE};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,sne=Ke({opSnippet:ane}),ine={kernelName:eo,backendName:"webgl",kernelFunc:sne},one=Tu+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,lne=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,une=Ke({opSnippet:one,packedOpSnippet:lne,cpuKernelImpl:i7}),pne={kernelName:ao,backendName:"webgl",kernelFunc:une},dne=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,hne=Ke({opSnippet:dne}),cne={kernelName:ro,backendName:"webgl",kernelFunc:hne},mne=Tu+`
  return sin(x);
`,fne=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Io}
  return result;
`,gne=Ke({opSnippet:mne,packedOpSnippet:fne}),yne={kernelName:to,backendName:"webgl",kernelFunc:gne},bne=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,xne=Ke({opSnippet:bne}),vne={kernelName:no,backendName:"webgl",kernelFunc:xne},wne=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,kne=Ke({opSnippet:wne}),Ine={kernelName:so,backendName:"webgl",kernelFunc:kne},Sne=e=>{let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;v.assert(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");let o=s.reduce((y,b)=>y*b),u=[[0,0]];u.push(...i);for(let y=1+s.length;y<a.shape.length;++y)u.push([0,0]);let p=[],l=wT({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=N.getReshaped(l.shape,s,o,!1),h=N.getPermuted(d.length,s.length,!1),c=N.getReshapedPermuted(l.shape,s,o,!1),m=ue({inputs:{x:l},backend:n,attrs:{shape:d}}),f=yn({inputs:{x:m},backend:n,attrs:{perm:h}}),g=ue({inputs:{x:f},backend:n,attrs:{shape:c}});return p.push(l),p.push(m),p.push(f),p.forEach(y=>n.disposeIntermediateTensorInfo(y)),g},Nne={kernelName:Yl,backendName:"webgl",kernelFunc:Sne};function Tne(e){let{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(s.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${s.shape}`);if(r.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${r.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);let o=n.readSync(r.dataId),u=n.readSync(a.dataId),p=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[d,h,c,m,f]=l7(o,r.shape,r.dtype,u,a.dtype,p,l);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,c),n.makeTensorInfo([m.length],"bool",new Uint8Array(m.map(g=>Number(g)))),n.makeTensorInfo([f.length],r.dtype,new Int32Array(f))]}var Cne={kernelName:$p,backendName:"webgl",kernelFunc:Tne};function _ne(e){let{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[p,l,d]=u7(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(l,r.dtype,p),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}var Ene={kernelName:eu,backendName:"webgl",kernelFunc:_ne};function $ne(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[p,l]=H2(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(l,r.dtype,p)}var Ane={kernelName:Ap,backendName:"webgl",kernelFunc:$ne};function Fne(e){let{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(s.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${s.shape}`);let i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[p,l]=H2(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(l,r.dtype,p)}var Rne={kernelName:Fp,backendName:"webgl",kernelFunc:Fne};function Dne(e){let{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:p,sliceSize:l,strides:d,outputSize:h}=N.calculateShapes(s,a,o),c=!1;if(s.dtype==="string"){let y=n.bufferSync(a),b=n.bufferSync(s),x=v.decodeString(n.readSync(i.dataId)[0]),w=s7(y,b,o,h,l,p,u,d,x,c);return n.makeTensorInfo(o,w.dtype,w.values)}let m=new Mx(p,u,a.shape.length,s.shape.length,d,[h,1],c),f=n.runWebGLProgram(m,[s,a,i],s.dtype),g=ue({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),g}var Mne={kernelName:tu,backendName:"webgl",kernelFunc:Dne};function One(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=v.parseAxisParam(i,a.shape)[0],u=N.prepareSplitSize(a,s,o),p=a.shape.length,l=new Array(p).fill(0),d=a.shape.slice();return u.map(h=>{let c=[...d];c[o]=h;let m=Cu({inputs:{x:a},backend:n,attrs:{begin:l,size:c}});return l[o]+=h,m})}var Lne={kernelName:Ql,backendName:"webgl",kernelFunc:One},t0="return sqrt(x);",zne=Ke({opSnippet:t0,packedOpSnippet:t0,cpuKernelImpl:p7}),Pne={kernelName:io,backendName:"webgl",kernelFunc:zne},Bne="return x * x;",Wne=Ke({opSnippet:Bne}),Vne={kernelName:Rp,backendName:"webgl",kernelFunc:Wne},n0="return (a - b) * (a - b);",Une=an({opSnippet:n0,packedOpSnippet:n0}),Gne={kernelName:uo,backendName:"webgl",kernelFunc:Une};function Hne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");let s=n.readSync(a.dataId),i=N.fromUint8ToStringArray(s),o=d7(i,"string",r);return n.makeTensorInfo(a.shape,"string",o)}var jne={kernelName:Dp,backendName:"webgl",kernelFunc:Hne};function qne({inputs:e,attrs:t,backend:n}){let{x:r}=e,a=xr+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,s=new Pr(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}var Kne={kernelName:Ja,backendName:"webgl",kernelFunc:qne},Xne=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let r=n.length,a=it(n.length),s=it(n.length),i="";if(r===1)i="coords * strides + begin";else{let o=0;i=n.map((u,p)=>(o++,n.length===1?`coords * strides[${p}] + begin[${p}]`:`coords[${o-1}] * strides[${p}] + begin[${p}]`)).join(",")}this.userCode=`
      ${a} begin = ${a}(${e});
      ${a} strides = ${a}(${t});

      void main() {
        ${s} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}};function Zne(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=zt.sliceInfo(a.shape,s,i,o,u,p,l,d,h),I;if(f)I=ue({inputs:{x:a},backend:n,attrs:{shape:m}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let C=zt.computeOutShape(b,x,w),E=Cu({inputs:{x:a},backend:n,attrs:{begin:b,size:C}});I=ue({inputs:{x:E},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(E)}else if(n.shouldExecuteOnCPU([a])){let C=n.readSync(a.dataId),E=Pe(a.shape,a.dtype,C),A=h7(c,E,w,b);I=n.makeTensorInfo(m,a.dtype,A.values)}else{let C=new Xne(b,w,c);I=n.runWebGLProgram(C,[a],a.dtype)}let T=ue({inputs:{x:I},backend:n,attrs:{shape:m}});return n.disposeIntermediateTensorInfo(I),T}var Jne={kernelName:nu,backendName:"webgl",kernelFunc:Zne};function Yne(e){let{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:p}=r,{data:l,dataSplits:d}=t,h=n.readSync(l.dataId),c=n.readSync(d.dataId),[m,f]=c7(h,c,a,s,i,o,u,p);return[n.makeTensorInfo([m.length],"string",m),n.makeTensorInfo(d.shape,"int32",f)]}var Qne={kernelName:Mp,backendName:"webgl",kernelFunc:Yne};function ere(e){let{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(s.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[p,l,d]=m7(o,u,a),h=l.length;return[n.makeTensorInfo([h,2],"int32",p),n.makeTensorInfo([h],"string",l),n.makeTensorInfo([2],"int32",new Int32Array(d))]}var tre={kernelName:Op,backendName:"webgl",kernelFunc:ere};function nre(e){let{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if(s.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=f7(i,a);return n.makeTensorInfo(s.shape,"int32",o)}var rre={kernelName:Lp,backendName:"webgl",kernelFunc:nre},are="return tan(x);",sre=Ke({opSnippet:are}),ire={kernelName:ho,backendName:"webgl",kernelFunc:sre},ore=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,lre=Ke({opSnippet:ore}),ure={kernelName:co,backendName:"webgl",kernelFunc:lre};function pre(e){let{inputs:t,backend:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=t,{sliceRank:o,numUpdates:u,sliceSize:p,strides:l,outputSize:d}=N.calculateShapes(i,s,a.shape),h=[d/p,p];if(d===0)return n.makeTensorInfo(a.shape,s.dtype);let c=ue({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),m=ue({inputs:{x:i},backend:n,attrs:{shape:[u,p]}}),f=ue({inputs:{x:a},backend:n,attrs:{shape:h}}),g=new Mx(u,o,c.shape.length,m.shape.length,l,h,!1,!0),y=n.runWebGLProgram(g,[m,c,f],f.dtype),b=ue({inputs:{x:y},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),b}var dre={kernelName:Kl,backendName:"webgl",kernelFunc:pre},hre=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;let r=it(this.rank),a=cre(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${a}));
      }
    `}};function cre(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let a=0;a<e.length;a++)r.push(`imod(${n[a]}, ${e[a]})`);return r.join()}function IT(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if(a.dtype==="string"||a.shape.length>5){let o=n.readSync(a.dataId),u=a.dtype==="string"?o.map(d=>v.decodeString(d)):o,p=Pe(a.shape,a.dtype,u),l=y7(p,s);return n.makeTensorInfo(l.shape,l.dtype,l.values)}let i=new hre(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}var mre={kernelName:Za,backendName:"webgl",kernelFunc:IT},fre=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}},gre=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}};function cs(e,t){t!==null&&e.disposeIntermediateTensorInfo(t)}function r0(e){let t=1;for(;t<e;)t*=2;return t}function yre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),p=a.shape,l=p[p.length-1];if(n.shouldExecuteOnCPU([a])||l<o||s>u){let A=n.readSync(a.dataId),[R,F]=b7(A,p,a.dtype,s,i);return[n.makeTensorInfo(R.shape,R.dtype,R.values),n.makeTensorInfo(F.shape,F.dtype,F.values)]}if(s===0)return p[p.length-1]=0,[n.makeTensorInfo(p,a.dtype,[]),n.makeTensorInfo(p,"int32",[])];if(l===1)return[a,vd({attrs:{shape:p,dtype:"int32",value:0},backend:n})];let d=n.texData.get(a.dataId),h=d!==null&&d.isPacked,c=h?n.unpackTensor(a):a,m=v.sizeFromShape(p)/l,f=ue({inputs:{x:c},attrs:{shape:[m,l]},backend:n});h&&cs(n,c);let g=r0(s),y=r0(l),b=null,x=()=>b===null?[f,f]:[f,b],w=(A,R,F)=>{let S=x(),M=new fre(F),B=[[l],[b===null?1:0],[Number.NEGATIVE_INFINITY],[A],[R]],U=b;b=n.runWebGLProgram(M,S,"int32",B),cs(n,U)};for(let A=1;A<g;A*=2){let R=A*2;for(let F=A;F>=1;F/=2)w(R,F,[m,y])}for(let A=y;A>g;A/=2){let R=x(),F=new gre([m,A/2]),S=[[l],[b===null?1:0],[g]],M=b;b=n.runWebGLProgram(F,R,"int32",S),cs(n,M);let B=g/2,U=B*2;for(let G=B;G>=1;G/=2)w(U,G,b.shape)}let I=b;b=Cu({inputs:{x:b},backend:n,attrs:{begin:0,size:[m,s]}}),cs(n,I);let T=fT({inputs:{x:f,indices:b},backend:n,attrs:{axis:1,batchDims:1}});cs(n,f);let C=p.slice(0,-1);C.push(s),I=b,b=ue({inputs:{x:b},attrs:{shape:C},backend:n}),cs(n,I);let E=T;return T=ue({inputs:{x:T},attrs:{shape:C},backend:n}),cs(n,E),[T,b]}var bre={kernelName:ru,backendName:"webgl",kernelFunc:yre},xre=class{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i=n==="nearest"?1:2,o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${o} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${o} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${a});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${a});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}};function vre(e){let{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:p}=r,[l,d,h,c]=a.shape,[m,f]=p!=null?p:[d,h],g=[l,m,f,c],y=new xre(d,h,i,o,u,g);return n.runWebGLProgram(y,[a,s],"float32")}var wre={kernelName:au,backendName:"webgl",kernelFunc:vre};function kre(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;vu(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:p}=x7(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([p.length],"int32",p)]}var Ire={kernelName:zp,backendName:"webgl",kernelFunc:kre};function Sre(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a,o=i.shape.length,u=a.shape[s],p=new Array(o-1),l=0;for(let f=0;f<o;f++)f!==s&&(p[l++]=i.shape[f]);let d=[],h=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let m=new Array(u);for(let f=0;f<m.length;f++){h[s]=f;let g=Cu({inputs:{x:i},backend:n,attrs:{begin:h,size:c}}),y=ue({inputs:{x:g},backend:n,attrs:{shape:p}});m[f]=y,d.push(g)}return d.forEach(f=>n.disposeIntermediateTensorInfo(f)),m}var Nre={kernelName:su,backendName:"webgl",kernelFunc:Sre},Tre=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];let o="0.0",u="sumValue",p=Math.floor(n/4)*4,l=n%4,d=`
        sumValue += dot(values, segFilter);
    `,h="";a%n>0&&(h=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return initializationValue;
        }
      `);let c="";a%n>0&&(c=`
        if (inIdx < 0 || inIdx >= ${a}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${o};

      float getValue(int batch, int inIdx) {
        ${h}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${c}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${s})) * float(${n}));
        int currentSeg = int(mod(float(outIdx), float(${s})));

        float sumValue = 0.0;

        for (int i = 0; i < ${p}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${d}
        }

        int inIdx = inOffset + ${p};
        if (${l===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${d}
        } else if (${l===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${d}
        } else if (${l===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${d}
        }
        setOutput(${u});
      }
    `}};function Cre(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[],p=0,l=N.getAxesPermutation([p],o),d=a;l!=null&&(d=yn({inputs:{x:a},backend:n,attrs:{perm:l}}),u.push(d),p=N.getInnerMostAxes(1,o)[0]);let h=N.segment_util.computeOutShape(d.shape,p,i),c=v.sizeFromShape([d.shape[p]]),m=ue({inputs:{x:d},backend:n,attrs:{shape:[-1,c]}});u.push(m);let f=lc(a.dtype),g=(w,I,T,C,E)=>{let A=w.shape[0],R=w.shape[1],F=N.segment_util.segOpComputeOptimalWindowSize(R,E),S={windowSize:F,inSize:R,batchSize:A,numSegments:E},M=new Tre(S,I),B=n.compileAndRun(M,[w,T],C);if(u.push(B),B.shape[1]===E)return B;let U=kT({backend:n,attrs:{start:0,stop:E,step:1,dtype:"float32"}}),G=IT({inputs:{x:U},backend:n,attrs:{reps:[R/F]}});return u.push(U),u.push(G),g(B,I,G,C,E)},y=g(m,"unsortedSegmentSum",s,f,i),b=ue({inputs:{x:y},backend:n,attrs:{shape:h}}),x=b;if(l!=null){u.push(b);let w=N.getUndoAxesPermutation(l);x=yn({inputs:{x},backend:n,attrs:{perm:w}})}return u.forEach(w=>n.disposeIntermediateTensorInfo(w)),x}var _re={kernelName:Pp,backendName:"webgl",kernelFunc:Cre},Ere=[hZ,mZ,yZ,vZ,kZ,NZ,CZ,EZ,RZ,MZ,zZ,WZ,GZ,KZ,JZ,QZ,tJ,sJ,oJ,uJ,cJ,vJ,kJ,TJ,_J,DJ,OJ,BJ,X7,UJ,KJ,YJ,a9,o9,u9,d9,c9,y9,v9,I9,N9,C9,E9,F9,D9,z9,B9,U9,j9,K9,Y9,nY,iY,uY,hY,cY,fY,yY,xY,wY,IY,CY,$Y,RY,MY,zY,WY,HY,XY,K7,JY,jJ,eQ,rQ,iQ,J7,pQ,mQ,gQ,vQ,IQ,CQ,$Q,DQ,zQ,WQ,UQ,qQ,XQ,JQ,tee,ree,see,oee,uee,cee,yee,wee,Eee,eZ,Ree,Oee,Pee,Vee,$J,Hee,qee,Xee,Yee,nte,Q7,ate,ite,lte,pte,dte,AJ,Nee,mte,bte,kte,nZ,Tte,Ete,Rte,Ote,Bte,Vte,Hte,Kte,Jte,ene,rne,ine,pne,cne,yne,vne,bJ,Cee,Ine,Nne,Cne,Ene,Ane,Rne,Mne,Lne,Pne,Vne,Gne,jne,Kne,Jne,Qne,tre,rre,Tee,uZ,ire,ure,dre,mre,bre,wre,pZ,Ire,Nre,_re,jee];for(let e of Ere)Bp(e);var Je;(function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"})(Je||(Je={}));var gp;(function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"})(gp||(gp={}));var ST;function $re(e){ST=e.wasm.cwrap(Es,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Are(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:u,transposeB:p,activation:l,leakyreluAlpha:d}=r,h=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(s.dataId).id,m=0;if(i!=null){let E=n.dataIdMap.get(i.dataId);if(E.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${E.shape.length}.`);m=E.id}let f=o==null?0:n.dataIdMap.get(o.dataId).id,g=gp[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);let y=u?a.shape[2]:a.shape[1],b=p?s.shape[1]:s.shape[2],x=lu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)),w=n.makeOutput([...x,y,b],a.dtype),I=n.dataIdMap.get(w.dataId).id,T=new Uint8Array(new Int32Array(a.shape).buffer),C=new Uint8Array(new Int32Array(s.shape).buffer);return ST(h,T,a.shape.length,c,C,s.shape.length,u,p,g,m,f,d||0,I),w}var Fre={kernelName:Es,backendName:"wasm",setupFunc:$re,kernelFunc:Are};function je(e,t){let n;function r(s){n=s.wasm.cwrap(e,null,["number","number","number"])}function a(s){let{backend:i,inputs:{x:o}}=s,u=i.dataIdMap.get(o.dataId).id,p=i.makeOutput(o.shape,t||o.dtype),l=i.dataIdMap.get(p.dataId).id;return v.sizeFromShape(p.shape)===0||n(u,Je[o.dtype],l),p}return{kernelName:e,backendName:"wasm",setupFunc:r,kernelFunc:a}}var Rre=je(il),Dre=je(Xs),Mre=je(Zs);function Dt(e,t,n){let r;function a(i){r=i.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])}function s(i){let{backend:o,inputs:u}=i,{a:p,b:l}=u,d=o.dataIdMap.get(p.dataId).id,h=o.dataIdMap.get(l.dataId).id,c=n!=null?n:p.dtype,m=N.assertAndGetBroadcastShape(p.shape,l.shape),f=o.makeOutput(m,c);if(v.sizeFromShape(m)===0)return f;let g=new Uint8Array(new Int32Array(p.shape).buffer),y=new Uint8Array(new Int32Array(l.shape).buffer),b=o.dataIdMap.get(f.dataId).id;return r(d,g,p.shape.length,h,y,l.shape.length,Je[p.dtype],b),f}return{kernelName:e,backendName:"wasm",setupFunc:a,kernelFunc:s}}var Ore=Dt(Ka),NT;function Lre(e){NT=e.wasm.cwrap(Js,null,["array","number","number","number"])}function zre(e){let{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(v.sizeFromShape(r.shape)===0)return r;let a=t.map(o=>n.dataIdMap.get(o.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return NT(s,a.length,Je[r.dtype],i),r}var Pre={kernelName:Js,backendName:"wasm",setupFunc:Lre,kernelFunc:zre};function fm(e){let{inputs:{x:t},backend:n}=e;if(t.dtype==="string")return mn(n.readSync(t.dataId),t.shape,t.dtype);let r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}var Bre={kernelName:Si,backendName:"wasm",kernelFunc:fm},TT;function Wre(e){TT=e.wasm.cwrap(oa,null,["number","array","number","number","number","array","number"])}function Ha(e){let{inputs:t,backend:n,attrs:r}=e,[a,s]=Ure(t.x.shape,r.perm),i=!0;for(let m=0;m<s.length;m++)s[m]!==m&&(i=!1);let o=Vre(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){let m=fm({inputs:t,backend:n});return m.shape=o,m}let p=n.makeOutput(o,u.dtype),l=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(p.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(u.shape).buffer);return TT(l,c,u.shape.length,Je[u.dtype],d,h,s.length),p}function Vre(e,t){let n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}function Ure(e,t){let n=[],r=[];for(let a=0;a<e.length;++a)e[a]!==1&&n.push(e[a]),e[t[a]]!==1&&r.push(t[a]);for(let a=0;a<r.length;++a){let s=-1;for(let i=0;i<r.length;++i)r[i]>=a&&(s===-1||r[s]>r[i])&&(s=i);r[s]=a}return[n,r]}var Gre={kernelName:oa,backendName:"wasm",kernelFunc:Ha,setupFunc:Wre};function ss(e,t,n){let r=e.shape,a=e.shape.length,s=v.parseAxisParam(t,r),i=s,o=N.getAxesPermutation(i,a),u=null,p=!1;if(o!=null){let l=new Array(a);for(let h=0;h<l.length;h++)l[h]=r[o[h]];i=N.getInnerMostAxes(i.length,a),u=Ha({inputs:{x:e},attrs:{perm:o},backend:n});let d=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==d&&(p=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:p}}var CT;function Hre(e){CT=e.wasm.cwrap(ol,null,["number, number, number"])}function jre(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:p,axes:l,originalAxes:d,inputWasTransposed:h}=ss(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;u=p,o=b}let c=u.shape.length;N.assertAxesAreInnerMostDims("all",l,c);let[m,f]=N.computeOutAndReduceShapes(u.shape,l),g=v.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(v.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;CT(o,g,b)}if(h&&t.disposeData(p.dataId),s){let b=N.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var qre={kernelName:ol,backendName:"wasm",setupFunc:Hre,kernelFunc:jre},_T;function Kre(e){_T=e.wasm.cwrap(ll,null,["number, number, number"])}function Xre(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:p,axes:l,originalAxes:d,inputWasTransposed:h}=ss(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;u=p,o=b}let c=u.shape.length;N.assertAxesAreInnerMostDims("any",l,c);let[m,f]=N.computeOutAndReduceShapes(u.shape,l),g=v.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(v.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;_T(o,g,b)}if(h&&t.disposeData(p.dataId),s){let b=N.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var Zre={kernelName:ll,backendName:"wasm",setupFunc:Kre,kernelFunc:Xre};function ET(e){let t;function n(a){t=a.wasm.cwrap(e,null,["number","number","number","number","number"])}function r(a){let{backend:s,inputs:i,attrs:o}=a,{axis:u}=o,{x:p}=i,l=s.dataIdMap.get(p.dataId).id,d=l,h=p,{transposed:c,axes:m,inputWasTransposed:f}=ss(p,u,s);if(f){let I=s.dataIdMap.get(c.dataId).id;I!==l&&(h=c,d=I)}let g=h.shape.slice(0,-1),y=s.makeOutput(g,"int32"),b=s.dataIdMap.get(y.dataId).id,x=v.sizeFromShape(y.shape),w=h.shape[m[0]];return t(d,Je[h.dtype],x,w,b),f&&s.disposeData(c.dataId),y}return{kernelName:e,backendName:"wasm",setupFunc:n,kernelFunc:r}}var Jre=ET(ul),Yre=ET(pl),Qre=je(Ys),eae=je(Qs),tae=je(ei),nae=Dt(ni),rae=je(ti),$T;function aae(e){$T=e.wasm.cwrap(ri,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function sae(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=n,l=N.computePool2DInfo(a.shape,i,o,1,u,p),d=l.filterHeight,h=l.filterWidth,c=l.padInfo.top,m=l.padInfo.right,f=l.padInfo.bottom,g=l.padInfo.left,y=l.strideHeight,b=l.strideWidth,x=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);let w=r.makeOutput(l.outShape,"float32"),I=r.dataIdMap.get(w.dataId).id;return $T(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,m,f,g,y,b,x,I),w}var iae={kernelName:ri,backendName:"wasm",setupFunc:aae,kernelFunc:sae},AT;function oae(e){AT=e.wasm.cwrap("AvgPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function lae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=r,l=N.computePool3DInfo(a.shape,s,i,1,o,u,p),d=n.makeOutput(l.outShape,a.dtype);return AT(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}var uae={kernelName:dl,backendName:"wasm",setupFunc:oae,kernelFunc:lae},FT;function pae(e){FT=e.wasm.cwrap("AvgPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function dae(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=r,l=N.computePool3DInfo(s.shape,i,o,1,u,p),d=n.makeOutput(s.shape,s.dtype);return FT(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left,l.filterDepth,l.filterHeight,l.filterWidth),d}var hae={kernelName:vp,backendName:"wasm",setupFunc:pae,kernelFunc:dae},RT;function cae(e){RT=e.wasm.cwrap("AvgPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mae(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u}=r,p=N.computePool2DInfo(s.shape,i,o,1,u),l=n.makeOutput(s.shape,s.dtype);return RT(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(l.dataId).id,p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.effectiveFilterHeight,p.effectiveFilterWidth,p.padInfo.top,p.padInfo.left,p.filterHeight,p.filterWidth),l}var fae={kernelName:xp,backendName:"wasm",setupFunc:cae,kernelFunc:mae};function $n(e){let{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=v.sizeFromShape(r.shape),i=v.inferFromImplicitShape(a,s);return v.assert(s===v.sizeFromShape(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}var gae={kernelName:Gl,backendName:"wasm",kernelFunc:$n},DT;function yae(e){DT=e.wasm.cwrap(ai,null,["number","array","number","number","array","number","number","number","number"])}function bae(e){let{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if(a.dtype!=="float32"||s.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let u=a.shape.length,p=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[p-1]:s.shape[p-2],h=i?a.shape[u-1]:a.shape[u-2],c=o?s.shape[p-2]:s.shape[p-1],m=a.shape.slice(0,-2),f=s.shape.slice(0,-2),g=v.sizeFromShape(m),y=v.sizeFromShape(f),b=lu.assertAndGetBroadcastShape(a.shape.slice(0,-2),s.shape.slice(0,-2)).concat([h,c]);v.assert(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);let x=i?[g,l,h]:[g,h,l],w=o?[y,c,d]:[y,d,c],I=$n({inputs:{x:a},backend:n,attrs:{shape:x}}),T=$n({inputs:{x:s},backend:n,attrs:{shape:w}}),C=n.dataIdMap.get(I.dataId).id,E=n.dataIdMap.get(T.dataId).id,A=i?I.shape[2]:I.shape[1],R=o?T.shape[1]:T.shape[2],F=Math.max(g,y),S=n.makeOutput([F,A,R],I.dtype),M=n.dataIdMap.get(S.dataId).id,B=new Uint8Array(new Int32Array(I.shape).buffer),U=new Uint8Array(new Int32Array(T.shape).buffer);return DT(C,B,I.shape.length,E,U,T.shape.length,i,o,M),n.disposeData(I.dataId),n.disposeData(T.dataId),S.shape=b,S}var xae={kernelName:ai,backendName:"wasm",setupFunc:yae,kernelFunc:bae};function qs(e){let{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=zt.parseSliceParams(t,n,r),o=zt.isSliceContinous(t.shape,s,i),u=a.readSync(t.dataId),p=a.makeOutput(i,t.dtype),l=v.computeStrides(t.shape),d=a.dataIdMap.get(p.dataId);if(o){let m=zt.computeFlatOffset(s,l);return t.dtype==="string"?d.stringBytes=u.slice(m,m+v.sizeFromShape(i)):a.typedArrayFromHeap(p).set(u.subarray(m,m+v.sizeFromShape(i))),p}if(t.dtype==="string"){let m=Rh(u,s,i,t.shape,t.dtype);return d.stringBytes=m,p}let h=a.typedArrayFromHeap(p),c=t.shape.length;if(c===2)vae(u,l[0],h,s,i);else if(c===3)wae(u,l[0],l[1],h,s,i);else if(c===4)kae(u,l[0],l[1],l[2],h,s,i);else{let m=Rh(u,s,i,t.shape,t.dtype);h.set(m)}return p}function vae(e,t,n,r,a){let s=0,i=r[0],o=r[1],u=i+a[0];for(let p=i;p<u;p++){let l=p*t+o;n.set(e.subarray(l,l+a[1]),s),s+=a[1]}}function wae(e,t,n,r,a,s){let i=0,o=a[0],u=a[1],p=a[2],l=o+s[0],d=u+s[1];for(let h=o;h<l;h++)for(let c=u;c<d;c++){let m=h*t+c*n+p;r.set(e.subarray(m,m+s[2]),i),i+=s[2]}}function kae(e,t,n,r,a,s,i){let o=0,u=s[0],p=s[1],l=s[2],d=u+i[0],h=p+i[1],c=l+i[2],m=s[3];for(let f=u;f<d;f++)for(let g=p;g<h;g++)for(let y=l;y<c;y++){let b=f*t+g*n+y*r+m;a.set(e.subarray(b,b+i[3]),o),o+=i[3]}}var Iae={kernelName:Jl,backendName:"wasm",kernelFunc:qs};function Sae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((y,b)=>y*b),u=N.getReshaped(a.shape,s,o),p=N.getPermuted(u.length,s.length),l=N.getReshapedPermuted(a.shape,s,o),d=N.getSliceBeginCoords(i,s.length),h=N.getSliceSize(l,i,s.length),c=$n({inputs:{x:a},backend:n,attrs:{shape:u}}),m=Ha({inputs:{x:c},backend:n,attrs:{perm:p}}),f=$n({inputs:{x:m},backend:n,attrs:{shape:l}}),g=qs({inputs:{x:f},backend:n,attrs:{begin:d,size:h}});return n.disposeData(c.dataId),n.disposeData(m.dataId),n.disposeData(c.dataId),g}var Nae={kernelName:hl,backendName:"wasm",kernelFunc:Sae},MT;function Tae(e){MT=e.wasm.cwrap(cl,null,["number","number","boolean","number","number","number"])}function Cae(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i}=r,o=s.shape.reduce((d,h)=>d*h,1)!==0,u=a.shape.length===1?[i]:[a.shape[0],i],p=t.makeOutput(u,s.dtype);function l(d){return t.dataIdMap.get(d.dataId).id}return MT(l(a),i,o,l(s),Je[s.dtype],l(p)),p}var _ae={kernelName:cl,backendName:"wasm",setupFunc:Tae,kernelFunc:Cae},Eae=Dt(ml);function $ae(e){let{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.typedArrayFromHeap(r),i=n.typedArrayFromHeap(a),o=N.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeOutput([o.length],"int32",void 0,new Int32Array(o))}var Aae={kernelName:wp,backendName:"wasm",kernelFunc:$ae};function is(e){let{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}var Fae={kernelName:si,backendName:"wasm",kernelFunc:is},Rae=je(ii),OT;function Dae(e){OT=e.wasm.cwrap(Xa,null,["number","number","number","number"])}function Mae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(u.dataId).id;return OT(o,s,i,p),u}var Oae={kernelName:Xa,backendName:"wasm",setupFunc:Dae,kernelFunc:Mae};function LT(e){let{inputs:t,backend:n}=e,r=v.parseAxisParam(e.attrs.axis,t[0].shape)[0],a=t.map(c=>c.shape);N.assertParamsConsistent(a,r);let s=N.computeOutShape(t.map(c=>c.shape),r),i=t.filter(c=>v.sizeFromShape(c.shape)>0);if(i.length===1)return fm({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(v.sizeFromShape(s)===0)return o;if(i[0].dtype==="string"){let c=i.map(x=>{let w=[-1,v.sizeFromShape(x.shape.slice(r))];return $n({inputs:{x},backend:n,attrs:{shape:w}})}),m=c.map(x=>({vals:n.readSync(x.dataId),shape:x.shape}));s=N.computeOutShape(c.map(x=>x.shape),1);let f=c[0].shape[0]===1,g=lx(m,s,t[0].dtype,f),y=N.computeOutShape(i.map(x=>x.shape),r);o.shape=y;let b=n.dataIdMap.get(o.dataId);return b.stringBytes=N.fromStringArrayToUint8(g),c.forEach(x=>n.disposeData(x.dataId)),o}let u=v.sizeFromShape(i[0].shape.slice(0,r)),p=0,l=i.map(c=>{let m=v.sizeFromShape(c.shape.slice(r));return p+=m,m}),d=i.map(c=>n.typedArrayFromHeap(c)),h=n.typedArrayFromHeap(o);for(let c=0;c<u;c++){let m=c*p;for(let f=0;f<d.length;f++){let g=l[f],y=c*g,b=d[f].subarray(y,y+g);h.set(b,m),m+=g}}return o}var Lae={kernelName:fl,backendName:"wasm",kernelFunc:LT},zT;function zae(e){zT=e.wasm.cwrap(oi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Pae(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:d,dataFormat:h}=n,c=N.convertConv2DDataFormat(h),m=N.computeConv2DInfo(a.shape,s.shape,u,p,l,d,!1,c),f=m.filterHeight,g=m.filterWidth,y=m.padInfo.top,b=m.padInfo.right,x=m.padInfo.bottom,w=m.padInfo.left,I=m.dilationHeight,T=m.dilationWidth,C=m.strideHeight,E=m.strideWidth,A=m.inChannels,R=m.outChannels,F=m.padInfo.type==="SAME"?1:0;if(m.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${m.dataFormat}'. Please use 'channelsLast'.`);let S=r.makeOutput(m.outShape,"float32"),M=r.dataIdMap.get(S.dataId).id;return zT(i,a.shape[0],a.shape[1],a.shape[2],o,f,g,y,b,x,w,F,I,T,C,E,A,R,M),S}var Bae={kernelName:oi,backendName:"wasm",setupFunc:zae,kernelFunc:Pae},PT;function Wae(e){PT=e.wasm.cwrap(li,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Vae(e){let{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:p,inputShape:l}=r,d=1,h=N.convertConv2DDataFormat(u),c=N.computeConv2DInfo(l,s.shape,i,d,o,p,!1,h),{batchSize:m,filterHeight:f,filterWidth:g,inChannels:y,inHeight:b,inWidth:x,outChannels:w,outHeight:I,outWidth:T,strideHeight:C,strideWidth:E}=c,A=f-1-c.padInfo.top,R=g-1-c.padInfo.left,F=c.dataFormat==="channelsLast",S=v.computeStrides(c.inShape),M=v.computeStrides(a.shape),[B,U,G]=v.computeStrides(s.shape),K=S[0],j=F?S[1]:S[2],X=F?S[2]:1,ee=F?1:S[1],Z=M[0],re=F?M[1]:M[2],te=F?M[2]:1,ae=F?1:M[1],ie=t.makeOutput(c.inShape,"float32"),ve=t.dataIdMap.get(ie.dataId).id,be=t.dataIdMap.get(a.dataId).id,de=t.dataIdMap.get(s.dataId).id;return PT(be,de,m,f,g,b,x,y,I,T,w,C,E,A,R,B,U,G,K,j,X,ee,Z,re,te,ae,ve),ie}var Uae={kernelName:li,backendName:"wasm",setupFunc:Wae,kernelFunc:Vae},BT;function Gae(e){BT=e.wasm.cwrap(ui,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Hae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;if(a.dtype!=="float32")throw new Error(`Tensor x must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=N.computeConv3DInfo(a.shape,s.shape,i,u,o),l=n.makeOutput(p.outShape,a.dtype);return BT(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(l.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),l}var jae={kernelName:ui,backendName:"wasm",setupFunc:Gae,kernelFunc:Hae},WT;function qae(e){WT=e.wasm.cwrap(gl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Kae(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=N.computeConv3DInfo(a.shape,u,i,1,o),l=n.makeOutput(p.filterShape,s.dtype);return WT(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(l.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),l}var Xae={kernelName:gl,backendName:"wasm",setupFunc:qae,kernelFunc:Kae},VT;function Zae(e){VT=e.wasm.cwrap(yl,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Jae(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;if(a.dtype!=="float32")throw new Error(`Tensor dy must have dtype float32, got ${a.dtype}`);if(s.dtype!=="float32")throw new Error(`Tensor filter must have dtype float32, got ${s.dtype}`);let p=N.computeConv3DInfo(u,s.shape,o,1,i),l=n.makeOutput(p.inShape,a.dtype);return VT(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(l.dataId).id,p.batchSize,p.inDepth,p.inHeight,p.inWidth,p.inChannels,p.outDepth,p.outHeight,p.outWidth,p.outChannels,p.strideDepth,p.strideHeight,p.strideWidth,p.dilationDepth,p.dilationHeight,p.dilationWidth,p.filterDepth,p.filterHeight,p.filterWidth,p.padInfo.front,p.padInfo.top,p.padInfo.left),l}var Yae={kernelName:yl,backendName:"wasm",setupFunc:Zae,kernelFunc:Jae},Qae=je(pi),ese=je(di),zf;(function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"})(zf||(zf={}));var UT;function tse(e){UT=e.wasm.cwrap(xl,null,["number","number","number","number","array","number","number","number","number","number"])}function nse(e){let{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:p}=n,l=u.shape[0],[d,h]=i,c=[l,d,h,o.shape[3]],m=t.dataIdMap.get(o.dataId),f;o.dtype!=="float32"&&(f=is({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));let g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(p.dataId).id,x=t.makeOutput(c,"float32"),w=t.dataIdMap.get(x.dataId).id,I=new Uint8Array(new Int32Array(o.shape).buffer);return UT(g,y,b,l,I,d,h,zf[a],s,w),f!=null&&t.disposeData(f.dataId),x}var rse={kernelName:xl,backendName:"wasm",setupFunc:tse,kernelFunc:nse},GT;function ase(e){GT=e.wasm.cwrap(bl,null,["number","number","number","number","number","number"])}function sse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;v.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumprod does not support ${a.dtype} tensors in the WASM backend`);let p=N.getAxesPermutation([s],u),l=a;p!==null&&(l=Ha({inputs:{x:a},attrs:{perm:p},backend:n}));let d=N.getInnerMostAxes(1,u)[0];N.assertAxesAreInnerMostDims("cumprod",[d],u);let h=n.makeOutput(l.shape,l.dtype),c=l.shape[d],m=n.dataIdMap.get(l.dataId).id,f=n.dataIdMap.get(h.dataId).id;GT(m,i?1:0,o?1:0,c,f,Je[a.dtype]);let g=h;if(p!==null){let y=N.getUndoAxesPermutation(p);g=Ha({inputs:{x:h},attrs:{perm:y},backend:n}),n.disposeData(l.dataId),n.disposeData(h.dataId)}return g}var ise={kernelName:bl,backendName:"wasm",setupFunc:ase,kernelFunc:sse},HT;function ose(e){HT=e.wasm.cwrap(hi,null,["number","number","number","number","number","number"])}function lse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;v.assert(a.dtype==="float32"||a.dtype==="int32",()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);let p=N.getAxesPermutation([s],u),l=a;p!==null&&(l=Ha({inputs:{x:a},attrs:{perm:p},backend:n}));let d=N.getInnerMostAxes(1,u)[0];N.assertAxesAreInnerMostDims("cumsum",[d],u);let h=n.makeOutput(l.shape,l.dtype),c=l.shape[d],m=n.dataIdMap.get(l.dataId).id,f=n.dataIdMap.get(h.dataId).id;HT(m,i?1:0,o?1:0,c,f,Je[a.dtype]);let g=h;if(p!==null){let y=N.getUndoAxesPermutation(p);g=Ha({inputs:{x:h},attrs:{perm:y},backend:n}),n.disposeData(l.dataId),n.disposeData(h.dataId)}return g}var use={kernelName:hi,backendName:"wasm",setupFunc:ose,kernelFunc:lse},jT;function pse(e){jT=e.wasm.cwrap("DenseBincount",null,["number","array","number","number","boolean","number","number","boolean","number"])}function dse(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,weights:s}=n,{size:i,binaryOutput:o}=r,u=s.shape.reduce((h,c)=>h*c,1)!==0,p=a.shape.length===1?[i]:[a.shape[0],i],l=t.makeOutput(p,s.dtype);function d(h){return t.dataIdMap.get(h.dataId).id}return jT(d(a),new Uint8Array(new Int32Array(a.shape).buffer),a.shape.length,i,u,d(s),Je[s.dtype],o,d(l)),l}var hse={kernelName:Ip,backendName:"wasm",setupFunc:pse,kernelFunc:dse},qT;function cse(e){qT=e.wasm.cwrap(vl,null,["number","number","number","array","number","array","array","number","number"])}function mse(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=i==="NHWC"?a.shape[1]:a.shape[2],p=i==="NHWC"?a.shape[2]:a.shape[3],l=i==="NHWC"?a.shape[3]:a.shape[1],d=u*s,h=p*s,c=l/(s*s),m=i==="NHWC"?[o,d,h,c]:[o,c,d,h],f=t.makeOutput(m,"float32"),g=t.dataIdMap.get(a.dataId).id,y=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(m).buffer),x=new Uint8Array(new Int32Array(v.computeStrides(m)).buffer),w=t.dataIdMap.get(f.dataId).id;return qT(g,s,i==="NHWC"?1:0,y,a.shape.length-1,b,x,m.length,w),f}var fse={kernelName:vl,backendName:"wasm",setupFunc:cse,kernelFunc:mse},KT;function gse(e){KT=e.wasm.cwrap(ci,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yse(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:p,pad:l,dimRoundingMode:d}=n,h=p==null?[1,1]:p,c=N.computeConv2DInfo(a.shape,s.shape,u,h,l,d,!0),m=c.filterHeight,f=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,w=c.dilationHeight,I=c.dilationWidth,T=c.strideHeight,C=c.strideWidth,E=c.inChannels,A=c.outChannels,R=c.padInfo.type==="SAME"?1:0;if(c.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let F=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(F.dataId).id;return KT(i,a.shape[0],a.shape[1],a.shape[2],o,m,f,g,y,b,x,R,w,I,T,C,E,A,S),F}var bse={kernelName:ci,backendName:"wasm",setupFunc:gse,kernelFunc:yse},XT;function xse(e){XT=e.wasm.cwrap("Diag",null,["number","number","number","number"])}function vse(e){let{inputs:t,backend:n}=e,{x:r}=t,a=v.sizeFromShape(r.shape),s=n.makeOutput([...r.shape,...r.shape],r.dtype);return XT(n.dataIdMap.get(r.dataId).id,Je[r.dtype],a,n.dataIdMap.get(s.dataId).id),s}var wse={kernelName:Sp,backendName:"wasm",setupFunc:xse,kernelFunc:vse},ZT;function kse(e){ZT=e.wasm.cwrap(mi,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ise(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;if(a.dtype!==s.dtype)throw new Error(`Dilation2D error: x must have the same dtype as filter. Got ${a.dtype} and ${s.dtype}`);let p=N.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u),l=n.makeOutput(p.outShape,a.dtype);return ZT(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(l.dataId).id,Je[a.dtype],p.batchSize,p.inChannels,p.inHeight,p.inWidth,p.outHeight,p.outWidth,p.strideHeight,p.strideWidth,p.dilationHeight,p.dilationWidth,p.filterHeight,p.filterWidth,p.padInfo.top,p.padInfo.left),l}var Sse={kernelName:mi,backendName:"wasm",setupFunc:kse,kernelFunc:Ise},JT;function Nse(e){JT=e.wasm.cwrap(Bo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Tse(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:u,dilations:p}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropFilter error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let l=N.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",p),d=n.makeOutput(s.shape,s.dtype);return JT(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,Je[a.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}var Cse={kernelName:Bo,backendName:"wasm",setupFunc:Nse,kernelFunc:Tse},YT;function _se(e){YT=e.wasm.cwrap(Po,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ese(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,dy:i}=t,{strides:o,pad:u,dilations:p}=r;if(a.dtype!==s.dtype||a.dtype!==i.dtype)throw new Error(`Dilation2DBackpropInput error: x must have the same dtype as filter and dy. Got ${a.dtype}, ${s.dtype}, and ${i.dtype}`);let l=N.computeDilation2DInfo(a.shape,s.shape,o,u,"NHWC",p),d=n.makeOutput(a.shape,a.dtype);return YT(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,Je[a.dtype],l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.filterHeight,l.filterWidth,l.padInfo.top,l.padInfo.left),d}var $se={kernelName:Po,backendName:"wasm",setupFunc:_se,kernelFunc:Ese},Ase=je(gi),QT;function Fse(e){QT=e.wasm.cwrap(wl,null,["number","number","number"])}function Rse(e){let{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=n.makeOutput(a.shape,"float32"),i=o=>n.dataIdMap.get(o.dataId).id;return QT(i(a),i(r),i(s)),s}var Dse={kernelName:wl,backendName:"wasm",setupFunc:Fse,kernelFunc:Rse},Mse=!1,Ose=Dt(kl,Mse,"bool"),Lse=je(yi),zse=je(bi,"float32");function Pf(e){let{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice(),u=s;return s<0&&(v.assert(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),$n({inputs:{x:a},backend:r,attrs:{shape:o}})}var Pse={kernelName:Il,backendName:"wasm",kernelFunc:Pf},Bse=je(xi,"float32");function eC(e){let{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}var Wse={kernelName:Np,backendName:"wasm",kernelFunc:eC},tC;function Vse(e){tC=e.wasm.cwrap(Sl,null,["number","number","number","number","number","number"])}function Use(e){let{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,p,l]=r.shape;return tC(s,o,u,p,l,i),a}var Gse={kernelName:Sl,backendName:"wasm",kernelFunc:Use,setupFunc:Vse},Hse=je(vi),jse=Dt(wi),nC;function qse(e){nC=e.wasm.cwrap(ki,null,["number","number","number","number","number","number","number"])}function Kse(e){let{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:p}=n,l=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,c=u!=null?t.dataIdMap.get(u.dataId).id:0,m=p!=null?t.dataIdMap.get(p.dataId).id:0,f=t.makeOutput(s.shape,s.dtype);if(v.sizeFromShape(s.shape)===0)return f;let g=t.dataIdMap.get(f.dataId).id;return nC(l,d,h,c,m,a,g),f}var Xse={kernelName:ki,backendName:"wasm",setupFunc:qse,kernelFunc:Kse},rC;function Zse(e){rC=e.wasm.cwrap($s,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Jse(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dilations:l,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=n,f=N.computeConv2DInfo(a.shape,s.shape,u,l,p,h),g=gp[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,w=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);w=te.id}let I=f.filterHeight,T=f.filterWidth,C=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,M=f.strideHeight,B=f.strideWidth,U=f.inChannels,G=f.padInfo.type==="SAME"?1:0,K=f.batchSize,j=f.inHeight,X=f.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let ee=r.makeOutput(f.outShape,"float32"),Z=r.dataIdMap.get(ee.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return rC(y,K,j,X,b,I,T,w,C,E,A,R,G,F,S,M,B,U,x,g,re,m||0,Z),ee}var Yse={kernelName:$s,backendName:"wasm",setupFunc:Zse,kernelFunc:Jse},aC;function Qse(e){aC=e.wasm.cwrap(As,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function eie(e){let{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:p,dilations:l,dataFormat:d,dimRoundingMode:h,activation:c,leakyreluAlpha:m}=n,f=N.computeConv2DInfo(a.shape,s.shape,u,l,p,h,!0),g=gp[c];if(g==null)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=f.outChannels,w=0;if(i!=null){let te=r.dataIdMap.get(i.dataId);if(te.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${te.shape.length}.`);if(te.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${te.shape}) does not match the number of output channels (${x})`);w=te.id}let I=f.filterHeight,T=f.filterWidth,C=f.padInfo.top,E=f.padInfo.right,A=f.padInfo.bottom,R=f.padInfo.left,F=f.dilationHeight,S=f.dilationWidth,M=f.strideHeight,B=f.strideWidth,U=f.inChannels,G=f.padInfo.type==="SAME"?1:0,K=f.batchSize,j=f.inHeight,X=f.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);let ee=r.makeOutput(f.outShape,"float32"),Z=r.dataIdMap.get(ee.dataId).id,re=o==null?0:r.dataIdMap.get(o.dataId).id;return aC(y,K,j,X,b,I,T,w,C,E,A,R,G,F,S,M,B,U,x,g,re,m||0,Z),ee}var tie={kernelName:As,backendName:"wasm",setupFunc:Qse,kernelFunc:eie},sC;function nie(e){sC=e.wasm.cwrap(Tl,null,["number","number","number","number","number","number","array","number"])}function rie(e){let{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=wy.prepareAndValidate(r,a),p=t.makeOutput(s,r.dtype);if(i===0)return p;let l=a.shape,d=l[l.length-1],h=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(a.dataId).id,m=new Uint8Array(new Int32Array(u).buffer),f=t.dataIdMap.get(p.dataId).id;return sC(h,Je[r.dtype],c,i,d,o,m,f),p}var aie={kernelName:Tl,backendName:"wasm",setupFunc:nie,kernelFunc:rie},iC;function sie(e){iC=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function iie(e){let{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=v.parseAxisParam(i,a.shape)[0],p=t.readSync(s.dataId),l=a.shape[u];for(let C=0;C<p.length;++C){let E=p[C];v.assert(E<=l-1&&E>=0,()=>`GatherV2: the index value ${E} is not in [0, ${l-1}]`)}let d=N.segment_util.collectGatherOpShapeInfo(a,s,u,o),h=$n({inputs:{x:a},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),c=v.sizeFromShape(s.shape),m=$n({inputs:{x:s},attrs:{shape:[d.batchSize,c/d.batchSize]},backend:t}),f=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],g=t.makeOutput(f,a.dtype);if(v.sizeFromShape(a.shape)===0)return g;let y=h.shape.length-1,b=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(m.dataId).id,w=t.dataIdMap.get(g.dataId).id,I=new Uint8Array(new Int32Array(v.computeStrides(h.shape)).buffer),T=new Uint8Array(new Int32Array(v.computeStrides(f)).buffer);return iC(b,Je[a.dtype],I,y,x,d.batchSize,T,w),t.disposeData(h.dataId),t.disposeData(m.dataId),g.shape=d.outputShape,g}var oie={kernelName:Nl,backendName:"wasm",setupFunc:sie,kernelFunc:iie},lie=!1,uie=Dt(Cl,lie,"bool"),pie=!1,die=Dt(Ii,pie,"bool"),hie=je(Ni,"bool"),cie=je(Ti,"bool"),mie=je(Ci,"bool"),oC;function fie(e){oC=e.wasm.cwrap(_i,null,["number","number","number","number"])}function gie(e){let{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(v.sizeFromShape(t.shape)!==0){let i=r.dataIdMap.get(s.dataId).id;oC(a,Je[t.dtype],n,i)}return s}var yie={kernelName:_i,backendName:"wasm",setupFunc:fie,kernelFunc:gie},bie=!1,xie=Dt(_l,bie,"bool"),vie=!1,wie=Dt(El,vie,"bool"),lC;function kie(e){lC=e.wasm.cwrap($l,null,["number","number","number","number"])}function Iie(e){let{attrs:t,backend:n}=e,{start:r,stop:a,num:s}=t,i=Math.floor(s),o=n.makeOutput([i],"float32");return lC(n.dataIdMap.get(o.dataId).id,r,a,i),o}var Sie={kernelName:$l,backendName:"wasm",setupFunc:kie,kernelFunc:Iie},Nie=je(Ei),Tie=je($i),Cie=!1,_ie=Dt(Al,Cie,"bool"),Eie=je(Fl),$ie=!1,Aie=Dt(Rl,$ie,"bool"),Fie=!1,Rie=Dt(_0,Fie,"bool"),uC;function Die(e){uC=e.wasm.cwrap(Ai,null,["number","number","number","number","number","number","number"])}function Mie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;if(a.dtype!=="float32")throw new Error("LRN error: x must have dtype float32");let p=n.makeOutput(a.shape,a.dtype);return uC(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(p.dataId).id,a.shape[3],s,i,o,u),p}var Oie={kernelName:Ai,backendName:"wasm",setupFunc:Die,kernelFunc:Mie},pC;function Lie(e){pC=e.wasm.cwrap(Dl,null,["number","number","number","number","number","number","number","number","number"])}function zie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:p,beta:l}=r;if(a.dtype!=="float32"||s.dtype!=="float32"||i.dtype!=="float32")throw new Error("LRNGrad error: x, y, and dy must have dtype float32");let d=n.makeOutput(a.shape,a.dtype);return pC(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(i.dataId).id,n.dataIdMap.get(d.dataId).id,i.shape[3],o,u,p,l),d}var Pie={kernelName:Dl,backendName:"wasm",setupFunc:Lie,kernelFunc:zie},dC;function Bie(e){dC=e.wasm.cwrap(Fi,null,["number","number","number","number"])}function Wie(e){let{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=i,{transposed:p,axes:l,originalAxes:d,inputWasTransposed:h}=ss(i,a,t);if(h){let b=t.dataIdMap.get(p.dataId).id;u=p,o=b}let c=u.shape.length;N.assertAxesAreInnerMostDims("max",l,c);let[m,f]=N.computeOutAndReduceShapes(u.shape,l),g=v.sizeFromShape(f),y=t.makeOutput(m,i.dtype);if(v.sizeFromShape(u.shape)!==0){let b=t.dataIdMap.get(y.dataId).id;dC(o,Je[i.dtype],g,b)}if(h&&t.disposeData(p.dataId),s){let b=N.expandShapeToKeepDim(y.shape,d);y.shape=b}return y}var Vie={kernelName:Fi,backendName:"wasm",setupFunc:Bie,kernelFunc:Wie},Uie=Dt(Ri),hC;function Gie(e){hC=e.wasm.cwrap(Di,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Hie(e){let{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;v.assert(a.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);let{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=n,l=N.computePool2DInfo(a.shape,i,o,1,u,p),d=l.filterHeight,h=l.filterWidth,c=l.padInfo.top,m=l.padInfo.right,f=l.padInfo.bottom,g=l.padInfo.left,y=l.dilationHeight,b=l.dilationWidth,x=l.strideHeight,w=l.strideWidth,I=l.inChannels,T=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);let C=r.makeOutput(l.outShape,"float32"),E=r.dataIdMap.get(C.dataId).id;return hC(s,a.shape[0],a.shape[1],a.shape[2],d,h,c,m,f,g,y,b,x,w,I,T,E),C}var jie={kernelName:Di,backendName:"wasm",setupFunc:Gie,kernelFunc:Hie},cC;function qie(e){cC=e.wasm.cwrap("MaxPool3D",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Kie(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:p}=r,l=N.computePool3DInfo(a.shape,s,i,1,o,u,p),d=n.makeOutput(l.outShape,a.dtype);return cC(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}var Xie={kernelName:Ml,backendName:"wasm",setupFunc:qie,kernelFunc:Kie},mC;function Zie(e){mC=e.wasm.cwrap("MaxPool3DGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Jie(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=r,l=N.computePool3DInfo(s.shape,i,o,1,u,p),d=n.makeOutput(s.shape,s.dtype);return mC(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inDepth,l.inHeight,l.inWidth,l.outDepth,l.outHeight,l.outWidth,l.strideDepth,l.strideHeight,l.strideWidth,l.dilationDepth,l.dilationHeight,l.dilationWidth,l.effectiveFilterDepth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.front,l.padInfo.top,l.padInfo.left),d}var Yie={kernelName:Cp,backendName:"wasm",setupFunc:Zie,kernelFunc:Jie},fC;function Qie(e){fC=e.wasm.cwrap("MaxPoolGrad",null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function eoe(e){let{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:p}=r,l=N.computePool2DInfo(s.shape,i,o,1,u,p),d=n.makeOutput(s.shape,s.dtype);return fC(n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),d}var toe={kernelName:Tp,backendName:"wasm",setupFunc:Qie,kernelFunc:eoe},gC;function noe(e){gC=e.wasm.cwrap("MaxPoolWithArgmax",null,["number","number","number","number","boolean","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function roe(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,includeBatchInIndex:u}=r;v.assert(a.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`);let p=[1,1];v.assert(N.eitherStridesOrDilationsAreOne(i,p),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`);let l=N.computePool2DInfo(a.shape,s,i,[1,1],o),d=n.makeOutput(l.outShape,a.dtype),h=n.makeOutput(l.outShape,"int32");return gC(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(d.dataId).id,n.dataIdMap.get(h.dataId).id,Je[a.dtype],u,l.batchSize,l.inChannels,l.inHeight,l.inWidth,l.outHeight,l.outWidth,l.strideHeight,l.strideWidth,l.dilationHeight,l.dilationWidth,l.effectiveFilterHeight,l.effectiveFilterWidth,l.padInfo.top,l.padInfo.left),[d,h]}var aoe={kernelName:_p,backendName:"wasm",setupFunc:noe,kernelFunc:roe},yC;function soe(e){yC=e.wasm.cwrap(Mi,null,["number, number, number"])}function ioe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,p=i,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:c}=ss(i,a,t),m=d;if(c){let w=t.dataIdMap.get(l.dataId).id;w!==o&&(p=l,u=w,m=N.getInnerMostAxes(m.length,p.shape.length))}N.assertAxesAreInnerMostDims("mean",m,p.shape.length);let[f,g]=N.computeOutAndReduceShapes(p.shape,m),y=v.sizeFromShape(g),b=p;p.dtype!=="float32"&&(b=is({backend:t,inputs:{x:p},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);let x=t.makeOutput(f,"float32");if(v.sizeFromShape(p.shape)!==0){let w=t.dataIdMap.get(x.dataId).id;yC(u,y,w)}if(c&&t.disposeData(l.dataId),s){let w=N.expandShapeToKeepDim(x.shape,h);x.shape=w}return p.dtype!=="float32"&&t.disposeData(b.dataId),x}var ooe={kernelName:Mi,backendName:"wasm",setupFunc:soe,kernelFunc:ioe},bC;function loe(e){bC=e.wasm.cwrap(Oi,null,["number","number","number","number"])}function uoe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,p=i,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:c}=ss(i,a,t);if(c){let x=t.dataIdMap.get(l.dataId).id;x!==o&&(p=l,u=x)}let m=p.shape.length;N.assertAxesAreInnerMostDims("min",d,m);let[f,g]=N.computeOutAndReduceShapes(p.shape,d),y=v.sizeFromShape(g),b=t.makeOutput(f,p.dtype);if(v.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;bC(u,Je[i.dtype],y,x)}if(c&&t.disposeData(l.dataId),s){let x=N.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var poe={kernelName:Oi,backendName:"wasm",setupFunc:loe,kernelFunc:uoe},doe=Dt(Li),Bf;(function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"})(Bf||(Bf={}));var xC;function hoe(e){xC=e.wasm.cwrap(zi,null,["number","array","number","number","array","array","number","number"])}function coe(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),l=r.map(m=>m[0]),d=r.map(m=>m[1]),h=new Uint8Array(new Int32Array(l).buffer),c=new Uint8Array(new Int32Array(d).buffer);return xC(i,p,t.shape.length,Je[t.dtype],h,c,Bf[a],u),o}var moe={kernelName:zi,backendName:"wasm",kernelFunc:coe,setupFunc:hoe},vC;function foe(e){vC=e.wasm.cwrap(lo,null,["number","number","number","number"])}function wC(e){let{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=v.sizeFromShape(n.shape)/o;return v.sizeFromShape(s.shape)===0||vC(a,i,o,u),s}var goe={kernelName:lo,backendName:"wasm",setupFunc:foe,kernelFunc:wC},kC;function yoe(e){kC=e.wasm.cwrap(Ol,null,["number","number","number","number","number","number"])}function boe(e){let{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;if(a.dtype!=="float32")throw new Error(`Tensor logits must have dtype float32, got ${a.dtype}`);let u=o?a:wC({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),[p,l]=u.shape,d=n.makeOutput([p,s],"int32");return kC(n.dataIdMap.get(u.dataId).id,p,l,s,i,n.dataIdMap.get(d.dataId).id),o||n.disposeData(u.dataId),d}var xoe={kernelName:Ol,backendName:"wasm",setupFunc:yoe,kernelFunc:boe},voe=Dt(Pi),woe=Dt(Bi),koe=je(Ll);function Ox(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}var IC;function Ioe(e){IC=e.wasm.cwrap(Pl,"number",["number","number","number","number","number"])}function Soe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,p=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(u.dataId).id,d=IC(p,l,s,a,i),{pSelectedIndices:h,selectedSize:c,pSelectedScores:m,pValidOutputs:f}=Ox(t,d);return t.wasm._free(m),t.wasm._free(f),t.makeOutput([c],"int32",h)}var Noe={kernelName:Pl,backendName:"wasm",setupFunc:Ioe,kernelFunc:Soe},SC;function Toe(e){SC=e.wasm.cwrap(Bl,"number",["number","number","number","number","number","bool"])}function Coe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:p}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(p.dataId).id,h=SC(l,d,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=Ox(t,h);t.wasm._free(f);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([],"int32",g);return[y,b]}var _oe={kernelName:Bl,backendName:"wasm",setupFunc:Toe,kernelFunc:Coe},NC;function Eoe(e){NC=e.wasm.cwrap(Wl,"number",["number","number","number","number","number","number"])}function $oe(e){let{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:p}=n,l=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(p.dataId).id,h=NC(l,d,s,a,i,o),{pSelectedIndices:c,selectedSize:m,pSelectedScores:f,pValidOutputs:g}=Ox(t,h);t.wasm._free(g);let y=t.makeOutput([m],"int32",c),b=t.makeOutput([m],"float32",f);return[y,b]}var Aoe={kernelName:Wl,backendName:"wasm",setupFunc:Eoe,kernelFunc:$oe},Foe=!1,Roe=Dt(zl,Foe,"bool"),TC;function Doe(e){TC=e.wasm.cwrap(Wi,null,["number","number","number","number","number"])}function Moe(e){let{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{dtype:s,depth:i,onValue:o,offValue:u}=r,p=n.makeOutput([...a.shape,i],s),l=n.dataIdMap.get(p.dataId).id,d=n.dataIdMap.get(a.dataId).id;return TC(d,i,o,u,l),p}var Ooe={kernelName:Wi,backendName:"wasm",setupFunc:Doe,kernelFunc:Moe};function Loe(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}var zoe={kernelName:Vl,backendName:"wasm",kernelFunc:Loe};function Poe(e){let{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(t.length===1)return Pf({inputs:{input:t[0]},backend:n,attrs:{dim:a}});let s=t[0].shape,i=t[0].dtype;t.forEach(l=>{v.assertShapesMatch(s,l.shape,"All tensors passed to stack must have matching shapes"),v.assert(i===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});let o=[],u=t.map(l=>{let d=Pf({inputs:{input:l},backend:n,attrs:{dim:a}});return o.push(d),d}),p=LT({inputs:u,backend:n,attrs:{axis:a}});return o.forEach(l=>n.disposeData(l.dataId)),p}var Boe={kernelName:Ul,backendName:"wasm",kernelFunc:Poe},CC;function Woe(e){CC=e.wasm.cwrap(Vi,null,["number","array","number","number","array","array","number","number"])}function Voe(e){let{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((m,f)=>m[0]+t.shape[f]+m[1]);if(v.sizeFromShape(t.shape)===0)return eC({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(t.shape).buffer),l=r.map(m=>m[0]),d=r.map(m=>m[1]),h=new Uint8Array(new Int32Array(l).buffer),c=new Uint8Array(new Int32Array(d).buffer);return CC(i,p,t.shape.length,Je[t.dtype],h,c,a,u),o}var _C={kernelName:Vi,backendName:"wasm",kernelFunc:Voe,setupFunc:Woe},Uoe=Dt(Ui),EC;function Goe(e){EC=e.wasm.cwrap(Gi,null,["number","number","number"])}function Hoe(e){let{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,o=s,u=r,p=u;u.dtype!=="float32"&&(p=is({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(p.dataId).id);let l=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(l.dataId).id;return EC(o,i,d),u.dtype!=="float32"&&n.disposeData(p.dataId),l}var joe={kernelName:Gi,backendName:"wasm",setupFunc:Goe,kernelFunc:Hoe},$C;function qoe(e){$C=e.wasm.cwrap(Hi,null,["number","number","number","number"])}function Koe(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,p=i,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:c}=ss(i,a,t),m=d;if(c){let x=t.dataIdMap.get(l.dataId).id;x!==o&&(p=l,u=x,m=N.getInnerMostAxes(m.length,p.shape.length))}N.assertAxesAreInnerMostDims("prod",m,p.shape.length);let[f,g]=N.computeOutAndReduceShapes(p.shape,m),y=v.sizeFromShape(g),b=t.makeOutput(f,p.dtype);if(v.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;$C(u,y,Je[b.dtype],x)}if(c&&t.disposeData(l.dataId),s){let x=N.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var Xoe={kernelName:Hi,backendName:"wasm",setupFunc:qoe,kernelFunc:Koe},Zoe=e=>{let{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=dx(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u},Joe={kernelName:Ep,backendName:"wasm",kernelFunc:Zoe},Yoe=Dt(fi),Qoe=je(ji),ele=je(qi),tle=je(Zi),AC;function nle(e){AC=e.wasm.cwrap(Xi,null,["number","number","number","number","number","number","number","number","number","number"])}function rle(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,p]=o,[l,d,h,c]=a.shape,m=[l,u,p,c],f=t.dataIdMap.get(a.dataId),g;f.dtype!=="float32"&&(g=is({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),f=t.dataIdMap.get(g.dataId));let y=f.id,b=t.makeOutput(m,"float32");if(v.sizeFromShape(a.shape)===0)return b;let x=t.dataIdMap.get(b.dataId).id;return AC(y,l,d,h,c,u,p,s?1:0,i?1:0,x),g!=null&&t.disposeData(g.dataId),b}var ale={kernelName:Xi,backendName:"wasm",setupFunc:nle,kernelFunc:rle},FC;function sle(e){FC=e.wasm.cwrap(jl,null,["number","number","number","array","array","boolean"])}function ile(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),u=n.dataIdMap.get(a.dataId),p;return u.dtype!=="float32"&&(p=is({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),u=n.dataIdMap.get(p.dataId)),FC(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),p!=null&&n.disposeData(p.dataId),o}var ole={kernelName:jl,backendName:"wasm",setupFunc:sle,kernelFunc:ile},RC;function lle(e){RC=e.wasm.cwrap(Ki,null,["number","number","number","number","number","number","number","number","number","number"])}function ule(e){let{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,p]=o,[l,d,h,c]=a.shape,m=[l,u,p,c],f=t.makeOutput(m,"float32");if(v.sizeFromShape(a.shape)===0)return f;let g=t.dataIdMap.get(a.dataId),y;g.dtype!=="float32"&&(y=is({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(y.dataId));let b=g.id,x=t.dataIdMap.get(f.dataId).id;return RC(b,l,d,h,c,u,p,s?1:0,i?1:0,x),y!=null&&t.disposeData(y.dataId),f}var ple={kernelName:Ki,backendName:"wasm",setupFunc:lle,kernelFunc:ule},DC;function dle(e){DC=e.wasm.cwrap(Hl,null,["number","number","number","array","array","boolean"])}function hle(e){let{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=n.makeOutput(a.shape,"float32"),u=n.dataIdMap.get(a.dataId),p;return u.dtype!=="float32"&&(p=is({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),u=n.dataIdMap.get(p.dataId)),DC(n.dataIdMap.get(a.dataId).id,n.dataIdMap.get(s.dataId).id,n.dataIdMap.get(o.dataId).id,new Uint8Array(new Int32Array(a.shape).buffer),new Uint8Array(new Int32Array(s.shape).buffer),i),p!=null&&n.disposeData(p.dataId),o}var cle={kernelName:Hl,backendName:"wasm",setupFunc:dle,kernelFunc:hle},MC;function mle(e){MC=e.wasm.cwrap(Ji,null,["number","array","number","array","number","number"])}function fle(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=v.parseAxisParam(s,a.shape);if(a.shape.length===0)return fm({inputs:{x:a},backend:n});let o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(a.shape).buffer);MC(u,l,i.length,d,a.shape.length,p);let h=$n({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),h}var gle={kernelName:Ji,backendName:"wasm",kernelFunc:fle,setupFunc:mle},OC;function yle(e){OC=e.wasm.cwrap(ou,null,["number","number","number","number","number","number","number","number","array","number","number"])}function ble(e){let{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),p=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(u.dataId).id,[d,h,c,m]=a.shape,[f,g]=N.getImageCenter(o,h,c),y=i===0,b=255,x=typeof i=="number"?[i,i,i,y?0:b]:[...i,b],w=new Uint8Array(new Int32Array(x).buffer);return OC(p,d,h,c,m,s,f,g,w,x.length,l),u}var xle={kernelName:ou,backendName:"wasm",kernelFunc:ble,setupFunc:yle},vle=je(Yi),wle=je(Qi),LC;function kle(e){LC=e.wasm.cwrap(ql,null,["number","number","number","number","number","number","array","number","number"])}function Ile(e){let{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(v.sizeFromShape(i)===0)return o;let{sliceRank:u,numUpdates:p,sliceSize:l,strides:d,outputSize:h}=Rc.calculateShapes(s,a,i),c=t.dataIdMap.get(a.dataId).id,m=t.dataIdMap.get(s.dataId).id,f=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return LC(c,m,Je[s.dtype],u,p,l,f,h,g),o}var Sle={kernelName:ql,backendName:"wasm",setupFunc:kle,kernelFunc:Ile},zC;function Nle(e){zC=e.wasm.cwrap(Xl,null,["number","number","number","number","number","number","bool","number"])}function Tle(e){let{inputs:t,backend:n,attrs:r}=e,{sortedSequence:a,values:s}=t,{side:i}=r;if(a.dtype!==s.dtype)throw new Error(`SearchSorted error: sorted_sequence must have the same dtype as values. Got ${a.dtype} and ${s.dtype}`);let o=n.makeOutput(s.shape,"int32");function u(p){return n.dataIdMap.get(p.dataId).id}return zC(u(a),u(s),a.shape[0],a.shape[1],s.shape[1],Je[a.dtype],i==="left",u(o)),o}var Cle={kernelName:Xl,backendName:"wasm",setupFunc:Nle,kernelFunc:Tle},PC;function _le(e){PC=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Ele(e){let{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,p=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(p.dataId).id,d=r.shape.length,h=a.shape.length,c=d===0||d>1||h===1?1:v.sizeFromShape(a.shape.slice(1));return PC(i,o,u,c,l),p}var $le={kernelName:Zl,backendName:"wasm",kernelFunc:Ele,setupFunc:_le},Ale=je(eo),BC;function Fle(e){BC=e.wasm.cwrap(ao,null,["number","number"])}function Rle(e){let{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return v.sizeFromShape(a.shape)===0||BC(r,s),a}var Dle={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Fle,kernelFunc:Rle},Mle=je(ro),Ole=je(to),Lle=je(no),zle=je(so);function Ple(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=v.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let g=1+s.length;g<a.shape.length;++g)u.push([0,0]);let p=_C.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),l=N.getReshaped(p.shape,s,o,!1),d=N.getPermuted(l.length,s.length,!1),h=N.getReshapedPermuted(p.shape,s,o,!1),c=$n({inputs:{x:p},backend:n,attrs:{shape:l}}),m=Ha({inputs:{x:c},backend:n,attrs:{perm:d}}),f=$n({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeData(p.dataId),n.disposeData(c.dataId),n.disposeData(m.dataId),f}var Ble={kernelName:Yl,backendName:"wasm",kernelFunc:Ple},WC;function Wle(e){WC=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Vle(e){let{backend:t,inputs:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=n,o=r.shape[0],u=r.shape[1],p=t.readSync(s.dataId)[0],l=[o+p,u],d=t.dataIdMap.get(r.dataId).id,h=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(i.dataId).id,m=t.makeOutput(l,r.dtype),f=t.dataIdMap.get(m.dataId).id,g=t.makeOutput(l.slice(0,1),a.dtype),y=t.dataIdMap.get(g.dataId).id,b=t.makeOutput([p],"bool"),x=t.dataIdMap.get(b.dataId).id,w=t.makeOutput([o],r.dtype),I=t.dataIdMap.get(w.dataId).id,T=t.makeOutput([4],"int32"),C=t.dataIdMap.get(T.dataId).id,E=WC(d,h,Je[a.dtype],o,p,u,c,f,y,x,I,C),A=t.readSync(T.dataId),R;switch(A[0]){case 1:{R=N.getSparseFillEmptyRowsIndicesDenseShapeMismatch(A[1]);break}case 2:{R=N.getSparseFillEmptyRowsNegativeIndexErrorMessage(A[1],A[2]);break}case 3:R=N.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(A[1],A[2],A[3]);break;default:R=""}if(t.disposeData(T.dataId),R)throw t.disposeData(m.dataId),t.disposeData(g.dataId),t.disposeData(b.dataId),t.disposeData(w.dataId),new Error(R);let F=m,S=g;return E!==l[0]&&(F=qs({inputs:{x:m},attrs:{begin:0,size:[E,u]},backend:t}),S=qs({inputs:{x:g},attrs:{begin:0,size:E},backend:t}),t.disposeData(m.dataId),t.disposeData(g.dataId)),[F,S,b,w]}var Ule={kernelName:$p,backendName:"wasm",setupFunc:Wle,kernelFunc:Vle},VC;function Gle(e){VC=e.wasm.cwrap(eu,null,["number","number","number","number","number","number","number"])}function Hle(e){let{backend:t,inputs:n}=e,{inputIndices:r,inputShape:a,newShape:s}=n;if(r.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${r.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(s.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(r.dataId).id,o=t.dataIdMap.get(a.dataId).id,u=t.dataIdMap.get(s.dataId).id,p=r.shape[0],l=v.sizeFromShape(s.shape),d=t.makeOutput([p,l],r.dtype),h=t.dataIdMap.get(d.dataId).id,c=t.makeOutput([l],s.dtype),m=t.dataIdMap.get(c.dataId).id,f=t.makeOutput([3],"int32"),g=t.dataIdMap.get(f.dataId).id;VC(i,o,u,p,h,m,g);let y=t.readSync(f.dataId),b;switch(y[0]){case 0:{b=N.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(y[1],y[2]);break}case 1:{b=N.getSparseReshapeNegativeOutputDimErrorMessage(y[1],y[2]);break}case 2:b=N.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let x=Array.from(t.readSync(a.dataId)),w=Array.from(t.readSync(c.dataId));b=N.getSparseReshapeInputOutputMultipleErrorMessage(x,w);break}case 4:{let x=Array.from(t.readSync(a.dataId)),w=Array.from(t.readSync(c.dataId));b=N.getSparseReshapeInputOutputMismatchErrorMessage(x,w);break}default:b=""}if(t.disposeData(f.dataId),b)throw t.disposeData(d.dataId),t.disposeData(c.dataId),new Error(b);return[d,c]}var jle={kernelName:eu,backendName:"wasm",setupFunc:Gle,kernelFunc:Hle},UC;function GC(e){UC=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function HC(e,t){let{backend:n,inputs:r}=e,{data:a,indices:s,segmentIds:i}=r,o=s.shape[0],u=n.readSync(i.dataId,o-1,o)[0],p=o>0?u+1:0;if(p<0)throw new Error(N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let l=a.shape.slice();l[0]=p;let d=n.dataIdMap.get(a.dataId).id,h=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,m=n.makeOutput(l,a.dtype),f=n.dataIdMap.get(m.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;UC(d,Je[a.dtype],a.shape[0],h,c,f,y,t,0);let b=n.readSync(g.dataId),x;switch(b[0]){case 0:{x=N.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break}case 1:{x=N.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break}case 2:x=N.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b[1],b[2]);break;case 3:x=N.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(b[1],b[2],b[3]);break;default:x=""}if(n.disposeData(g.dataId),x)throw n.disposeData(m.dataId),new Error(x);return m}function qle(e){return HC(e,!0)}var Kle={kernelName:Ap,backendName:"wasm",setupFunc:GC,kernelFunc:qle};function Xle(e){return HC(e,!1)}var Zle={kernelName:Fp,backendName:"wasm",setupFunc:GC,kernelFunc:Xle},jC;function Jle(e){jC=e.wasm.cwrap(tu,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Yle(e){let{backend:t,inputs:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=n,{outputShape:o}=r,u=t.makeOutput(o,i.dtype);if(v.sizeFromShape(o)===0)return u;let{sliceRank:p,numUpdates:l,sliceSize:d,strides:h,outputSize:c}=N.calculateShapes(s,a,o),m=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,g=t.dataIdMap.get(i.dataId).id,y=new Uint8Array(new Int32Array(h).buffer),b=t.dataIdMap.get(u.dataId).id;return jC(m,f,s.shape.length,g,Je[i.dtype],p,l,d,y,c,b),u}var Qle={kernelName:tu,backendName:"wasm",setupFunc:Jle,kernelFunc:Yle};function eue(e){let{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=v.parseAxisParam(i,a.shape)[0],u=N.prepareSplitSize(a,s,o),p=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map(d=>{let h=[...l];h[o]=d;let c=qs({inputs:{x:a},attrs:{begin:p,size:h},backend:r});return p[o]+=d,c})}var tue={kernelName:Ql,backendName:"wasm",kernelFunc:eue},nue=je(io),rue=je(Rp),aue=Dt(uo),qC;function sue(e){qC=e.wasm.cwrap(Ja,null,["number","number","number","number"])}function iue(e){let{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return qC(i,a,Je[s.dtype],u),o}var oue={kernelName:Ja,backendName:"wasm",setupFunc:sue,kernelFunc:iue},KC;function lue(e){KC=e.wasm.cwrap(nu,null,["number","array","number","array","array","array","array","array","number","number"])}function uue(e){let{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:u,endMask:p,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:c,finalShape:m,isIdentity:f,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=zt.sliceInfo(a.shape,s,i,o,u,p,l,d,h),I;if(f)I=$n({inputs:{x:a},backend:t,attrs:{shape:m}});else if(g||y){v.assert(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);let T=zt.computeOutShape(b,x,w),C=qs({inputs:{x:a},backend:t,attrs:{begin:b,size:T}});I=$n({inputs:{x:C},backend:t,attrs:{shape:m}}),t.disposeData(C.dataId)}else{let T=t.makeOutput(c,"float32"),C=t.dataIdMap.get(a.dataId).id,E=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),A=new Uint8Array(new Int32Array(b).buffer),R=new Uint8Array(new Int32Array(x).buffer),F=new Uint8Array(new Int32Array(w).buffer),S=new Uint8Array(new Int32Array(c).buffer),M=new Uint8Array(new Int32Array(v.computeStrides(c)).buffer),B=t.dataIdMap.get(T.dataId).id;KC(C,E,a.shape.length,A,R,F,S,M,c.length,B),I=$n({inputs:{x:T},backend:t,attrs:{shape:m}}),t.disposeData(T.dataId)}return I}var pue={kernelName:nu,backendName:"wasm",setupFunc:lue,kernelFunc:uue};function due(e){let{backend:t,inputs:n,attrs:r}=e,{data:a,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:u,rightPad:p,padWidth:l,preserveShortSequences:d}=r,h=t.readSync(a.dataId),c=t.readSync(s.dataId),[m,f]=cx(h,c,i,o,u,p,l,d),g=t.makeOutput([m.length],"string"),y=t.dataIdMap.get(g.dataId);y.stringBytes=m;let b=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(b).set(f),[g,b]}var hue={kernelName:Mp,backendName:"wasm",kernelFunc:due};function cue(e){let{backend:t,inputs:n,attrs:r}=e,{input:a,delimiter:s}=n,{skipEmpty:i}=r,o=t.readSync(a.dataId),u=t.readSync(s.dataId),[p,l,d]=mx(o,u[0],i),h=l.length,c=t.makeOutput([h,2],"int32");t.typedArrayFromHeap(c).set(p);let m=t.makeOutput([h],"string"),f=t.dataIdMap.get(m.dataId);f.stringBytes=l;let g=t.makeOutput([2],"int32");return t.typedArrayFromHeap(g).set(d),[c,m,g]}var mue={kernelName:Op,backendName:"wasm",kernelFunc:cue};function fue(e){let{backend:t,inputs:n,attrs:r}=e,{input:a}=n,{numBuckets:s}=r,i=t.readSync(a.dataId),o=fx(i,s),u=t.makeOutput(a.shape,"int32");return t.typedArrayFromHeap(u).set(o),u}var gue={kernelName:Lp,backendName:"wasm",kernelFunc:fue},yue=Dt(po),XC;function bue(e){XC=e.wasm.cwrap(oo,null,["number","number","number","number"])}function xue(e){let{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,u=o,p=i,{transposed:l,axes:d,originalAxes:h,inputWasTransposed:c}=ss(i,a,t),m=d;if(c){let x=t.dataIdMap.get(l.dataId).id;x!==o&&(p=l,u=x,m=N.getInnerMostAxes(m.length,p.shape.length))}N.assertAxesAreInnerMostDims("sum",m,p.shape.length);let[f,g]=N.computeOutAndReduceShapes(p.shape,m),y=v.sizeFromShape(g),b=t.makeOutput(f,p.dtype);if(v.sizeFromShape(p.shape)!==0){let x=t.dataIdMap.get(b.dataId).id;XC(u,y,Je[b.dtype],x)}if(c&&t.disposeData(l.dataId),s){let x=N.expandShapeToKeepDim(b.shape,h);b.shape=x}return b}var vue={kernelName:oo,backendName:"wasm",setupFunc:bue,kernelFunc:xue},wue=je(ho),kue=je(co),ZC;function Iue(e){ZC=e.wasm.cwrap(Kl,null,["number","number","number","number","number","number","array","number","number","number"])}function Sue(e){let{backend:t,inputs:n,attrs:r}=e,{tensor:a,indices:s,updates:i}=n,o=t.makeOutput(a.shape,a.dtype);if(v.sizeFromShape(a.shape)===0)return o;let{sliceRank:u,numUpdates:p,sliceSize:l,strides:d,outputSize:h}=Rc.calculateShapes(i,s,a.shape),c=t.dataIdMap.get(s.dataId).id,m=t.dataIdMap.get(i.dataId).id,f=t.dataIdMap.get(a.dataId).id,g=new Uint8Array(new Int32Array(d).buffer),y=t.dataIdMap.get(o.dataId).id;return ZC(c,m,Je[i.dtype],u,p,l,g,h,y,f),o}var Nue={kernelName:Kl,backendName:"wasm",setupFunc:Iue,kernelFunc:Sue},JC;function Tue(e){JC=e.wasm.cwrap(Za,null,["number","array","number","array","number","number"])}function Cue(e){let{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let h=0;h<o.length;h++)o[h]=a.shape[h]*i[h];let u=new Uint8Array(new Int32Array(a.shape).buffer),p=new Uint8Array(new Int32Array(o).buffer),l=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(l.dataId).id;return JC(s,u,a.shape.length,p,o.length,Je[l.dtype],d),l}var _ue={kernelName:Za,backendName:"wasm",setupFunc:Tue,kernelFunc:Cue},YC;function Eue(e){YC=e.wasm.cwrap(ru,null,["number","array","number","number","number","bool","number","number"])}var $ue=({inputs:e,backend:t,attrs:n})=>{let{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=a;let p=t.makeOutput(u,r.dtype),l=t.dataIdMap.get(p.dataId).id,d=t.makeOutput(u,"int32"),h=t.dataIdMap.get(d.dataId).id;return YC(i,o,r.shape.length,Je[r.dtype],a,s,l,h),[p,d]},Aue={kernelName:ru,backendName:"wasm",setupFunc:Eue,kernelFunc:$ue},QC;function Fue(e){QC=e.wasm.cwrap(au,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function Rue(e){let{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:p}=r,[l,d,h,c]=a.shape,[m,f]=p!=null?p:[d,h],g=[l,m,f,c],y=new Uint8Array(new Int32Array(v.computeStrides(a.shape)).buffer),b=new Uint8Array(new Int32Array(v.computeStrides(g)).buffer),x=t.makeOutput(g,a.dtype),w=t.dataIdMap.get(x.dataId).id,I=t.dataIdMap.get(a.dataId).id,T=t.dataIdMap.get(s.dataId).id,C=i==="nearest"?1:2,E;switch(o){case"constant":E=1;break;case"reflect":E=2;break;case"wrap":E=3;break;case"nearest":E=4;break;default:E=1;break}return QC(I,T,s.shape[0]>1,l,m,f,c,h,d,y,a.shape.length-1,b,g.length-1,C,E,u,w),x}var Due={kernelName:au,backendName:"wasm",setupFunc:Fue,kernelFunc:Rue};function Mue(e){let{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t,{outputValues:i,outputShape:o,indices:u}=yx(r.readSync(s.dataId),a,s.shape,s.dtype);return[r.makeOutput(o,s.dtype,void 0,i),r.makeOutput([u.length],"int32",void 0,u)]}var Oue={kernelName:zp,backendName:"wasm",kernelFunc:Mue};function Lue(e){let{inputs:t,backend:n,attrs:r}=e,{value:a}=t,{axis:s}=r;s<0&&(s+=a.shape.length);let i=a.shape[s],o=a.shape.length,u=new Array(o-1),p=0;for(let c=0;c<o;c++)c!==s&&(u[p++]=a.shape[c]);let l=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let c=0;c<l.length;c++)d[s]=c,l[c]=qs({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return l.map(({dataId:c,dtype:m})=>({dataId:c,dtype:m,shape:u}))}var zue={kernelName:su,backendName:"wasm",kernelFunc:Lue};function Pue(e){let{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}var Bue={kernelName:iu,backendName:"wasm",kernelFunc:Pue},Wue=[Fre,Rre,Dre,Mre,Ore,Pre,qre,Zre,Jre,Yre,Qre,eae,tae,nae,rae,iae,fae,uae,hae,xae,Nae,_ae,Eae,Aae,Fae,Rae,Oae,Lae,Bae,Uae,jae,Xae,Yae,Qae,ese,rse,ise,use,hse,fse,bse,wse,Sse,Cse,$se,Ase,Dse,Ose,Lse,zse,Pse,Bse,Wse,Gse,Hse,jse,Xse,Yse,tie,aie,oie,uie,die,Bre,hie,cie,mie,yie,xie,wie,Sie,Tie,Nie,_ie,Eie,Aie,Rie,Oie,Pie,Vie,Uie,jie,Xie,Yie,toe,aoe,ooe,poe,doe,moe,xoe,voe,woe,koe,Noe,_oe,Aoe,Roe,Ooe,zoe,Boe,_C,Uoe,joe,Xoe,Joe,Yoe,Qoe,ele,tle,gae,ale,ole,ple,cle,gle,xle,vle,wle,Sle,Cle,$le,Ale,Dle,Mle,Ole,Lle,Iae,goe,zle,Ble,Ule,jle,Kle,Zle,Qle,tue,nue,rue,aue,oue,pue,hue,mue,gue,yue,vue,wue,kue,Nue,_ue,Aue,Due,Gre,Oue,zue,Bue];for(let e of Wue)Bp(e);var Wf=H();Wf.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});Wf.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(Wf.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});var a0=qa(zE()),Vue=qa(PE()),s0=qa(BE()),i0=a0.default||a0,Uue=s0.default||s0,e_=class extends yp{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(t_),Vf=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new jh(this,hr())}write(e,t,n){let r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=v.now();return e(),{kernelMs:v.now()-t}}move(e,t,n,r,a){let s=this.dataIdNextNumber++;if(r==="string"){let p=t;this.dataIdMap.set(e,{id:s,stringBytes:p,shape:n,dtype:r,memoryOffset:null,refCount:a});return}let i=v.sizeFromShape(n),o=i*v.bytesPerElement(r),u=this.wasm._malloc(o)>>>0;this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:r,dtype:a,shape:s,stringBytes:i}=this.dataIdMap.get(e);if(a==="string")return(t==null||t===0)&&(n==null||n>=i.length)?i:i.slice(t,n);t=t||0,n=n||v.sizeFromShape(s);let o=v.bytesPerElement(a),u=this.wasm.HEAPU8.slice(r+t*o,r+n*o);return jue(u.buffer,a)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n,r){let a;if(n==null)a=this.write(r!=null?r:null,e,t);else{let s=this.dataIdNextNumber++;a={id:s},this.dataIdMap.set(a,{id:s,memoryOffset:n,shape:e,dtype:t,refCount:1});let i=v.sizeFromShape(e);this.wasm.tfjs.registerTensor(s,i,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=v.sizeFromShape(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}};function Gue(e){return(t,n)=>(v.fetch(e,{credentials:"same-origin"}).then(r=>{r.ok||t.env.a(`failed to load wasm binary file at '${e}'`),r.arrayBuffer().then(a=>{WebAssembly.instantiate(a,t).then(s=>{n(s.instance,s.module)})})}),{})}function o0(e,t,n){if(Bh!=null)return Bh;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),Zu!=null&&Zu[r]!=null?Zu[r]:n+r}async function Hue(){let[e,t]=await Promise.all([H().getAsync("WASM_HAS_SIMD_SUPPORT"),H().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{let a={};a.locateFile=(o,u)=>{if(o.endsWith(".worker.js")){let p=Vue.wasmWorkerContents.replace(/\n/g,"\\n"),l=new Blob([p],{type:"application/javascript"});return URL.createObjectURL(l)}return o.endsWith(".wasm")?o0(e,t,qu!=null?qu:u):u+o},Lx&&(a.instantiateWasm=Gue(o0(e,t,qu!=null?qu:"")));let s=!1;a.onAbort=()=>{s||Ju||(Ju=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))};let i;t&&e&&Bh==null?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+i0.toString()],{type:"text/javascript"}),i=i0(a)):i=Uue(a),i.then(o=>{s=!0,Ju=!1;let u=null;o.tfjs={init:o.cwrap("init",null,[]),initWithThreadsCount:o.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:o.cwrap("get_threads_count","number",[]),registerTensor:o.cwrap("register_tensor",null,["number","number","number"]),disposeData:o.cwrap("dispose_data",u,["number"]),dispose:o.cwrap("dispose",u,[])},n({wasm:o})}).catch(r)})}function jue(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var que=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],Bh=null,qu=null,Zu={},Ju=!1,Lx=!1;function Kue(e,t=!1){if(Q0("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),Ju)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");Bh=e,Lx=t}function Xue(e,t=!1){if(Ju)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if(typeof e=="string")qu=e;else{Zu=e;let n=que.filter(r=>Zu[r]==null);if(n.length>0)throw new Error(`There were no entries found for the following binaries: ${n.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Lx=t}var t_=-1,Vf=-1;function Zue(e){t_=e}function Jue(){if(Vf===-1)throw new Error("WASM backend not initialized.");return Vf}var Yue="4.7.0",Que=2;uc("wasm",async()=>{let{wasm:e}=await Hue();return new e_(e)},Que);var l0="4.7.0",epe="4.7.0",tpe="4.7.0",npe="4.7.0",rpe="4.7.0",ape={tfjs:l0,"tfjs-core":l0,"tfjs-converter":epe,"tfjs-backend-cpu":tpe,"tfjs-backend-webgl":npe,"tfjs-backend-wasm":rpe},spe={};qf(spe,{AnchorPosition:()=>c_,DrawBox:()=>f_,DrawBoxOptions:()=>m_,DrawFaceLandmarks:()=>R_,DrawFaceLandmarksOptions:()=>F_,DrawTextField:()=>gm,DrawTextFieldOptions:()=>Gx,drawContour:()=>Na,drawDetections:()=>bpe,drawFaceExpressions:()=>Ape,drawFaceLandmarks:()=>Rpe});function Na(e,t,n=!1){if(e.beginPath(),t.slice(1).forEach(({x:r,y:a},s)=>{let i=t[s];e.moveTo(i.x,i.y),e.lineTo(r,a)}),n){let r=t[t.length-1],a=t[0];if(!r||!a)return;e.moveTo(r.x,r.y),e.lineTo(a.x,a.y)}e.stroke()}var ipe={};qf(ipe,{computeReshapedDimensions:()=>a_,getCenterPoint:()=>Px,isDimensions:()=>Gf,isEven:()=>Uf,isFloat:()=>r_,isTensor:()=>_u,isTensor1D:()=>ope,isTensor2D:()=>n_,isTensor3D:()=>wd,isTensor4D:()=>ua,isValidNumber:()=>_s,isValidProbablitiy:()=>lpe,range:()=>al,round:()=>zx});var Cs=class{constructor(e,t){if(!_s(e)||!_s(t))throw new Error(`Dimensions.constructor - expected width and height to be valid numbers, instead have ${JSON.stringify({width:e,height:t})}`);this._width=e,this._height=t}get width(){return this._width}get height(){return this._height}reverse(){return new Cs(1/this.width,1/this.height)}};function _u(e,t){return e instanceof Ae&&e.shape.length===t}function ope(e){return _u(e,1)}function n_(e){return _u(e,2)}function wd(e){return _u(e,3)}function ua(e){return _u(e,4)}function r_(e){return e%1!==0}function Uf(e){return e%2===0}function zx(e,t=2){let n=10**t;return Math.floor(e*n)/n}function Gf(e){return e&&e.width&&e.height}function a_({width:e,height:t},n){let r=n/Math.max(t,e);return new Cs(Math.round(e*r),Math.round(t*r))}function Px(e){return e.reduce((t,n)=>t.add(n),new Xe(0,0)).div(new Xe(e.length,e.length))}function al(e,t,n){return Array(e).fill(0).map((r,a)=>t+a*n)}function _s(e){return!!e&&e!==1/0&&e!==-1/0&&!Number.isNaN(e)||e===0}function lpe(e){return _s(e)&&e>=0&&e<=1}var Xe=class{constructor(e,t){this._x=e,this._y=t}get x(){return this._x}get y(){return this._y}add(e){return new Xe(this.x+e.x,this.y+e.y)}sub(e){return new Xe(this.x-e.x,this.y-e.y)}mul(e){return new Xe(this.x*e.x,this.y*e.y)}div(e){return new Xe(this.x/e.x,this.y/e.y)}abs(){return new Xe(Math.abs(this.x),Math.abs(this.y))}magnitude(){return Math.sqrt(this.x**2+this.y**2)}floor(){return new Xe(Math.floor(this.x),Math.floor(this.y))}},sn=class{static isRect(e){return!!e&&[e.x,e.y,e.width,e.height].every(_s)}static assertIsValidBox(e,t,n=!1){if(!sn.isRect(e))throw new Error(`${t} - invalid box: ${JSON.stringify(e)}, expected object with properties x, y, width, height`);if(!n&&(e.width<0||e.height<0))throw new Error(`${t} - width (${e.width}) and height (${e.height}) must be positive numbers`)}constructor(e,t=!0){let n=e||{},r=[n.left,n.top,n.right,n.bottom].every(_s),a=[n.x,n.y,n.width,n.height].every(_s);if(!a&&!r)throw new Error(`Box.constructor - expected box to be IBoundingBox | IRect, instead have ${JSON.stringify(n)}`);let[s,i,o,u]=a?[n.x,n.y,n.width,n.height]:[n.left,n.top,n.right-n.left,n.bottom-n.top];sn.assertIsValidBox({x:s,y:i,width:o,height:u},"Box.constructor",t),this._x=s,this._y=i,this._width=o,this._height=u}get x(){return this._x}get y(){return this._y}get width(){return this._width}get height(){return this._height}get left(){return this.x}get top(){return this.y}get right(){return this.x+this.width}get bottom(){return this.y+this.height}get area(){return this.width*this.height}get topLeft(){return new Xe(this.left,this.top)}get topRight(){return new Xe(this.right,this.top)}get bottomLeft(){return new Xe(this.left,this.bottom)}get bottomRight(){return new Xe(this.right,this.bottom)}round(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map(a=>Math.round(a));return new sn({x:e,y:t,width:n,height:r})}floor(){let[e,t,n,r]=[this.x,this.y,this.width,this.height].map(a=>Math.floor(a));return new sn({x:e,y:t,width:n,height:r})}toSquare(){let{x:e,y:t,width:n,height:r}=this,a=Math.abs(n-r);return n<r&&(e-=a/2,n+=a),r<n&&(t-=a/2,r+=a),new sn({x:e,y:t,width:n,height:r})}rescale(e){let t=Gf(e)?e.width:e,n=Gf(e)?e.height:e;return new sn({x:this.x*t,y:this.y*n,width:this.width*t,height:this.height*n})}pad(e,t){let[n,r,a,s]=[this.x-e/2,this.y-t/2,this.width+e,this.height+t];return new sn({x:n,y:r,width:a,height:s})}clipAtImageBorders(e,t){let{x:n,y:r,right:a,bottom:s}=this,i=Math.max(n,0),o=Math.max(r,0),u=a-i,p=s-o,l=Math.min(u,e-i),d=Math.min(p,t-o);return new sn({x:i,y:o,width:l,height:d}).floor()}shift(e,t){let{width:n,height:r}=this,a=this.x+e,s=this.y+t;return new sn({x:a,y:s,width:n,height:r})}padAtBorders(e,t){let n=this.width+1,r=this.height+1,a=1,s=1,i=n,o=r,u=this.left,p=this.top,l=this.right,d=this.bottom;return l>t&&(i=-l+t+n,l=t),d>e&&(o=-d+e+r,d=e),u<1&&(o=2-u,u=1),p<1&&(o=2-p,p=1),{dy:s,edy:o,dx:a,edx:i,y:p,ey:d,x:u,ex:l,w:n,h:r}}calibrate(e){return new sn({left:this.left+e.left*this.width,top:this.top+e.top*this.height,right:this.right+e.right*this.width,bottom:this.bottom+e.bottom*this.height}).toSquare().round()}},s_=class extends sn{constructor(e,t,n,r,a=!1){super({left:e,top:t,right:n,bottom:r},a)}},Bx=class{constructor(e,t,n,r,a){this._imageDims=new Cs(a.width,a.height),this._score=e,this._classScore=t,this._className=n,this._box=new sn(r).rescale(this._imageDims)}get score(){return this._score}get classScore(){return this._classScore}get className(){return this._className}get box(){return this._box}get imageDims(){return this._imageDims}get imageWidth(){return this.imageDims.width}get imageHeight(){return this.imageDims.height}get relativeBox(){return new sn(this._box).rescale(this.imageDims.reverse())}forSize(e,t){return new Bx(this.score,this.classScore,this.className,this.relativeBox,{width:e,height:t})}},gr=class extends Bx{constructor(e,t,n){super(e,e,"",t,n)}forSize(e,t){let{score:n,relativeBox:r,imageDims:a}=super.forSize(e,t);return new gr(n,r,a)}};function upe(e,t,n=!0){let r=Math.max(0,Math.min(e.right,t.right)-Math.max(e.left,t.left)),a=Math.max(0,Math.min(e.bottom,t.bottom)-Math.max(e.top,t.top)),s=r*a;return n?s/(e.area+t.area-s):s/Math.min(e.area,t.area)}function ppe(e){let t=e.map(o=>o.x),n=e.map(o=>o.y),r=t.reduce((o,u)=>u<o?u:o,1/0),a=n.reduce((o,u)=>u<o?u:o,1/0),s=t.reduce((o,u)=>o<u?u:o,0),i=n.reduce((o,u)=>o<u?u:o,0);return new s_(r,a,s,i)}function dpe(e,t,n,r=!0){let a=t.map((i,o)=>({score:i,boxIndex:o})).sort((i,o)=>i.score-o.score).map(i=>i.boxIndex),s=[];for(;a.length>0;){let i=a.pop();s.push(i);let o=a,u=[];for(let p=0;p<o.length;p++){let l=o[p],d=e[i],h=e[l];u.push(upe(d,h,r))}a=a.filter((p,l)=>u[l]<=n)}return s}function kd(e,t){return W(()=>{let[n,r,a]=t,s=Un([...e.shape.slice(0,3),1],n,"float32"),i=Un([...e.shape.slice(0,3),1],r,"float32"),o=Un([...e.shape.slice(0,3),1],a,"float32"),u=at([s,i,o],3);return he(e,u)})}function hpe(e,t=!1){return W(()=>{let[n,r]=e.shape.slice(1);if(n===r)return e;let a=Math.abs(n-r),s=Math.round(a*(t?.5:1)),i=n>r?2:1,o=d=>{let h=e.shape.slice();return h[i]=d,Un(h,0,"float32")},u=o(s),p=a-u.shape[i],l=[t&&p?o(p):null,e,u].filter(d=>!!d).map(d=>se(d,"float32"));return at(l,i)})}function Wm(e){return 1/(1+Math.exp(-e))}var i_=class extends sn{constructor(e,t,n,r,a=!1){super({x:e,y:t,width:n,height:r},a)}},cpe=.5,mpe=.43,fpe=.45,Wh=class{constructor(e,t,n=new Xe(0,0)){let{width:r,height:a}=t;this._imgDims=new Cs(r,a),this._shift=n,this._positions=e.map(s=>s.mul(new Xe(r,a)).add(n))}get shift(){return new Xe(this._shift.x,this._shift.y)}get imageWidth(){return this._imgDims.width}get imageHeight(){return this._imgDims.height}get positions(){return this._positions}get relativePositions(){return this._positions.map(e=>e.sub(this._shift).div(new Xe(this.imageWidth,this.imageHeight)))}forSize(e,t){return new this.constructor(this.relativePositions,{width:e,height:t})}shiftBy(e,t){return new this.constructor(this.relativePositions,this._imgDims,new Xe(e,t))}shiftByPoint(e){return this.shiftBy(e.x,e.y)}align(e,t={}){if(e){let a=e instanceof gr?e.box.floor():new sn(e);return this.shiftBy(a.x,a.y).align(null,t)}let{useDlibAlignment:n,minBoxPadding:r}={useDlibAlignment:!1,minBoxPadding:.2,...t};return n?this.alignDlib():this.alignMinBbox(r)}alignDlib(){let e=this.getRefPointsForAlignment(),[t,n,r]=e,a=l=>r.sub(l).magnitude(),s=(a(t)+a(n))/2,i=Math.floor(s/fpe),o=Px(e),u=Math.floor(Math.max(0,o.x-cpe*i)),p=Math.floor(Math.max(0,o.y-mpe*i));return new i_(u,p,Math.min(i,this.imageWidth+u),Math.min(i,this.imageHeight+p))}alignMinBbox(e){let t=ppe(this.positions);return t.pad(t.width*e,t.height*e)}getRefPointsForAlignment(){throw new Error("getRefPointsForAlignment not implemented by base class")}},o_=class extends Wh{getJawOutline(){return this.positions.slice(0,17)}getLeftEyeBrow(){return this.positions.slice(17,22)}getRightEyeBrow(){return this.positions.slice(22,27)}getNose(){return this.positions.slice(27,36)}getLeftEye(){return this.positions.slice(36,42)}getRightEye(){return this.positions.slice(42,48)}getMouth(){return this.positions.slice(48,68)}getRefPointsForAlignment(){return[this.getLeftEye(),this.getRightEye(),this.getMouth()].map(Px)}};function Vh(e){return e.detection instanceof gr}function l_(e,t){return{...e,detection:t}}function u_(){let e=window.fetch;if(!e)throw new Error("fetch - missing fetch implementation for browser environment");return{Canvas:HTMLCanvasElement,CanvasRenderingContext2D,Image:HTMLImageElement,ImageData,Video:HTMLVideoElement,createCanvasElement:()=>document.createElement("canvas"),createImageElement:()=>document.createElement("img"),createVideoElement:()=>document.createElement("video"),fetch:e,readFile:()=>{throw new Error("readFile - filesystem not available for browser environment")}}}function Wx(){return typeof global=="object"&&typeof process<"u"&&process.versions!=null&&process.versions.node!=null}function p_(e){let t="";if(!e&&Wx())try{e=gE("fs")}catch(n){t=n.toString()}return{readFile:e?n=>new Promise((r,a)=>{e.readFile(n,(s,i)=>s?a(s):r(i))}):()=>{throw new Error(`readFile - failed to require fs in nodejs environment with error: ${t}`)}}}function d_(){let e=global.Canvas||global.HTMLCanvasElement,t=global.Image||global.HTMLImageElement,n=global.Video||global.HTMLVideoElement,r=()=>{if(e)return new e;throw new Error("createCanvasElement - missing Canvas implementation for nodejs environment")},a=()=>{if(t)return new t;throw new Error("createImageElement - missing Image implementation for nodejs environment")},s=()=>{if(n)return new n;throw new Error("createVideoElement - missing Video implementation for nodejs environment")},i=global.fetch,o=p_();return{Canvas:e||class{},CanvasRenderingContext2D:global.CanvasRenderingContext2D||class{},Image:t||class{},ImageData:global.ImageData||class{},Video:global.HTMLVideoElement||class{},createCanvasElement:r,createImageElement:a,createVideoElement:s,fetch:i,...o}}function h_(){return typeof window=="object"&&typeof document<"u"&&typeof HTMLImageElement<"u"&&typeof HTMLCanvasElement<"u"&&typeof HTMLVideoElement<"u"&&typeof ImageData<"u"&&typeof CanvasRenderingContext2D<"u"}var Vt;function gpe(){if(!Vt)throw new Error("getEnv - environment is not defined, check isNodejs() and isBrowser()");return Vt}function Hf(e){Vt=e}function Vx(){return h_()?Hf(u_()):Wx()?Hf(d_()):null}function ype(e){if(Vt||Vx(),!Vt)throw new Error("monkeyPatch - environment is not defined, check isNodejs() and isBrowser()");let{Canvas:t=Vt.Canvas,Image:n=Vt.Image}=e;Vt.Canvas=t,Vt.Image=n,Vt.createCanvasElement=e.createCanvasElement||(()=>new t),Vt.createImageElement=e.createImageElement||(()=>new n),Vt.ImageData=e.ImageData||Vt.ImageData,Vt.Video=e.Video||Vt.Video,Vt.fetch=e.fetch||Vt.fetch,Vt.readFile=e.readFile||Vt.readFile}var bn={getEnv:gpe,setEnv:Hf,initialize:Vx,createBrowserEnv:u_,createFileSystem:p_,createNodejsEnv:d_,monkeyPatch:ype,isBrowser:h_,isNodejs:Wx};Vx();function Ux(e){return!bn.isNodejs()&&typeof e=="string"?document.getElementById(e):e}function ja(e){let{Canvas:t,CanvasRenderingContext2D:n}=bn.getEnv();if(e instanceof n)return e;let r=Ux(e);if(!(r instanceof t))throw new Error("resolveContext2d - expected canvas to be of instance of Canvas");let a=r.getContext("2d",{willReadFrequently:!0});if(!a)throw new Error("resolveContext2d - canvas 2d context is null");return a}var c_=(e=>(e.TOP_LEFT="TOP_LEFT",e.TOP_RIGHT="TOP_RIGHT",e.BOTTOM_LEFT="BOTTOM_LEFT",e.BOTTOM_RIGHT="BOTTOM_RIGHT",e))(c_||{}),Gx=class{constructor(e={}){let{anchorPosition:t,backgroundColor:n,fontColor:r,fontSize:a,fontStyle:s,padding:i}=e;this.anchorPosition=t||"TOP_LEFT",this.backgroundColor=n||"rgba(0, 0, 0, 0.5)",this.fontColor=r||"rgba(255, 255, 255, 1)",this.fontSize=a||14,this.fontStyle=s||"Georgia",this.padding=i||4}},gm=class{constructor(e,t,n={}){this.text=typeof e=="string"?[e]:e instanceof gm?e.text:e,this.anchor=t,this.options=new Gx(n)}measureWidth(e){let{padding:t}=this.options;return this.text.map(n=>e.measureText(n).width).reduce((n,r)=>n<r?r:n,0)+2*t}measureHeight(){let{fontSize:e,padding:t}=this.options;return this.text.length*e+2*t}getUpperLeft(e,t){let{anchorPosition:n}=this.options,r=n==="BOTTOM_RIGHT"||n==="TOP_RIGHT",a=n==="BOTTOM_LEFT"||n==="BOTTOM_RIGHT",s=this.measureWidth(e),i=this.measureHeight(),o=r?this.anchor.x-s:this.anchor.x,u=a?this.anchor.y-i:this.anchor.y;if(t){let{width:p,height:l}=t,d=Math.max(Math.min(o,p-s),0),h=Math.max(Math.min(u,l-i),0);return{x:d,y:h}}return{x:o,y:u}}draw(e){let t=Ux(e),n=ja(t),{backgroundColor:r,fontColor:a,fontSize:s,fontStyle:i,padding:o}=this.options;n.font=`${s}px ${i}`;let u=this.measureWidth(n),p=this.measureHeight();n.fillStyle=r;let l=this.getUpperLeft(n,t);n.fillRect(l.x,l.y,u,p),n.fillStyle=a,this.text.forEach((d,h)=>{let c=o+l.x,m=o+l.y+(h+1)*s;n.fillText(d,c,m)})}},m_=class{constructor(e={}){let{boxColor:t,lineWidth:n,label:r,drawLabelOptions:a}=e;this.boxColor=t||"rgba(0, 0, 255, 1)",this.lineWidth=n||2,this.label=r;let s={anchorPosition:"BOTTOM_LEFT",backgroundColor:this.boxColor};this.drawLabelOptions=new Gx({...s,...a})}},f_=class{constructor(e,t={}){this.box=new sn(e),this.options=new m_(t)}draw(e){let t=ja(e),{boxColor:n,lineWidth:r}=this.options,{x:a,y:s,width:i,height:o}=this.box;t.strokeStyle=n,t.lineWidth=r,t.strokeRect(a,s,i,o);let{label:u}=this.options;u&&new gm([u],{x:a-r/2,y:s},this.options.drawLabelOptions).draw(e)}};function bpe(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof gr?n.score:Vh(n)?n.detection.score:void 0,a=n instanceof gr?n.box:Vh(n)?n.detection.box:new sn(n),s=r?`${zx(r)}`:void 0;new f_(a,{label:s}).draw(e)})}function g_(e){let{Image:t,Video:n}=bn.getEnv();return e instanceof t&&e.complete||e instanceof n&&e.readyState>=3}function xpe(e){return new Promise((t,n)=>{(e instanceof bn.getEnv().Canvas||g_(e))&&t(null);function r(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),n(s))}function a(s){s.currentTarget&&(s.currentTarget.removeEventListener("load",a),s.currentTarget.removeEventListener("error",r),t(s))}e.addEventListener("load",a),e.addEventListener("error",r)})}function vpe(e){return new Promise((t,n)=>{e instanceof Blob||n(new Error("bufferToImage - expected buf to be of type: Blob"));let r=new FileReader;r.onload=()=>{typeof r.result!="string"&&n(new Error("bufferToImage - expected reader.result to be a string, in onload"));let a=bn.getEnv().createImageElement();a.onload=()=>t(a),a.onerror=n,a.src=r.result},r.onerror=n,r.readAsDataURL(e)})}function y_(e){let{Image:t,Video:n}=bn.getEnv();return e instanceof t?new Cs(e.naturalWidth,e.naturalHeight):e instanceof n?new Cs(e.videoWidth,e.videoHeight):new Cs(e.width,e.height)}function Uh({width:e,height:t}){let{createCanvasElement:n}=bn.getEnv(),r=n();return r.width=e,r.height=t,r}function b_(e,t){let{ImageData:n}=bn.getEnv();if(!(e instanceof n)&&!g_(e))throw new Error("createCanvasFromMedia - media has not finished loading yet");let{width:r,height:a}=t||y_(e),s=Uh({width:r,height:a});return e instanceof n?ja(s).putImageData(e,0,0):ja(s).drawImage(e,0,0,r,a),s}async function wpe(e,t){let n=t||bn.getEnv().createCanvasElement(),[r,a,s]=e.shape.slice(ua(e)?1:0),i=W(()=>e.as3D(r,a,s).toInt());return await ad.toPixels(i,n),i.dispose(),n}function u0(e){let{Image:t,Canvas:n,Video:r}=bn.getEnv();return e instanceof t||e instanceof n||e instanceof r}function kpe(e,t,n=!1){let{Image:r,Canvas:a}=bn.getEnv();if(!(e instanceof r||e instanceof a))throw new Error("imageToSquare - expected arg0 to be HTMLImageElement | HTMLCanvasElement");if(t<=0)return Uh({width:1,height:1});let s=y_(e),i=t/Math.max(s.height,s.width),o=i*s.width,u=i*s.height,p=Uh({width:t,height:t}),l=e instanceof a?e:b_(e),d=Math.abs(o-u)/2,h=n&&o<u?d:0,c=n&&u<o?d:0;return l.width>0&&l.height>0&&ja(p).drawImage(l,h,c,o,u),p}var Gh=class{constructor(e,t=!1){if(this._imageTensors=[],this._canvases=[],this._treatAsBatchInput=!1,this._inputDimensions=[],this._inputSize=0,!Array.isArray(e))throw new Error(`NetInput.constructor - expected inputs to be an Array of TResolvedNetInput or to be instanceof tf.Tensor4D, instead have ${e}`);this._treatAsBatchInput=t,this._batchSize=e.length,e.forEach((n,r)=>{if(wd(n)){this._imageTensors[r]=n,this._inputDimensions[r]=n.shape;return}if(ua(n)){let s=n.shape[0];if(s!==1)throw new Error(`NetInput - tf.Tensor4D with batchSize ${s} passed, but not supported in input array`);this._imageTensors[r]=n,this._inputDimensions[r]=n.shape.slice(1);return}let a=n instanceof bn.getEnv().Canvas?n:b_(n);this._canvases[r]=a,this._inputDimensions[r]=[a.height,a.width,3]})}get imageTensors(){return this._imageTensors}get canvases(){return this._canvases}get isBatchInput(){return this.batchSize>1||this._treatAsBatchInput}get batchSize(){return this._batchSize}get inputDimensions(){return this._inputDimensions}get inputSize(){return this._inputSize}get reshapedInputDimensions(){return al(this.batchSize,0,1).map((e,t)=>this.getReshapedInputDimensions(t))}getInput(e){return this.canvases[e]||this.imageTensors[e]}getInputDimensions(e){return this._inputDimensions[e]}getInputHeight(e){return this._inputDimensions[e][0]}getInputWidth(e){return this._inputDimensions[e][1]}getReshapedInputDimensions(e){if(typeof this.inputSize!="number")throw new Error("getReshapedInputDimensions - inputSize not set, toBatchTensor has not been called yet");let t=this.getInputWidth(e),n=this.getInputHeight(e);return a_({width:t,height:n},this.inputSize)}toBatchTensor(e,t=!0){return this._inputSize=e,W(()=>{let n=al(this.batchSize,0,1).map(r=>{let a=this.getInput(r);if(a instanceof Ae){let s=ua(a)?a:Qt(a);return s=hpe(s,t),(s.shape[1]!==e||s.shape[2]!==e)&&(s=Qn.resizeBilinear(s,[e,e],!1,!1)),s.as3D(e,e,3)}if(a instanceof bn.getEnv().Canvas)return ad.fromPixels(kpe(a,e,t));throw new Error(`toBatchTensor - at batchIdx ${r}, expected input to be instanceof tf.Tensor or instanceof HTMLCanvasElement, instead have ${a}`)});return Lt(n.map(r=>se(r,"float32"))).as4D(this.batchSize,e,e,3)})}};async function xn(e){if(e instanceof Gh)return e;let t=Array.isArray(e)?e:[e];if(!t.length)throw new Error("toNetInput - empty array passed as input");let n=a=>Array.isArray(e)?` at input index ${a}:`:"",r=t.map(Ux);return r.forEach((a,s)=>{if(!u0(a)&&!wd(a)&&!ua(a))throw typeof t[s]=="string"?new Error(`toNetInput -${n(s)} string passed, but could not resolve HTMLElement for element id ${t[s]}`):new Error(`toNetInput -${n(s)} expected media to be of type HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | tf.Tensor3D, or to be an element id`);if(ua(a)){let i=a.shape[0];if(i!==1)throw new Error(`toNetInput -${n(s)} tf.Tensor4D with batchSize ${i} passed, but not supported in input array`)}}),await Promise.all(r.map(a=>u0(a)&&xpe(a))),new Gh(r,Array.isArray(e))}async function Hx(e,t){let{Canvas:n}=bn.getEnv(),r=e;if(!(e instanceof n)){let s=await xn(e);if(s.batchSize>1)throw new Error("extractFaces - batchSize > 1 not supported");let i=s.getInput(0);r=i instanceof n?i:await wpe(i)}let a=ja(r);return t.map(s=>s instanceof gr?s.forSize(r.width,r.height).box.floor():s).map(s=>s.clipAtImageBorders(r.width,r.height)).map(({x:s,y:i,width:o,height:u})=>{let p=Uh({width:o,height:u});return o>0&&u>0&&ja(p).putImageData(a.getImageData(s,i,o,u),0,0),p})}async function jx(e,t){if(!wd(e)&&!ua(e))throw new Error("extractFaceTensors - expected image tensor to be 3D or 4D");if(ua(e)&&e.shape[0]>1)throw new Error("extractFaceTensors - batchSize > 1 not supported");return W(()=>{let[n,r,a]=e.shape.slice(ua(e)?1:0);return t.map(s=>s instanceof gr?s.forSize(r,n).box:s).map(s=>s.clipAtImageBorders(r,n)).filter(s=>s.width>0&&s.height>0).map(({x:s,y:i,width:o,height:u})=>mu(e.as3D(n,r,a),[i,s,0],[u,o,a]))})}async function x_(e,t){let{fetch:n}=bn.getEnv(),r=await n(e,t);if(!(r.status<400))throw new Error(`failed to fetch: (${r.status}) ${r.statusText}, from url: ${r.url}`);return r}async function p0(e){let t=await x_(e),n=await t.blob();if(!n.type.startsWith("image/"))throw new Error(`fetchImage - expected blob type to be of type image/*, instead have: ${n.type}, for url: ${t.url}`);return vpe(n)}async function Ipe(e){return(await x_(e)).json()}function v_(e,t){let n=`${t}-weights_manifest.json`;if(!e)return{modelBaseUri:"",manifestUri:n};if(e==="/")return{modelBaseUri:"/",manifestUri:`/${n}`};let r=e.startsWith("http://")?"http://":e.startsWith("https://")?"https://":"";e=e.replace(r,"");let a=e.split("/").filter(o=>o),s=e.endsWith(".json")?a[a.length-1]:n,i=r+(e.endsWith(".json")?a.slice(0,a.length-1):a).join("/");return i=e.startsWith("/")?`/${i}`:i,{modelBaseUri:i,manifestUri:i==="/"?`/${s}`:`${i}/${s}`}}async function Spe(e,t){let{manifestUri:n,modelBaseUri:r}=v_(e,t),a=await Ipe(n);return nn.loadWeights(a,r)}var os=class{constructor(e){this._params=void 0,this._paramMappings=[],this._name=e}get params(){return this._params}get paramMappings(){return this._paramMappings}get isLoaded(){return!!this.params}getParamFromPath(e){let{obj:t,objProp:n}=this.traversePropertyPath(e);return t[n]}reassignParamFromPath(e,t){let{obj:n,objProp:r}=this.traversePropertyPath(e);n[r].dispose(),n[r]=t}getParamList(){return this._paramMappings.map(({paramPath:e})=>({path:e,tensor:this.getParamFromPath(e)}))}getTrainableParams(){return this.getParamList().filter(e=>e.tensor instanceof Fs)}getFrozenParams(){return this.getParamList().filter(e=>!(e.tensor instanceof Fs))}variable(){this.getFrozenParams().forEach(({path:e,tensor:t})=>{this.reassignParamFromPath(e,t.variable())})}freeze(){this.getTrainableParams().forEach(({path:e,tensor:t})=>{let n=mn(t.dataSync());t.dispose(),this.reassignParamFromPath(e,n)})}dispose(e=!0){this.getParamList().forEach(t=>{if(e&&t.tensor.isDisposed)throw new Error(`param tensor has already been disposed for path ${t.path}`);t.tensor.dispose()}),this._params=void 0}serializeParams(){return new Float32Array(this.getParamList().map(({tensor:e})=>Array.from(e.dataSync())).reduce((e,t)=>e.concat(t)))}async load(e){if(e instanceof Float32Array){this.extractWeights(e);return}await this.loadFromUri(e)}async loadFromUri(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromUri - expected model uri`);let t=await Spe(e,this.getDefaultModelName());this.loadFromWeightMap(t)}async loadFromDisk(e){if(e&&typeof e!="string")throw new Error(`${this._name}.loadFromDisk - expected model file path`);let{readFile:t}=bn.getEnv(),{manifestUri:n,modelBaseUri:r}=v_(e,this.getDefaultModelName()),a=u=>Promise.all(u.map(p=>t(p).then(l=>l.buffer))),s=nn.weightsLoaderFactory(a),i=JSON.parse((await t(n)).toString()),o=await s(i,r);this.loadFromWeightMap(o)}loadFromWeightMap(e){let{paramMappings:t,params:n}=this.extractParamsFromWeightMap(e);this._paramMappings=t,this._params=n}extractWeights(e){let{paramMappings:t,params:n}=this.extractParams(e);this._paramMappings=t,this._params=n}traversePropertyPath(e){if(!this.params)throw new Error("traversePropertyPath - model has no loaded params");let t=e.split("/").reduce((a,s)=>{if(!a.nextObj.hasOwnProperty(s))throw new Error(`traversePropertyPath - object does not have property ${s}, for path ${e}`);return{obj:a.nextObj,objProp:s,nextObj:a.nextObj[s]}},{nextObj:this.params}),{obj:n,objProp:r}=t;if(!n||!r||!(n[r]instanceof Ae))throw new Error(`traversePropertyPath - parameter is not a tensor, for path ${e}`);return{obj:n,objProp:r}}};function nr(e,t,n){return W(()=>{let r=cu(e,t.depthwise_filter,t.pointwise_filter,n,"same");return r=J(r,t.bias),r})}function Vm(e,t,n=!1){return W(()=>{let r=et(n?J(fn(e,t.conv0.filters,[2,2],"same"),t.conv0.bias):nr(e,t.conv0,[2,2])),a=nr(r,t.conv1,[1,1]),s=et(J(r,a)),i=nr(s,t.conv2,[1,1]);return et(J(r,J(a,i)))})}function Qd(e,t,n=!1,r=!0){return W(()=>{let a=et(n?J(fn(e,t.conv0.filters,r?[2,2]:[1,1],"same"),t.conv0.bias):nr(e,t.conv0,r?[2,2]:[1,1])),s=nr(a,t.conv1,[1,1]),i=et(J(a,s)),o=nr(i,t.conv2,[1,1]),u=et(J(a,J(s,o))),p=nr(u,t.conv3,[1,1]);return et(J(a,J(s,J(o,p))))})}function Yu(e,t,n="same",r=!1){return W(()=>{let a=J(fn(e,t.filters,[1,1],n),t.bias);return r?et(a):a})}function ls(e,t){Object.keys(e).forEach(n=>{t.some(r=>r.originalPath===n)||e[n].dispose()})}function qx(e,t){return(n,r,a,s)=>{let i=Pa(e(n*r*a*a),[a,a,n,r]),o=Qe(e(r));return t.push({paramPath:`${s}/filters`},{paramPath:`${s}/bias`}),{filters:i,bias:o}}}function w_(e,t){return(n,r,a)=>{let s=Wr(e(n*r),[n,r]),i=Qe(e(r));return t.push({paramPath:`${a}/weights`},{paramPath:`${a}/bias`}),{weights:s,bias:i}}}var k_=class{constructor(e,t,n){this.depthwise_filter=e,this.pointwise_filter=t,this.bias=n}};function Kx(e,t){return(n,r,a)=>{let s=Pa(e(9*n),[3,3,n,1]),i=Pa(e(n*r),[1,1,n,r]),o=Qe(e(r));return t.push({paramPath:`${a}/depthwise_filter`},{paramPath:`${a}/pointwise_filter`},{paramPath:`${a}/bias`}),new k_(s,i,o)}}function Xx(e){return t=>{let n=e(`${t}/depthwise_filter`,4),r=e(`${t}/pointwise_filter`,4),a=e(`${t}/bias`,1);return new k_(n,r,a)}}function No(e,t){return(n,r,a)=>{let s=e[n];if(!_u(s,r))throw new Error(`expected weightMap[${n}] to be a Tensor${r}D, instead have ${s}`);return t.push({originalPath:n,paramPath:a||n}),s}}function us(e){let t=e;function n(a){let s=t.slice(0,a);return t=t.slice(a),s}function r(){return t}return{extractWeights:n,getRemainingWeights:r}}function I_(e,t){let n=qx(e,t),r=Kx(e,t);function a(i,o,u,p=!1){let l=p?n(i,o,3,`${u}/conv0`):r(i,o,`${u}/conv0`),d=r(o,o,`${u}/conv1`),h=r(o,o,`${u}/conv2`);return{conv0:l,conv1:d,conv2:h}}function s(i,o,u,p=!1){let{conv0:l,conv1:d,conv2:h}=a(i,o,u,p),c=r(o,o,`${u}/conv3`);return{conv0:l,conv1:d,conv2:h,conv3:c}}return{extractDenseBlock3Params:a,extractDenseBlock4Params:s}}function Npe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=us(e),{extractDenseBlock4Params:a}=I_(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2"),u=a(128,256,"dense3");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o,dense3:u}}}function S_(e){return t=>{let n=e(`${t}/filters`,4),r=e(`${t}/bias`,1);return{filters:n,bias:r}}}function N_(e,t){let n=No(e,t),r=S_(n),a=Xx(n);function s(o,u=!1){let p=u?r(`${o}/conv0`):a(`${o}/conv0`),l=a(`${o}/conv1`),d=a(`${o}/conv2`);return{conv0:p,conv1:l,conv2:d}}function i(o,u=!1){let p=u?r(`${o}/conv0`):a(`${o}/conv0`),l=a(`${o}/conv1`),d=a(`${o}/conv2`),h=a(`${o}/conv3`);return{conv0:p,conv1:l,conv2:d,conv3:h}}return{extractDenseBlock3Params:s,extractDenseBlock4Params:i}}function Tpe(e){let t=[],{extractDenseBlock4Params:n}=N_(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2"),dense3:n("dense3")};return ls(e,t),{params:r,paramMappings:t}}var T_=class extends os{constructor(){super("FaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceFeatureExtractor - load model before inference");return W(()=>{let n=se(e.toBatchTensor(112,!0),"float32"),r=kd(n,[122.782,117.001,104.298]).div(255),a=Qd(r,t.dense0,!0);return a=Qd(a,t.dense1),a=Qd(a,t.dense2),a=Qd(a,t.dense3),a=ma(a,[7,7],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await xn(e))}getDefaultModelName(){return"face_feature_extractor_model"}extractParamsFromWeightMap(e){return Tpe(e)}extractParams(e){return Npe(e)}};function jf(e,t){return W(()=>J(Oe(e,t.weights),t.bias))}function Cpe(e,t,n){let r=[],{extractWeights:a,getRemainingWeights:s}=us(e),i=w_(a,r)(t,n,"fc");if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{paramMappings:r,params:{fc:i}}}function _pe(e){let t=[],n=No(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:r("fc")};return ls(e,t),{params:a,paramMappings:t}}function C_(e){let t={},n={};return Object.keys(e).forEach(r=>{let a=r.startsWith("fc")?n:t;a[r]=e[r]}),{featureExtractorMap:t,classifierMap:n}}var __=class extends os{constructor(e,t){super(e),this._faceFeatureExtractor=t}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof Gh?this.faceFeatureExtractor.forwardInput(e):e;return jf(n.as2D(n.shape[0],-1),t.fc)})}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Cpe(e,this.getClassifierChannelsIn(),this.getClassifierChannelsOut())}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=C_(e);return this.faceFeatureExtractor.loadFromWeightMap(t),_pe(n)}extractParams(e){let t=this.getClassifierChannelsIn(),n=this.getClassifierChannelsOut(),r=n*t+n,a=e.slice(0,e.length-r),s=e.slice(e.length-r);return this.faceFeatureExtractor.extractWeights(a),this.extractClassifierParams(s)}},d0=["neutral","happy","sad","angry","fearful","disgusted","surprised"],Zx=class{constructor(e){if(this.neutral=0,this.happy=0,this.sad=0,this.angry=0,this.fearful=0,this.disgusted=0,this.surprised=0,e.length!==7)throw new Error(`FaceExpressions.constructor - expected probabilities.length to be 7, have: ${e.length}`);d0.forEach((t,n)=>{this[t]=e[n]})}asSortedArray(){return d0.map(e=>({expression:e,probability:this[e]})).sort((e,t)=>t.probability-e.probability)}},Epe=class extends __{constructor(e=new T_){super("FaceExpressionNet",e)}forwardInput(e){return W(()=>ts(this.runNet(e)))}async forward(e){return this.forwardInput(await xn(e))}async predictExpressions(e){let t=await xn(e),n=await this.forwardInput(t),r=await Promise.all(Nt(n).map(async s=>{let i=s.dataSync();return s.dispose(),i}));n.dispose();let a=r.map(s=>new Zx(s));return t.isBatchInput?a:a[0]}getDefaultModelName(){return"face_expression_model"}getClassifierChannelsIn(){return 256}getClassifierChannelsOut(){return 7}};function $pe(e){return e.expressions instanceof Zx}function E_(e,t){return{...e,expressions:t}}function Ape(e,t,n=.1,r){(Array.isArray(t)?t:[t]).forEach(a=>{let s=a instanceof Zx?a:$pe(a)?a.expressions:void 0;if(!s)throw new Error("drawFaceExpressions - expected faceExpressions to be FaceExpressions | WithFaceExpressions<{}> or array thereof");let i=s.asSortedArray().filter(u=>u.probability>n),o=Vh(a)?a.detection.box.bottomLeft:r||new Xe(0,0);new gm(i.map(u=>`${u.expression} (${zx(u.probability)})`),o).draw(e)})}function $_(e){return Vh(e)&&e.landmarks instanceof Wh&&e.unshiftedLandmarks instanceof Wh&&e.alignedRect instanceof gr}function Fpe(e){let t=u=>u*180/Math.PI,n=(u,p)=>Math.sqrt((u._x-p._x)**2+(u._y-p._y)**2),r={roll:void 0,pitch:void 0,yaw:void 0},a=(u,p,l)=>{let d=Math.floor(u._x-p._x),h=Math.floor(p._x-l._x);return d-h},s=(u,p)=>{let l=Math.hypot(p._x-u._x,p._y-u._y),d=p._y-u._y,h=Math.asin(d/l),c=t(h),m=Math.floor(90-c),f=p._x-u._x<0?-1:1;return m*f},i=(u,p,l)=>{let d=n(u,l),h={_x:(u._x+l._x)/2,_y:(u._y+l._y)/2},c=n(p,h),m=Math.atan(c/d),f=Math.floor(t(m)),g=h._y-p._y<0?-1:1;return f*g};if(!e||!e._positions||e._positions.length!==68)return r;let o=e._positions;return r.roll=s(o[27],o[66]),r.pitch=i(o[14],o[30],o[2]),r.yaw=a(o[14],o[33],o[2]),r}function A_(e,t){let{box:n}=e.detection,r=t.shiftBy(n.x,n.y),a=r.align(),{imageDims:s}=e.detection,i=new gr(e.detection.score,a.rescale(s.reverse()),s),o=Fpe(t);return{...e,landmarks:r,unshiftedLandmarks:t,alignedRect:i,angle:o}}var F_=class{constructor(e={}){let{drawLines:t=!0,drawPoints:n=!0,lineWidth:r,lineColor:a,pointSize:s,pointColor:i}=e;this.drawLines=t,this.drawPoints=n,this.lineWidth=r||1,this.pointSize=s||2,this.lineColor=a||"rgba(0, 255, 255, 1)",this.pointColor=i||"rgba(255, 0, 255, 1)"}},R_=class{constructor(e,t={}){this.faceLandmarks=e,this.options=new F_(t)}draw(e){let t=ja(e),{drawLines:n,drawPoints:r,lineWidth:a,lineColor:s,pointSize:i,pointColor:o}=this.options;if(n&&this.faceLandmarks instanceof o_&&(t.strokeStyle=s,t.lineWidth=a,Na(t,this.faceLandmarks.getJawOutline()),Na(t,this.faceLandmarks.getLeftEyeBrow()),Na(t,this.faceLandmarks.getRightEyeBrow()),Na(t,this.faceLandmarks.getNose()),Na(t,this.faceLandmarks.getLeftEye(),!0),Na(t,this.faceLandmarks.getRightEye(),!0),Na(t,this.faceLandmarks.getMouth(),!0)),r){t.strokeStyle=o,t.fillStyle=o;let u=p=>{t.beginPath(),t.arc(p.x,p.y,i,0,2*Math.PI),t.fill()};this.faceLandmarks.positions.forEach(u)}}};function Rpe(e,t){(Array.isArray(t)?t:[t]).forEach(n=>{let r=n instanceof Wh?n:$_(n)?n.landmarks:void 0;if(!r)throw new Error("drawFaceLandmarks - expected faceExpressions to be FaceLandmarks | WithFaceLandmarks<WithFaceDetection<{}>> or array thereof");new R_(r).draw(e)})}function Dpe(e,t){let n=qx(e,t),r=Kx(e,t);function a(i,o,u){let p=r(i,o,`${u}/separable_conv0`),l=r(o,o,`${u}/separable_conv1`),d=n(i,o,1,`${u}/expansion_conv`);return{separable_conv0:p,separable_conv1:l,expansion_conv:d}}function s(i,o){let u=r(i,i,`${o}/separable_conv0`),p=r(i,i,`${o}/separable_conv1`),l=r(i,i,`${o}/separable_conv2`);return{separable_conv0:u,separable_conv1:p,separable_conv2:l}}return{extractConvParams:n,extractSeparableConvParams:r,extractReductionBlockParams:a,extractMainBlockParams:s}}function Mpe(e,t){let n=[],{extractWeights:r,getRemainingWeights:a}=us(e),{extractConvParams:s,extractSeparableConvParams:i,extractReductionBlockParams:o,extractMainBlockParams:u}=Dpe(r,n),p=s(3,32,3,"entry_flow/conv_in"),l=o(32,64,"entry_flow/reduction_block_0"),d=o(64,128,"entry_flow/reduction_block_1"),h={conv_in:p,reduction_block_0:l,reduction_block_1:d},c={};al(t,0,1).forEach(y=>{c[`main_block_${y}`]=u(128,`middle_flow/main_block_${y}`)});let m=o(128,256,"exit_flow/reduction_block"),f=i(256,512,"exit_flow/separable_conv"),g={reduction_block:m,separable_conv:f};if(a().length!==0)throw new Error(`weights remaing after extract: ${a().length}`);return{paramMappings:n,params:{entry_flow:h,middle_flow:c,exit_flow:g}}}function Ope(e,t){let n=No(e,t),r=S_(n),a=Xx(n);function s(o){let u=a(`${o}/separable_conv0`),p=a(`${o}/separable_conv1`),l=r(`${o}/expansion_conv`);return{separable_conv0:u,separable_conv1:p,expansion_conv:l}}function i(o){let u=a(`${o}/separable_conv0`),p=a(`${o}/separable_conv1`),l=a(`${o}/separable_conv2`);return{separable_conv0:u,separable_conv1:p,separable_conv2:l}}return{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}}function Lpe(e,t){let n=[],{extractConvParams:r,extractSeparableConvParams:a,extractReductionBlockParams:s,extractMainBlockParams:i}=Ope(e,n),o=r("entry_flow/conv_in"),u=s("entry_flow/reduction_block_0"),p=s("entry_flow/reduction_block_1"),l={conv_in:o,reduction_block_0:u,reduction_block_1:p},d={};al(t,0,1).forEach(f=>{d[`main_block_${f}`]=i(`middle_flow/main_block_${f}`)});let h=s("exit_flow/reduction_block"),c=a("exit_flow/separable_conv"),m={reduction_block:h,separable_conv:c};return ls(e,n),{params:{entry_flow:l,middle_flow:d,exit_flow:m},paramMappings:n}}function D_(e,t,n){return J(fn(e,t.filters,n,"same"),t.bias)}function Um(e,t,n=!0){let r=n?et(e):e;return r=nr(r,t.separable_conv0,[1,1]),r=nr(et(r),t.separable_conv1,[1,1]),r=Ut(r,[3,3],[2,2],"same"),r=J(r,D_(e,t.expansion_conv,[2,2])),r}function zpe(e,t){let n=nr(et(e),t.separable_conv0,[1,1]);return n=nr(et(n),t.separable_conv1,[1,1]),n=nr(et(n),t.separable_conv2,[1,1]),n=J(n,e),n}var Ppe=class extends os{constructor(e){super("TinyXception"),this._numMainBlocks=e}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyXception - load model before inference");return W(()=>{let n=se(e.toBatchTensor(112,!0),"float32"),r=kd(n,[122.782,117.001,104.298]).div(255),a=et(D_(r,t.entry_flow.conv_in,[2,2]));return a=Um(a,t.entry_flow.reduction_block_0,!1),a=Um(a,t.entry_flow.reduction_block_1),al(this._numMainBlocks,0,1).forEach(s=>{a=zpe(a,t.middle_flow[`main_block_${s}`])}),a=Um(a,t.exit_flow.reduction_block),a=et(nr(a,t.exit_flow.separable_conv,[1,1])),a})}async forward(e){return this.forwardInput(await xn(e))}getDefaultModelName(){return"tiny_xception_model"}extractParamsFromWeightMap(e){return Lpe(e,this._numMainBlocks)}extractParams(e){return Mpe(e,this._numMainBlocks)}};function Bpe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=us(e),a=w_(n,t),s=a(512,1,"fc/age"),i=a(512,2,"fc/gender");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{fc:{age:s,gender:i}}}}function Wpe(e){let t=[],n=No(e,t);function r(s){let i=n(`${s}/weights`,2),o=n(`${s}/bias`,1);return{weights:i,bias:o}}let a={fc:{age:r("fc/age"),gender:r("fc/gender")}};return ls(e,t),{params:a,paramMappings:t}}var Vpe=(e=>(e.FEMALE="female",e.MALE="male",e))(Vpe||{}),Upe=class extends os{constructor(e=new Ppe(2)){super("AgeGenderNet"),this._faceFeatureExtractor=e}get faceFeatureExtractor(){return this._faceFeatureExtractor}runNet(e){let{params:t}=this;if(!t)throw new Error(`${this._name} - load model before inference`);return W(()=>{let n=e instanceof Gh?this.faceFeatureExtractor.forwardInput(e):e,r=ma(n,[7,7],[2,2],"valid").as2D(n.shape[0],-1),a=jf(r,t.fc.age).as1D(),s=jf(r,t.fc.gender);return{age:a,gender:s}})}forwardInput(e){return W(()=>{let{age:t,gender:n}=this.runNet(e);return{age:t,gender:ts(n)}})}async forward(e){return this.forwardInput(await xn(e))}async predictAgeAndGender(e){let t=await xn(e),n=await this.forwardInput(t),r=Nt(n.age),a=Nt(n.gender),s=r.map((o,u)=>({ageTensor:o,genderTensor:a[u]})),i=await Promise.all(s.map(async({ageTensor:o,genderTensor:u})=>{let p=o.dataSync()[0],l=u.dataSync()[0],d=l>.5,h=d?"male":"female",c=d?l:1-l;return o.dispose(),u.dispose(),{age:p,gender:h,genderProbability:c}}));return n.age.dispose(),n.gender.dispose(),t.isBatchInput?i:i[0]}getDefaultModelName(){return"age_gender_model"}dispose(e=!0){this.faceFeatureExtractor.dispose(e),super.dispose(e)}loadClassifierParams(e){let{params:t,paramMappings:n}=this.extractClassifierParams(e);this._params=t,this._paramMappings=n}extractClassifierParams(e){return Bpe(e)}extractParamsFromWeightMap(e){let{featureExtractorMap:t,classifierMap:n}=C_(e);return this.faceFeatureExtractor.loadFromWeightMap(t),Wpe(n)}extractParams(e){let t=e.slice(0,e.length-1539),n=e.slice(e.length-1539);return this.faceFeatureExtractor.extractWeights(t),this.extractClassifierParams(n)}},M_=class extends __{postProcess(e,t,n){let r=n.map(({width:s,height:i})=>{let o=t/Math.max(i,s);return{width:s*o,height:i*o}}),a=r.length;return W(()=>{let s=(p,l)=>Lt([Un([68],p,"float32"),Un([68],l,"float32")],1).as2D(1,136).as1D(),i=(p,l)=>{let{width:d,height:h}=r[p];return l(d,h)?Math.abs(d-h)/2:0},o=p=>i(p,(l,d)=>l<d),u=p=>i(p,(l,d)=>d<l);return e.mul(Un([a,136],t,"float32")).sub(Lt(Array.from(Array(a),(p,l)=>s(o(l),u(l))))).div(Lt(Array.from(Array(a),(p,l)=>s(r[l].width,r[l].height))))})}forwardInput(e){return W(()=>{let t=this.runNet(e);return this.postProcess(t,e.inputSize,e.inputDimensions.map(([n,r])=>({height:n,width:r})))})}async forward(e){return this.forwardInput(await xn(e))}async detectLandmarks(e){let t=await xn(e),n=W(()=>Nt(this.forwardInput(t))),r=await Promise.all(n.map(async(a,s)=>{let i=Array.from(a.dataSync()),o=i.filter((p,l)=>Uf(l)),u=i.filter((p,l)=>!Uf(l));return new o_(Array(68).fill(0).map((p,l)=>new Xe(o[l],u[l])),{height:t.getInputHeight(s),width:t.getInputWidth(s)})}));return n.forEach(a=>a.dispose()),t.isBatchInput?r:r[0]}getClassifierChannelsOut(){return 136}},Gpe=class extends M_{constructor(e=new T_){super("FaceLandmark68Net",e)}getDefaultModelName(){return"face_landmark_68_model"}getClassifierChannelsIn(){return 256}};function Hpe(e){let t=[],{extractDenseBlock3Params:n}=N_(e,t),r={dense0:n("dense0",!0),dense1:n("dense1"),dense2:n("dense2")};return ls(e,t),{params:r,paramMappings:t}}function jpe(e){let t=[],{extractWeights:n,getRemainingWeights:r}=us(e),{extractDenseBlock3Params:a}=I_(n,t),s=a(3,32,"dense0",!0),i=a(32,64,"dense1"),o=a(64,128,"dense2");if(r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{paramMappings:t,params:{dense0:s,dense1:i,dense2:o}}}var qpe=class extends os{constructor(){super("TinyFaceFeatureExtractor")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("TinyFaceFeatureExtractor - load model before inference");return W(()=>{let n=se(e.toBatchTensor(112,!0),"float32"),r=kd(n,[122.782,117.001,104.298]).div(255),a=Vm(r,t.dense0,!0);return a=Vm(a,t.dense1),a=Vm(a,t.dense2),a=ma(a,[14,14],[2,2],"valid"),a})}async forward(e){return this.forwardInput(await xn(e))}getDefaultModelName(){return"face_feature_extractor_tiny_model"}extractParamsFromWeightMap(e){return Hpe(e)}extractParams(e){return jpe(e)}},Kpe=class extends M_{constructor(e=new qpe){super("FaceLandmark68TinyNet",e)}getDefaultModelName(){return"face_landmark_68_tiny_model"}getClassifierChannelsIn(){return 128}};function Xpe(e,t){return J(z(e,t.weights),t.biases)}function Jx(e,t,n,r,a="same"){let{filters:s,bias:i}=t.conv,o=fn(e,s,n,a);return o=J(o,i),o=Xpe(o,t.scale),r?et(o):o}function Zpe(e,t){return Jx(e,t,[1,1],!0)}function O_(e,t){return Jx(e,t,[1,1],!1)}function L_(e,t){return Jx(e,t,[2,2],!0,"valid")}function Jpe(e,t){function n(o,u,p){let l=e(o),d=l.length/(u*p*p);if(r_(d))throw new Error(`depth has to be an integer: ${d}, weights.length: ${l.length}, numFilters: ${u}, filterSize: ${p}`);return W(()=>ze(Pa(l,[u,d,p,p]),[2,3,1,0]))}function r(o,u,p,l){let d=n(o,u,p),h=Qe(e(u));return t.push({paramPath:`${l}/filters`},{paramPath:`${l}/bias`}),{filters:d,bias:h}}function a(o,u){let p=Qe(e(o)),l=Qe(e(o));return t.push({paramPath:`${u}/weights`},{paramPath:`${u}/biases`}),{weights:p,biases:l}}function s(o,u,p,l){let d=r(o,u,p,`${l}/conv`),h=a(u,`${l}/scale`);return{conv:d,scale:h}}function i(o,u,p,l,d=!1){let h=s((d?.5:1)*o,u,p,`${l}/conv1`),c=s(o,u,p,`${l}/conv2`);return{conv1:h,conv2:c}}return{extractConvLayerParams:s,extractResidualLayerParams:i}}function Ype(e){let{extractWeights:t,getRemainingWeights:n}=us(e),r=[],{extractConvLayerParams:a,extractResidualLayerParams:s}=Jpe(t,r),i=a(4704,32,7,"conv32_down"),o=s(9216,32,3,"conv32_1"),u=s(9216,32,3,"conv32_2"),p=s(9216,32,3,"conv32_3"),l=s(36864,64,3,"conv64_down",!0),d=s(36864,64,3,"conv64_1"),h=s(36864,64,3,"conv64_2"),c=s(36864,64,3,"conv64_3"),m=s(147456,128,3,"conv128_down",!0),f=s(147456,128,3,"conv128_1"),g=s(147456,128,3,"conv128_2"),y=s(589824,256,3,"conv256_down",!0),b=s(589824,256,3,"conv256_1"),x=s(589824,256,3,"conv256_2"),w=s(589824,256,3,"conv256_down_out"),I=W(()=>ze(Wr(t(256*128),[128,256]),[1,0]));if(r.push({paramPath:"fc"}),n().length!==0)throw new Error(`weights remaing after extract: ${n().length}`);return{params:{conv32_down:i,conv32_1:o,conv32_2:u,conv32_3:p,conv64_down:l,conv64_1:d,conv64_2:h,conv64_3:c,conv128_down:m,conv128_1:f,conv128_2:g,conv256_down:y,conv256_1:b,conv256_2:x,conv256_down_out:w,fc:I},paramMappings:r}}function Qpe(e,t){let n=No(e,t);function r(i){let o=n(`${i}/scale/weights`,1),u=n(`${i}/scale/biases`,1);return{weights:o,biases:u}}function a(i){let o=n(`${i}/conv/filters`,4),u=n(`${i}/conv/bias`,1),p=r(i);return{conv:{filters:o,bias:u},scale:p}}function s(i){return{conv1:a(`${i}/conv1`),conv2:a(`${i}/conv2`)}}return{extractConvLayerParams:a,extractResidualLayerParams:s}}function ede(e){let t=[],{extractConvLayerParams:n,extractResidualLayerParams:r}=Qpe(e,t),a=n("conv32_down"),s=r("conv32_1"),i=r("conv32_2"),o=r("conv32_3"),u=r("conv64_down"),p=r("conv64_1"),l=r("conv64_2"),d=r("conv64_3"),h=r("conv128_down"),c=r("conv128_1"),m=r("conv128_2"),f=r("conv256_down"),g=r("conv256_1"),y=r("conv256_2"),b=r("conv256_down_out"),{fc:x}=e;if(t.push({originalPath:"fc",paramPath:"fc"}),!n_(x))throw new Error(`expected weightMap[fc] to be a Tensor2D, instead have ${x}`);let w={conv32_down:a,conv32_1:s,conv32_2:i,conv32_3:o,conv64_down:u,conv64_1:p,conv64_2:l,conv64_3:d,conv128_down:h,conv128_1:c,conv128_2:m,conv256_down:f,conv256_1:g,conv256_2:y,conv256_down_out:b,fc:x};return ls(e,t),{params:w,paramMappings:t}}function Rr(e,t){let n=Zpe(e,t.conv1);return n=O_(n,t.conv2),n=J(n,e),n=et(n),n}function eh(e,t){let n=L_(e,t.conv1);n=O_(n,t.conv2);let r=ma(e,2,2,"valid"),a=vt(r.shape),s=r.shape[3]!==n.shape[3];if(r.shape[1]!==n.shape[1]||r.shape[2]!==n.shape[2]){let i=[...n.shape];i[1]=1;let o=vt(i);n=at([n,o],1);let u=[...n.shape];u[2]=1;let p=vt(u);n=at([n,p],2)}return r=s?at([r,a],3):r,n=J(r,n),n=et(n),n}var tde=class extends os{constructor(){super("FaceRecognitionNet")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("FaceRecognitionNet - load model before inference");return W(()=>{let n=se(e.toBatchTensor(150,!0),"float32"),r=kd(n,[122.782,117.001,104.298]).div(255),a=L_(r,t.conv32_down);a=Ut(a,3,2,"valid"),a=Rr(a,t.conv32_1),a=Rr(a,t.conv32_2),a=Rr(a,t.conv32_3),a=eh(a,t.conv64_down),a=Rr(a,t.conv64_1),a=Rr(a,t.conv64_2),a=Rr(a,t.conv64_3),a=eh(a,t.conv128_down),a=Rr(a,t.conv128_1),a=Rr(a,t.conv128_2),a=eh(a,t.conv256_down),a=Rr(a,t.conv256_1),a=Rr(a,t.conv256_2),a=eh(a,t.conv256_down_out);let s=a.mean([1,2]);return Oe(s,t.fc)})}async forward(e){return this.forwardInput(await xn(e))}async computeFaceDescriptor(e){var t;if((t=e==null?void 0:e.shape)!=null&&t.some(s=>s<=0))return new Float32Array(128);let n=await xn(e),r=W(()=>Nt(this.forwardInput(n))),a=await Promise.all(r.map(s=>s.data()));return r.forEach(s=>s.dispose()),n.isBatchInput?a:a[0]}getDefaultModelName(){return"face_recognition_model"}extractParamsFromWeightMap(e){return ede(e)}extractParams(e){return Ype(e)}};function z_(e,t){return{...e,descriptor:t}}function P_(e,t){return{...e,age:t}}function B_(e,t,n){return{...e,gender:t,genderProbability:n}}function nde(e,t){function n(u,p){let l=Pa(e(9*u),[3,3,u,1]),d=Qe(e(u)),h=Qe(e(u)),c=Qe(e(u)),m=Qe(e(u));return t.push({paramPath:`${p}/filters`},{paramPath:`${p}/batch_norm_scale`},{paramPath:`${p}/batch_norm_offset`},{paramPath:`${p}/batch_norm_mean`},{paramPath:`${p}/batch_norm_variance`}),{filters:l,batch_norm_scale:d,batch_norm_offset:h,batch_norm_mean:c,batch_norm_variance:m}}function r(u,p,l,d,h){let c=Pa(e(u*p*l*l),[l,l,u,p]),m=Qe(e(p));return t.push({paramPath:`${d}/filters`},{paramPath:`${d}/${h?"batch_norm_offset":"bias"}`}),{filters:c,bias:m}}function a(u,p,l,d){let{filters:h,bias:c}=r(u,p,l,d,!0);return{filters:h,batch_norm_offset:c}}function s(u,p,l){let d=n(u,`${l}/depthwise_conv`),h=a(u,p,1,`${l}/pointwise_conv`);return{depthwise_conv:d,pointwise_conv:h}}function i(){let u=a(3,32,3,"mobilenetv1/conv_0"),p=s(32,64,"mobilenetv1/conv_1"),l=s(64,128,"mobilenetv1/conv_2"),d=s(128,128,"mobilenetv1/conv_3"),h=s(128,256,"mobilenetv1/conv_4"),c=s(256,256,"mobilenetv1/conv_5"),m=s(256,512,"mobilenetv1/conv_6"),f=s(512,512,"mobilenetv1/conv_7"),g=s(512,512,"mobilenetv1/conv_8"),y=s(512,512,"mobilenetv1/conv_9"),b=s(512,512,"mobilenetv1/conv_10"),x=s(512,512,"mobilenetv1/conv_11"),w=s(512,1024,"mobilenetv1/conv_12"),I=s(1024,1024,"mobilenetv1/conv_13");return{conv_0:u,conv_1:p,conv_2:l,conv_3:d,conv_4:h,conv_5:c,conv_6:m,conv_7:f,conv_8:g,conv_9:y,conv_10:b,conv_11:x,conv_12:w,conv_13:I}}function o(){let u=a(1024,256,1,"prediction_layer/conv_0"),p=a(256,512,3,"prediction_layer/conv_1"),l=a(512,128,1,"prediction_layer/conv_2"),d=a(128,256,3,"prediction_layer/conv_3"),h=a(256,128,1,"prediction_layer/conv_4"),c=a(128,256,3,"prediction_layer/conv_5"),m=a(256,64,1,"prediction_layer/conv_6"),f=a(64,128,3,"prediction_layer/conv_7"),g=r(512,12,1,"prediction_layer/box_predictor_0/box_encoding_predictor"),y=r(512,9,1,"prediction_layer/box_predictor_0/class_predictor"),b=r(1024,24,1,"prediction_layer/box_predictor_1/box_encoding_predictor"),x=r(1024,18,1,"prediction_layer/box_predictor_1/class_predictor"),w=r(512,24,1,"prediction_layer/box_predictor_2/box_encoding_predictor"),I=r(512,18,1,"prediction_layer/box_predictor_2/class_predictor"),T=r(256,24,1,"prediction_layer/box_predictor_3/box_encoding_predictor"),C=r(256,18,1,"prediction_layer/box_predictor_3/class_predictor"),E=r(256,24,1,"prediction_layer/box_predictor_4/box_encoding_predictor"),A=r(256,18,1,"prediction_layer/box_predictor_4/class_predictor"),R=r(128,24,1,"prediction_layer/box_predictor_5/box_encoding_predictor"),F=r(128,18,1,"prediction_layer/box_predictor_5/class_predictor");return{conv_0:u,conv_1:p,conv_2:l,conv_3:d,conv_4:h,conv_5:c,conv_6:m,conv_7:f,box_predictor_0:{box_encoding_predictor:g,class_predictor:y},box_predictor_1:{box_encoding_predictor:b,class_predictor:x},box_predictor_2:{box_encoding_predictor:w,class_predictor:I},box_predictor_3:{box_encoding_predictor:T,class_predictor:C},box_predictor_4:{box_encoding_predictor:E,class_predictor:A},box_predictor_5:{box_encoding_predictor:R,class_predictor:F}}}return{extractMobilenetV1Params:i,extractPredictionLayerParams:o}}function rde(e){let t=[],{extractWeights:n,getRemainingWeights:r}=us(e),{extractMobilenetV1Params:a,extractPredictionLayerParams:s}=nde(n,t),i=a(),o=s(),u={extra_dim:Fc(n(5118*4),[1,5118,4])};if(t.push({paramPath:"output_layer/extra_dim"}),r().length!==0)throw new Error(`weights remaing after extract: ${r().length}`);return{params:{mobilenetv1:i,prediction_layer:o,output_layer:u},paramMappings:t}}function ade(e,t){let n=No(e,t);function r(p,l,d){let h=n(`${p}/Conv2d_${l}_pointwise/weights`,4,`${d}/filters`),c=n(`${p}/Conv2d_${l}_pointwise/convolution_bn_offset`,1,`${d}/batch_norm_offset`);return{filters:h,batch_norm_offset:c}}function a(p){let l=`mobilenetv1/conv_${p}`,d=`MobilenetV1/Conv2d_${p}_depthwise`,h=`${l}/depthwise_conv`,c=`${l}/pointwise_conv`,m=n(`${d}/depthwise_weights`,4,`${h}/filters`),f=n(`${d}/BatchNorm/gamma`,1,`${h}/batch_norm_scale`),g=n(`${d}/BatchNorm/beta`,1,`${h}/batch_norm_offset`),y=n(`${d}/BatchNorm/moving_mean`,1,`${h}/batch_norm_mean`),b=n(`${d}/BatchNorm/moving_variance`,1,`${h}/batch_norm_variance`);return{depthwise_conv:{filters:m,batch_norm_scale:f,batch_norm_offset:g,batch_norm_mean:y,batch_norm_variance:b},pointwise_conv:r("MobilenetV1",p,c)}}function s(){return{conv_0:r("MobilenetV1",0,"mobilenetv1/conv_0"),conv_1:a(1),conv_2:a(2),conv_3:a(3),conv_4:a(4),conv_5:a(5),conv_6:a(6),conv_7:a(7),conv_8:a(8),conv_9:a(9),conv_10:a(10),conv_11:a(11),conv_12:a(12),conv_13:a(13)}}function i(p,l){let d=n(`${p}/weights`,4,`${l}/filters`),h=n(`${p}/biases`,1,`${l}/bias`);return{filters:d,bias:h}}function o(p){let l=i(`Prediction/BoxPredictor_${p}/BoxEncodingPredictor`,`prediction_layer/box_predictor_${p}/box_encoding_predictor`),d=i(`Prediction/BoxPredictor_${p}/ClassPredictor`,`prediction_layer/box_predictor_${p}/class_predictor`);return{box_encoding_predictor:l,class_predictor:d}}function u(){return{conv_0:r("Prediction",0,"prediction_layer/conv_0"),conv_1:r("Prediction",1,"prediction_layer/conv_1"),conv_2:r("Prediction",2,"prediction_layer/conv_2"),conv_3:r("Prediction",3,"prediction_layer/conv_3"),conv_4:r("Prediction",4,"prediction_layer/conv_4"),conv_5:r("Prediction",5,"prediction_layer/conv_5"),conv_6:r("Prediction",6,"prediction_layer/conv_6"),conv_7:r("Prediction",7,"prediction_layer/conv_7"),box_predictor_0:o(0),box_predictor_1:o(1),box_predictor_2:o(2),box_predictor_3:o(3),box_predictor_4:o(4),box_predictor_5:o(5)}}return{extractMobilenetV1Params:s,extractPredictionLayerParams:u}}function sde(e){let t=[],{extractMobilenetV1Params:n,extractPredictionLayerParams:r}=ade(e,t),a=e["Output/extra_dim"];if(t.push({originalPath:"Output/extra_dim",paramPath:"output_layer/extra_dim"}),!wd(a))throw new Error(`expected weightMap['Output/extra_dim'] to be a Tensor3D, instead have ${a}`);let s={mobilenetv1:n(),prediction_layer:r(),output_layer:{extra_dim:a}};return ls(e,t),{params:s,paramMappings:t}}function Mr(e,t,n){return W(()=>{let r=fn(e,t.filters,n,"same");return r=J(r,t.batch_norm_offset),on(r,0,6)})}var ide=.0010000000474974513;function ode(e,t,n){return W(()=>{let r=fo(e,t.filters,n,"same");return r=mo(r,t.batch_norm_mean,t.batch_norm_variance,t.batch_norm_offset,t.batch_norm_scale,ide),on(r,0,6)})}function lde(e){return[2,4,6,12].some(t=>t===e)?[2,2]:[1,1]}function ude(e,t){return W(()=>{let n,r=Mr(e,t.conv_0,[2,2]);if([t.conv_1,t.conv_2,t.conv_3,t.conv_4,t.conv_5,t.conv_6,t.conv_7,t.conv_8,t.conv_9,t.conv_10,t.conv_11,t.conv_12,t.conv_13].forEach((a,s)=>{let i=s+1,o=lde(i);r=ode(r,a.depthwise_conv,o),r=Mr(r,a.pointwise_conv,[1,1]),i===11&&(n=r)}),n===null)throw new Error("mobileNetV1 - output of conv layer 11 is null");return{out:r,conv11:n}})}function pde(e,t,n){let r=e.arraySync(),a=Math.min(r[t][0],r[t][2]),s=Math.min(r[t][1],r[t][3]),i=Math.max(r[t][0],r[t][2]),o=Math.max(r[t][1],r[t][3]),u=Math.min(r[n][0],r[n][2]),p=Math.min(r[n][1],r[n][3]),l=Math.max(r[n][0],r[n][2]),d=Math.max(r[n][1],r[n][3]),h=(i-a)*(o-s),c=(l-u)*(d-p);if(h<=0||c<=0)return 0;let m=Math.max(a,u),f=Math.max(s,p),g=Math.min(i,l),y=Math.min(o,d),b=Math.max(g-m,0)*Math.max(y-f,0);return b/(h+c-b)}function dde(e,t,n,r,a){let s=e.shape[0],i=Math.min(n,s),o=t.map((l,d)=>({score:l,boxIndex:d})).filter(l=>l.score>a).sort((l,d)=>d.score-l.score),u=l=>l<=r?1:0,p=[];return o.forEach(l=>{if(p.length>=i)return;let d=l.score;for(let h=p.length-1;h>=0;--h){let c=pde(e,l.boxIndex,p[h]);if(c!==0&&(l.score*=u(c),l.score<=a))break}d===l.score&&p.push(l.boxIndex)}),p}function hde(e){let t=Nt(ze(e,[1,0])),n=[he(t[2],t[0]),he(t[3],t[1])],r=[J(t[0],fe(n[0],2)),J(t[1],fe(n[1],2))];return{sizes:n,centers:r}}function cde(e,t){let{sizes:n,centers:r}=hde(e),a=Nt(ze(t,[1,0])),s=fe(z(gn(fe(a[2],5)),n[0]),2),i=J(z(fe(a[0],10),n[0]),r[0]),o=fe(z(gn(fe(a[3],5)),n[1]),2),u=J(z(fe(a[1],10),n[1]),r[1]);return ze(Lt([he(i,s),he(u,o),J(i,s),J(u,o)]),[1,0])}function mde(e,t,n){return W(()=>{let r=e.shape[0],a=cde(P(Wn(n.extra_dim,[r,1,1]),[-1,4]),P(e,[-1,4]));a=P(a,[r,a.shape[0]/r,4]);let s=mr(Ue(t,[0,0,1],[-1,-1,-1])),i=Ue(s,[0,0,0],[-1,-1,1]);i=P(i,[r,i.shape[1]]);let o=Nt(a),u=Nt(i);return{boxes:o,scores:u}})}function Ao(e,t){return W(()=>{let n=e.shape[0],r=P(Yu(e,t.box_encoding_predictor),[n,-1,1,4]),a=P(Yu(e,t.class_predictor),[n,-1,3]);return{boxPredictionEncoding:r,classPrediction:a}})}function fde(e,t,n){return W(()=>{let r=Mr(e,n.conv_0,[1,1]),a=Mr(r,n.conv_1,[2,2]),s=Mr(a,n.conv_2,[1,1]),i=Mr(s,n.conv_3,[2,2]),o=Mr(i,n.conv_4,[1,1]),u=Mr(o,n.conv_5,[2,2]),p=Mr(u,n.conv_6,[1,1]),l=Mr(p,n.conv_7,[2,2]),d=Ao(t,n.box_predictor_0),h=Ao(e,n.box_predictor_1),c=Ao(a,n.box_predictor_2),m=Ao(i,n.box_predictor_3),f=Ao(u,n.box_predictor_4),g=Ao(l,n.box_predictor_5),y=at([d.boxPredictionEncoding,h.boxPredictionEncoding,c.boxPredictionEncoding,m.boxPredictionEncoding,f.boxPredictionEncoding,g.boxPredictionEncoding],1),b=at([d.classPrediction,h.classPrediction,c.classPrediction,m.classPrediction,f.classPrediction,g.classPrediction],1);return{boxPredictions:y,classPredictions:b}})}var ym=class{constructor({minConfidence:e,maxResults:t}={}){if(this._name="SsdMobilenetv1Options",this._minConfidence=e||.5,this._maxResults=t||100,typeof this._minConfidence!="number"||this._minConfidence<=0||this._minConfidence>=1)throw new Error(`${this._name} - expected minConfidence to be a number between 0 and 1`);if(typeof this._maxResults!="number")throw new Error(`${this._name} - expected maxResults to be a number`)}get minConfidence(){return this._minConfidence}get maxResults(){return this._maxResults}},gde=class extends os{constructor(){super("SsdMobilenetv1")}forwardInput(e){let{params:t}=this;if(!t)throw new Error("SsdMobilenetv1 - load model before inference");return W(()=>{let n=se(e.toBatchTensor(512,!1),"float32"),r=he(fe(n,127.5),1),a=ude(r,t.mobilenetv1),{boxPredictions:s,classPredictions:i}=fde(a.out,a.conv11,t.prediction_layer);return mde(s,i,t.output_layer)})}async forward(e){return this.forwardInput(await xn(e))}async locateFaces(e,t={}){let{maxResults:n,minConfidence:r}=new ym(t),a=await xn(e),{boxes:s,scores:i}=this.forwardInput(a),o=s[0],u=i[0];for(let y=1;y<s.length;y++)s[y].dispose(),i[y].dispose();let p=Array.from(u.dataSync()),l=dde(o,p,n,.5,r),d=a.getReshapedInputDimensions(0),h=a.inputSize,c=h/d.width,m=h/d.height,f=o.arraySync(),g=l.map(y=>{let[b,x]=[Math.max(0,f[y][0]),Math.min(1,f[y][2])].map(T=>T*m),[w,I]=[Math.max(0,f[y][1]),Math.min(1,f[y][3])].map(T=>T*c);return new gr(p[y],new i_(w,b,I-w,x-b),{height:a.getInputHeight(0),width:a.getInputWidth(0)})});return o.dispose(),u.dispose(),g}getDefaultModelName(){return"ssd_mobilenetv1_model"}extractParamsFromWeightMap(e){return sde(e)}extractParams(e){return rde(e)}},yde=.4,bde=[new Xe(.738768,.874946),new Xe(2.42204,2.65704),new Xe(4.30971,7.04493),new Xe(10.246,4.59428),new Xe(12.6868,11.8741)],xde=[new Xe(1.603231,2.094468),new Xe(6.041143,7.080126),new Xe(2.882459,3.518061),new Xe(4.266906,5.178857),new Xe(9.041765,10.66308)],vde=[117.001,114.697,97.404],wde="tiny_yolov2_model",kde="tiny_yolov2_separable_conv_model",th=e=>typeof e=="number";function Ide(e){if(!e)throw new Error(`invalid config: ${e}`);if(typeof e.withSeparableConvs!="boolean")throw new Error(`config.withSeparableConvs has to be a boolean, have: ${e.withSeparableConvs}`);if(!th(e.iouThreshold)||e.iouThreshold<0||e.iouThreshold>1)throw new Error(`config.iouThreshold has to be a number between [0, 1], have: ${e.iouThreshold}`);if(!Array.isArray(e.classes)||!e.classes.length||!e.classes.every(t=>typeof t=="string"))throw new Error(`config.classes has to be an array class names: string[], have: ${JSON.stringify(e.classes)}`);if(!Array.isArray(e.anchors)||!e.anchors.length||!e.anchors.map(t=>t||{}).every(t=>th(t.x)&&th(t.y)))throw new Error(`config.anchors has to be an array of { x: number, y: number }, have: ${JSON.stringify(e.anchors)}`);if(e.meanRgb&&(!Array.isArray(e.meanRgb)||e.meanRgb.length!==3||!e.meanRgb.every(th)))throw new Error(`config.meanRgb has to be an array of shape [number, number, number], have: ${JSON.stringify(e.meanRgb)}`)}function Yx(e){return W(()=>{let t=z(e,we(.10000000149011612));return J(et(he(e,t)),t)})}function ka(e,t){return W(()=>{let n=$r(e,[[0,0],[1,1],[1,1],[0,0]]);return n=fn(n,t.conv.filters,[1,1],"valid"),n=he(n,t.bn.sub),n=z(n,t.bn.truediv),n=J(n,t.conv.bias),Yx(n)})}function Ia(e,t){return W(()=>{let n=$r(e,[[0,0],[1,1],[1,1],[0,0]]);return n=cu(n,t.depthwise_filter,t.pointwise_filter,[1,1],"valid"),n=J(n,t.bias),Yx(n)})}function Sde(e,t){let n=qx(e,t);function r(i,o){let u=Qe(e(i)),p=Qe(e(i));return t.push({paramPath:`${o}/sub`},{paramPath:`${o}/truediv`}),{sub:u,truediv:p}}function a(i,o,u){let p=n(i,o,3,`${u}/conv`),l=r(o,`${u}/bn`);return{conv:p,bn:l}}let s=Kx(e,t);return{extractConvParams:n,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}}function Nde(e,t,n,r){let{extractWeights:a,getRemainingWeights:s}=us(e),i=[],{extractConvParams:o,extractConvWithBatchNormParams:u,extractSeparableConvParams:p}=Sde(a,i),l;if(t.withSeparableConvs){let[d,h,c,m,f,g,y,b,x]=r,w=t.isFirstLayerConv2d?o(d,h,3,"conv0"):p(d,h,"conv0"),I=p(h,c,"conv1"),T=p(c,m,"conv2"),C=p(m,f,"conv3"),E=p(f,g,"conv4"),A=p(g,y,"conv5"),R=b?p(y,b,"conv6"):void 0,F=x?p(b,x,"conv7"):void 0,S=o(x||b||y,5*n,1,"conv8");l={conv0:w,conv1:I,conv2:T,conv3:C,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}else{let[d,h,c,m,f,g,y,b,x]=r,w=u(d,h,"conv0"),I=u(h,c,"conv1"),T=u(c,m,"conv2"),C=u(m,f,"conv3"),E=u(f,g,"conv4"),A=u(g,y,"conv5"),R=u(y,b,"conv6"),F=u(b,x,"conv7"),S=o(x,5*n,1,"conv8");l={conv0:w,conv1:I,conv2:T,conv3:C,conv4:E,conv5:A,conv6:R,conv7:F,conv8:S}}if(s().length!==0)throw new Error(`weights remaing after extract: ${s().length}`);return{params:l,paramMappings:i}}function Tde(e,t){let n=No(e,t);function r(o){let u=n(`${o}/sub`,1),p=n(`${o}/truediv`,1);return{sub:u,truediv:p}}function a(o){let u=n(`${o}/filters`,4),p=n(`${o}/bias`,1);return{filters:u,bias:p}}function s(o){let u=a(`${o}/conv`),p=r(`${o}/bn`);return{conv:u,bn:p}}let i=Xx(n);return{extractConvParams:a,extractConvWithBatchNormParams:s,extractSeparableConvParams:i}}function Cde(e,t){let n=[],{extractConvParams:r,extractConvWithBatchNormParams:a,extractSeparableConvParams:s}=Tde(e,n),i;if(t.withSeparableConvs){let o=t.filterSizes&&t.filterSizes.length||9;i={conv0:t.isFirstLayerConv2d?r("conv0"):s("conv0"),conv1:s("conv1"),conv2:s("conv2"),conv3:s("conv3"),conv4:s("conv4"),conv5:s("conv5"),conv6:o>7?s("conv6"):void 0,conv7:o>8?s("conv7"):void 0,conv8:r("conv8")}}else i={conv0:a("conv0"),conv1:a("conv1"),conv2:a("conv2"),conv3:a("conv3"),conv4:a("conv4"),conv5:a("conv5"),conv6:a("conv6"),conv7:a("conv7"),conv8:r("conv8")};return ls(e,n),{params:i,paramMappings:n}}var Qx=class{constructor({inputSize:e,scoreThreshold:t}={}){if(this._name="TinyYolov2Options",this._inputSize=e||416,this._scoreThreshold=t||.5,typeof this._inputSize!="number"||this._inputSize%32!==0)throw new Error(`${this._name} - expected inputSize to be a number divisible by 32`);if(typeof this._scoreThreshold!="number"||this._scoreThreshold<=0||this._scoreThreshold>=1)throw new Error(`${this._name} - expected scoreThreshold to be a number between 0 and 1`)}get inputSize(){return this._inputSize}get scoreThreshold(){return this._scoreThreshold}},W_=class extends os{constructor(e){super("TinyYolov2"),Ide(e),this._config=e}get config(){return this._config}get withClassScores(){return this.config.withClassScores||this.config.classes.length>1}get boxEncodingSize(){return 5+(this.withClassScores?this.config.classes.length:0)}runTinyYolov2(e,t){let n=ka(e,t.conv0);return n=Ut(n,[2,2],[2,2],"same"),n=ka(n,t.conv1),n=Ut(n,[2,2],[2,2],"same"),n=ka(n,t.conv2),n=Ut(n,[2,2],[2,2],"same"),n=ka(n,t.conv3),n=Ut(n,[2,2],[2,2],"same"),n=ka(n,t.conv4),n=Ut(n,[2,2],[2,2],"same"),n=ka(n,t.conv5),n=Ut(n,[2,2],[1,1],"same"),n=ka(n,t.conv6),n=ka(n,t.conv7),Yu(n,t.conv8,"valid",!1)}runMobilenet(e,t){let n=this.config.isFirstLayerConv2d?Yx(Yu(e,t.conv0,"valid",!1)):Ia(e,t.conv0);return n=Ut(n,[2,2],[2,2],"same"),n=Ia(n,t.conv1),n=Ut(n,[2,2],[2,2],"same"),n=Ia(n,t.conv2),n=Ut(n,[2,2],[2,2],"same"),n=Ia(n,t.conv3),n=Ut(n,[2,2],[2,2],"same"),n=Ia(n,t.conv4),n=Ut(n,[2,2],[2,2],"same"),n=Ia(n,t.conv5),n=Ut(n,[2,2],[1,1],"same"),n=t.conv6?Ia(n,t.conv6):n,n=t.conv7?Ia(n,t.conv7):n,Yu(n,t.conv8,"valid",!1)}forwardInput(e,t){let{params:n}=this;if(!n)throw new Error("TinyYolov2 - load model before inference");return W(()=>{let r=se(e.toBatchTensor(t,!1),"float32");return r=this.config.meanRgb?kd(r,this.config.meanRgb):r,r=r.div(255),this.config.withSeparableConvs?this.runMobilenet(r,n):this.runTinyYolov2(r,n)})}async forward(e,t){return this.forwardInput(await xn(e),t)}async detect(e,t={}){let{inputSize:n,scoreThreshold:r}=new Qx(t),a=await xn(e),s=await this.forwardInput(a,n),i=W(()=>Nt(s)[0].expandDims()),o={width:a.getInputWidth(0),height:a.getInputHeight(0)},u=await this.extractBoxes(i,a.getReshapedInputDimensions(0),r);s.dispose(),i.dispose();let p=u.map(c=>c.box),l=u.map(c=>c.score),d=u.map(c=>c.classScore),h=u.map(c=>this.config.classes[c.label]);return dpe(p.map(c=>c.rescale(n)),l,this.config.iouThreshold,!0).map(c=>new Bx(l[c],d[c],h[c],p[c],o))}getDefaultModelName(){return""}extractParamsFromWeightMap(e){return Cde(e,this.config)}extractParams(e){let t=this.config.filterSizes||W_.DEFAULT_FILTER_SIZES,n=t?t.length:void 0;if(n!==7&&n!==8&&n!==9)throw new Error(`TinyYolov2 - expected 7 | 8 | 9 convolutional filters, but found ${n} filterSizes in config`);return Nde(e,this.config,this.boxEncodingSize,t)}async extractBoxes(e,t,n){let{width:r,height:a}=t,s=Math.max(r,a),i=s/r,o=s/a,u=e.shape[1],p=this.config.anchors.length,[l,d,h]=W(()=>{let g=e.reshape([u,u,p,this.boxEncodingSize]),y=g.slice([0,0,0,0],[u,u,p,4]),b=g.slice([0,0,0,4],[u,u,p,1]),x=this.withClassScores?ts(g.slice([0,0,0,5],[u,u,p,this.config.classes.length]),3):we(0);return[y,b,x]}),c=[],m=await d.array(),f=await l.array();for(let g=0;g<u;g++)for(let y=0;y<u;y++)for(let b=0;b<p;b++){let x=Wm(m[g][y][b][0]);if(!n||x>n){let w=(y+Wm(f[g][y][b][0]))/u*i,I=(g+Wm(f[g][y][b][1]))/u*o,T=Math.exp(f[g][y][b][2])*this.config.anchors[b].x/u*i,C=Math.exp(f[g][y][b][3])*this.config.anchors[b].y/u*o,E=w-T/2,A=I-C/2,R={row:g,col:y,anchor:b},{classScore:F,label:S}=this.withClassScores?await this.extractPredictedClass(h,R):{classScore:1,label:0};c.push({box:new s_(E,A,E+T,A+C),score:x,classScore:x*F,label:S,...R})}}return l.dispose(),d.dispose(),h.dispose(),c}async extractPredictedClass(e,t){let{row:n,col:r,anchor:a}=t,s=await e.array();return Array(this.config.classes.length).fill(0).map((i,o)=>s[n][r][a][o]).map((i,o)=>({classScore:i,label:o})).reduce((i,o)=>i.classScore>o.classScore?i:o)}},ev=W_;ev.DEFAULT_FILTER_SIZES=[3,16,32,64,128,256,512,1024,1024];var _de=class extends ev{constructor(e=!0){let t={withSeparableConvs:e,iouThreshold:yde,classes:["face"],...e?{anchors:xde,meanRgb:vde}:{anchors:bde,withClassScores:!0}};super(t)}get withSeparableConvs(){return this.config.withSeparableConvs}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new gr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return this.withSeparableConvs?kde:wde}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},Ede=class extends Qx{constructor(){super(...arguments),this._name="TinyFaceDetectorOptions"}},Id=class{async then(e){return e(await this.run())}async run(){throw new Error("ComposableTask - run is not implemented")}};async function bm(e,t,n,r,a=({alignedRect:s})=>s){let s=e.map(u=>$_(u)?a(u):u.detection),i=r||(t instanceof Ae?await jx(t,s):await Hx(t,s)),o=await n(i);return i.forEach(u=>u instanceof Ae&&u.dispose()),o}async function tv(e,t,n,r,a){return bm([e],t,async s=>n(s[0]),r,a)}var $de=.4,Ade=[new Xe(1.603231,2.094468),new Xe(6.041143,7.080126),new Xe(2.882459,3.518061),new Xe(4.266906,5.178857),new Xe(9.041765,10.66308)],Fde=[117.001,114.697,97.404],Rde=class extends ev{constructor(){let e={withSeparableConvs:!0,iouThreshold:$de,classes:["face"],anchors:Ade,meanRgb:Fde,isFirstLayerConv2d:!0,filterSizes:[3,16,32,64,128,256,512]};super(e)}get anchors(){return this.config.anchors}async locateFaces(e,t){return(await this.detect(e,t)).map(n=>new gr(n.score,n.relativeBox,{width:n.imageWidth,height:n.imageHeight}))}getDefaultModelName(){return"tiny_face_detector_model"}extractParamsFromWeightMap(e){return super.extractParamsFromWeightMap(e)}},cn={ssdMobilenetv1:new gde,tinyFaceDetector:new Rde,tinyYolov2:new _de,faceLandmark68Net:new Gpe,faceLandmark68TinyNet:new Kpe,faceRecognitionNet:new tde,faceExpressionNet:new Epe,ageGenderNet:new Upe},V_=class extends Id{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},nv=class extends V_{async run(){let e=await this.parentTask,t=await bm(e,this.input,async n=>Promise.all(n.map(r=>cn.faceExpressionNet.predictExpressions(r))),this.extractedFaces);return e.map((n,r)=>E_(n,t[r]))}withAgeAndGender(){return new iv(this,this.input)}},rv=class extends V_{async run(){let e=await this.parentTask;if(!e)return;let t=await tv(e,this.input,n=>cn.faceExpressionNet.predictExpressions(n),this.extractedFaces);return E_(e,t)}withAgeAndGender(){return new ov(this,this.input)}},av=class extends nv{withAgeAndGender(){return new lv(this,this.input)}withFaceDescriptors(){return new pv(this,this.input)}},sv=class extends rv{withAgeAndGender(){return new uv(this,this.input)}withFaceDescriptor(){return new dv(this,this.input)}},U_=class extends Id{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.extractedFaces=n}},iv=class extends U_{async run(){let e=await this.parentTask,t=await bm(e,this.input,async n=>Promise.all(n.map(r=>cn.ageGenderNet.predictAgeAndGender(r))),this.extractedFaces);return e.map((n,r)=>{let{age:a,gender:s,genderProbability:i}=t[r];return P_(B_(n,s,i),a)})}withFaceExpressions(){return new nv(this,this.input)}},ov=class extends U_{async run(){let e=await this.parentTask;if(!e)return;let{age:t,gender:n,genderProbability:r}=await tv(e,this.input,a=>cn.ageGenderNet.predictAgeAndGender(a),this.extractedFaces);return P_(B_(e,n,r),t)}withFaceExpressions(){return new rv(this,this.input)}},lv=class extends iv{withFaceExpressions(){return new av(this,this.input)}withFaceDescriptors(){return new pv(this,this.input)}},uv=class extends ov{withFaceExpressions(){return new sv(this,this.input)}withFaceDescriptor(){return new dv(this,this.input)}},G_=class extends Id{constructor(e,t){super(),this.parentTask=e,this.input=t}},pv=class extends G_{async run(){let e=await this.parentTask;return(await bm(e,this.input,t=>Promise.all(t.map(n=>cn.faceRecognitionNet.computeFaceDescriptor(n))),null,t=>t.landmarks.align(null,{useDlibAlignment:!0}))).map((t,n)=>z_(e[n],t))}withFaceExpressions(){return new av(this,this.input)}withAgeAndGender(){return new lv(this,this.input)}},dv=class extends G_{async run(){let e=await this.parentTask;if(!e)return;let t=await tv(e,this.input,n=>cn.faceRecognitionNet.computeFaceDescriptor(n),null,n=>n.landmarks.align(null,{useDlibAlignment:!0}));return z_(e,t)}withFaceExpressions(){return new sv(this,this.input)}withAgeAndGender(){return new uv(this,this.input)}},H_=class extends Id{constructor(e,t,n){super(),this.parentTask=e,this.input=t,this.useTinyLandmarkNet=n}get landmarkNet(){return this.useTinyLandmarkNet?cn.faceLandmark68TinyNet:cn.faceLandmark68Net}},Dde=class extends H_{async run(){let e=await this.parentTask,t=e.map(a=>a.detection),n=this.input instanceof Ae?await jx(this.input,t):await Hx(this.input,t),r=await Promise.all(n.map(a=>this.landmarkNet.detectLandmarks(a)));return n.forEach(a=>a instanceof Ae&&a.dispose()),e.filter((a,s)=>r[s]).map((a,s)=>A_(a,r[s]))}withFaceExpressions(){return new av(this,this.input)}withAgeAndGender(){return new lv(this,this.input)}withFaceDescriptors(){return new pv(this,this.input)}},Mde=class extends H_{async run(){let e=await this.parentTask;if(!e)return;let{detection:t}=e,n=this.input instanceof Ae?await jx(this.input,[t]):await Hx(this.input,[t]),r=await this.landmarkNet.detectLandmarks(n[0]);return n.forEach(a=>a instanceof Ae&&a.dispose()),A_(e,r)}withFaceExpressions(){return new sv(this,this.input)}withAgeAndGender(){return new uv(this,this.input)}withFaceDescriptor(){return new dv(this,this.input)}},j_=class extends Id{constructor(e,t=new ym){super(),this.input=e,this.options=t}},Ode=class extends j_{async run(){let{input:e,options:t}=this,n;if(t instanceof Ede)n=cn.tinyFaceDetector.locateFaces(e,t);else if(t instanceof ym)n=cn.ssdMobilenetv1.locateFaces(e,t);else if(t instanceof Qx)n=cn.tinyYolov2.locateFaces(e,t);else throw new Error("detectFaces - expected options to be instance of TinyFaceDetectorOptions | SsdMobilenetv1Options | TinyYolov2Options");return n}runAndExtendWithFaceDetections(){return new Promise((e,t)=>{this.run().then(n=>e(n.map(r=>l_({},r)))).catch(n=>t(n))})}withFaceLandmarks(e=!1){return new Dde(this.runAndExtendWithFaceDetections(),this.input,e)}withFaceExpressions(){return new nv(this.runAndExtendWithFaceDetections(),this.input)}withAgeAndGender(){return new iv(this.runAndExtendWithFaceDetections(),this.input)}},Lde=class extends j_{async run(){let e=await new Ode(this.input,this.options),t=e[0];return e.forEach(n=>{n.score>t.score&&(t=n)}),t}runAndExtendWithFaceDetection(){return new Promise(async e=>{let t=await this.run();e(t?l_({},t):void 0)})}withFaceLandmarks(e=!1){return new Mde(this.runAndExtendWithFaceDetection(),this.input,e)}withFaceExpressions(){return new rv(this.runAndExtendWithFaceDetection(),this.input)}withAgeAndGender(){return new ov(this.runAndExtendWithFaceDetection(),this.input)}};function h0(e,t=new ym){return new Lde(e,t)}function zde(e,t){if(e.length!==t.length)throw new Error("euclideanDistance: arr1.length !== arr2.length");let n=Array.from(e),r=Array.from(t);return Math.sqrt(n.map((a,s)=>a-r[s]).reduce((a,s)=>a+s*s,0))}const Pde=async()=>{const e="/";return await cn.ssdMobilenetv1.loadFromUri(e),await cn.tinyFaceDetector.loadFromUri(e),await cn.faceLandmark68Net.loadFromUri(e),await cn.faceRecognitionNet.loadFromUri(e),await cn.faceExpressionNet.loadFromUri(e),1},Bde=async(e,t)=>{const n=await p0(e),r=await p0(t),a=await h0(n).withFaceLandmarks().withFaceDescriptor(),s=await h0(r).withFaceLandmarks().withFaceDescriptor();return!a||!s?(console.error("No face Detected!"),!1):zde(a.descriptor,s.descriptor)<.6};export{Bde as compareFaces,Pde as loadModels};
